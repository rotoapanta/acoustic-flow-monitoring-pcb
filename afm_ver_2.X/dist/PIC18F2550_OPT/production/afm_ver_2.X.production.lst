

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Apr 24 00:55:17 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    65   000000                     
    66                           ; Version 2.40
    67                           ; Generated 17/11/2021 GMT
    68                           ; 
    69                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution. Publication is not required when
    83                           ;        this file is used in an embedded application.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F2550 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101   000000                     
   102                           	psect	idataBANK0
   103   002820                     __pidataBANK0:
   104                           	callstack 0
   105                           
   106                           ;initializer for _NIVEL_UNBRAL_500MV
   107   002820  199A               	dw	6554
   108   000000                     _ADRESL	set	4035
   109   000000                     _ADRESH	set	4036
   110   000000                     _TXREG	set	4013
   111   000000                     _TXSTAbits	set	4012
   112   000000                     _SPBRG	set	4015
   113   000000                     _SPBRGH	set	4016
   114   000000                     _BAUDCONbits	set	4024
   115   000000                     _ADCON0bits	set	4034
   116   000000                     _SSPCON1bits	set	4038
   117   000000                     _SSPSTATbits	set	4039
   118   000000                     _SSPCON1	set	4038
   119   000000                     _T2CONbits	set	4042
   120   000000                     _UCONbits	set	3949
   121   000000                     _UCFGbits	set	3951
   122   000000                     _OSCCONbits	set	4051
   123   000000                     _T0CONbits	set	4053
   124   000000                     _TMR0L	set	4054
   125   000000                     _INTCONbits	set	4082
   126   000000                     _PORTAbits	set	3968
   127   000000                     _PORTBbits	set	3969
   128   000000                     _TRISCbits	set	3988
   129   000000                     _PIE1bits	set	3997
   130   000000                     _PIR1bits	set	3998
   131   000000                     _IPR1bits	set	3999
   132   000000                     _RCSTAbits	set	4011
   133   000000                     _RCREG	set	4014
   134   000000                     _INTCON2bits	set	4081
   135   000000                     _TMR0H	set	4055
   136   000000                     _SSPBUF	set	4041
   137   000000                     _SSPSTAT	set	4039
   138   000000                     _T2CON	set	4042
   139   000000                     _RCONbits	set	4048
   140   000000                     _PORTCbits	set	3970
   141   000000                     _LATBbits	set	3978
   142   000000                     _TRISAbits	set	3986
   143   000000                     _TRISBbits	set	3987
   144   000000                     _TMR2	set	4044
   145   000000                     _PR2	set	4043
   146   000000                     _ADCON2bits	set	4032
   147   000000                     _ADCON1bits	set	4033
   148                           
   149                           	psect	smallconst
   150   000800                     __psmallconst:
   151                           	callstack 0
   152   000800  00                 	db	0
   153   000801                     STR_4:
   154   000801  25                 	db	37
   155   000802  30                 	db	48	;'0'
   156   000803  31                 	db	49	;'1'
   157   000804  64                 	db	100	;'d'
   158   000805  25                 	db	37
   159   000806  30                 	db	48	;'0'
   160   000807  32                 	db	50	;'2'
   161   000808  64                 	db	100	;'d'
   162   000809  20                 	db	32
   163   00080A  2B                 	db	43
   164   00080B  25                 	db	37
   165   00080C  30                 	db	48	;'0'
   166   00080D  34                 	db	52	;'4'
   167   00080E  75                 	db	117	;'u'
   168   00080F  20                 	db	32
   169   000810  2B                 	db	43
   170   000811  25                 	db	37
   171   000812  30                 	db	48	;'0'
   172   000813  34                 	db	52	;'4'
   173   000814  75                 	db	117	;'u'
   174   000815  20                 	db	32
   175   000816  2B                 	db	43
   176   000817  25                 	db	37
   177   000818  30                 	db	48	;'0'
   178   000819  34                 	db	52	;'4'
   179   00081A  75                 	db	117	;'u'
   180   00081B  20                 	db	32
   181   00081C  2B                 	db	43
   182   00081D  25                 	db	37
   183   00081E  30                 	db	48	;'0'
   184   00081F  34                 	db	52	;'4'
   185   000820  75                 	db	117	;'u'
   186   000821  20                 	db	32
   187   000822  63                 	db	99	;'c'
   188   000823  00                 	db	0
   189   000824                     STR_5:
   190   000824  2B                 	db	43
   191   000825  25                 	db	37
   192   000826  30                 	db	48	;'0'
   193   000827  34                 	db	52	;'4'
   194   000828  75                 	db	117	;'u'
   195   000829  20                 	db	32
   196   00082A  0A                 	db	10
   197   00082B  0D                 	db	13
   198   00082C  00                 	db	0
   199   00082D                     STR_1:
   200   00082D  0A                 	db	10
   201   00082E  00                 	db	0
   202   00082F  00                 	db	0	; dummy byte at the end
   203   000000                     
   204                           ; #config settings
   205                           
   206                           	psect	cinit
   207   0024A6                     __pcinit:
   208                           	callstack 0
   209   0024A6                     start_initialization:
   210                           	callstack 0
   211   0024A6                     __initialization:
   212                           	callstack 0
   213                           
   214                           ; Initialize objects allocated to BANK0 (2 bytes)
   215                           ; load TBLPTR registers with __pidataBANK0
   216   0024A6  0E20               	movlw	low __pidataBANK0
   217   0024A8  6EF6               	movwf	tblptrl,c
   218   0024AA  0E28               	movlw	high __pidataBANK0
   219   0024AC  6EF7               	movwf	tblptrh,c
   220   0024AE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   221   0024B0  6EF8               	movwf	tblptru,c
   222   0024B2  0009               	tblrd		*+	;fetch initializer
   223   0024B4  CFF5 F0FE          	movff	tablat,__pdataBANK0
   224   0024B8  0009               	tblrd		*+	;fetch initializer
   225   0024BA  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
   226                           
   227                           ; Clear objects allocated to BANK1 (161 bytes)
   228   0024BE  EE01  F000         	lfsr	0,__pbssBANK1
   229   0024C2  0EA1               	movlw	161
   230   0024C4                     clear_0:
   231   0024C4  6AEE               	clrf	postinc0,c
   232   0024C6  06E8               	decf	wreg,f,c
   233   0024C8  E1FD               	bnz	clear_0
   234                           
   235                           ; Clear objects allocated to BANK0 (104 bytes)
   236   0024CA  EE00  F060         	lfsr	0,__pbssBANK0
   237   0024CE  0E68               	movlw	104
   238   0024D0                     clear_1:
   239   0024D0  6AEE               	clrf	postinc0,c
   240   0024D2  06E8               	decf	wreg,f,c
   241   0024D4  E1FD               	bnz	clear_1
   242                           
   243                           ; Clear objects allocated to COMRAM (29 bytes)
   244   0024D6  EE00  F024         	lfsr	0,__pbssCOMRAM
   245   0024DA  0E1D               	movlw	29
   246   0024DC                     clear_2:
   247   0024DC  6AEE               	clrf	postinc0,c
   248   0024DE  06E8               	decf	wreg,f,c
   249   0024E0  E1FD               	bnz	clear_2
   250   0024E2                     end_of_initialization:
   251                           	callstack 0
   252   0024E2                     __end_of__initialization:
   253                           	callstack 0
   254   0024E2  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   255   0024E4  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   256   0024E6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   257   0024E8  6EF8               	movwf	tblptru,c
   258   0024EA  0100               	movlb	0
   259   0024EC  EF18  F004         	goto	_main	;jump to C main() function
   260                           
   261                           	psect	bssCOMRAM
   262   000024                     __pbssCOMRAM:
   263                           	callstack 0
   264   000024                     _width:
   265                           	callstack 0
   266   000024                     	ds	2
   267   000026                     _prec:
   268                           	callstack 0
   269   000026                     	ds	2
   270   000028                     _cont_task5:
   271                           	callstack 0
   272   000028                     	ds	2
   273   00002A                     _cont_task4:
   274                           	callstack 0
   275   00002A                     	ds	2
   276   00002C                     _cont_task3:
   277                           	callstack 0
   278   00002C                     	ds	2
   279   00002E                     _cont_task2:
   280                           	callstack 0
   281   00002E                     	ds	2
   282   000030                     _cont_task1:
   283                           	callstack 0
   284   000030                     	ds	2
   285   000032                     _cont_task0:
   286                           	callstack 0
   287   000032                     	ds	2
   288   000034                     _contador_minutos_t0:
   289                           	callstack 0
   290   000034                     	ds	2
   291   000036                     _flags:
   292                           	callstack 0
   293   000036                     	ds	1
   294   000037                     	ds	1
   295   000038                     _longitud_paq_datos:
   296                           	callstack 0
   297   000038                     	ds	1
   298   000039                     _dato_recibido:
   299                           	callstack 0
   300   000039                     	ds	1
   301   00003A                     _HABILITAR_TASK10:
   302                           	callstack 0
   303   00003A                     	ds	1
   304   00003B                     _HABILITAR_TASK9:
   305                           	callstack 0
   306   00003B                     	ds	1
   307   00003C                     _HABILITAR_TASK8:
   308                           	callstack 0
   309   00003C                     	ds	1
   310   00003D                     _HABILITAR_TASK7:
   311                           	callstack 0
   312   00003D                     	ds	1
   313   00003E                     _HABILITAR_TASK6:
   314                           	callstack 0
   315   00003E                     	ds	1
   316   00003F                     _HABILITAR_TASK5:
   317                           	callstack 0
   318   00003F                     	ds	1
   319   000040                     	ds	1
   320                           
   321                           	psect	bssBANK0
   322   000060                     __pbssBANK0:
   323                           	callstack 0
   324   000060                     	ds	4
   325   000064                     	ds	4
   326   000068                     _medida_nivel_bateria_flt:
   327                           	callstack 0
   328   000068                     	ds	4
   329   00006C                     _dato_spi_high_band:
   330                           	callstack 0
   331   00006C                     	ds	4
   332   000070                     _dato_spi_low_band:
   333                           	callstack 0
   334   000070                     	ds	4
   335   000074                     _dato_spi_full_band:
   336                           	callstack 0
   337   000074                     	ds	4
   338   000078                     _resultado_adc_flotante@interrupt_manager$F664:
   339                           	callstack 0
   340   000078                     	ds	4
   341   00007C                     _suma_lectura_adc@interrupt_manager$F663:
   342                           	callstack 0
   343   00007C                     	ds	4
   344   000080                     _temp_num_minutos_t0:
   345                           	callstack 0
   346   000080                     	ds	4
   347   000084                     	ds	4
   348   000088                     	ds	4
   349   00008C                     _medida_nivel_bateria_dec:
   350                           	callstack 0
   351   00008C                     	ds	2
   352   00008E                     _medida_nivel_bateria_pc:
   353                           	callstack 0
   354   00008E                     	ds	2
   355   000090                     _CONT_TIEMPO_CHEKEO:
   356                           	callstack 0
   357   000090                     	ds	2
   358   000092                     _CONT_TIEMPO_UMBRAL:
   359                           	callstack 0
   360   000092                     	ds	2
   361   000094                     _lectura_sensor_low_band_test:
   362                           	callstack 0
   363   000094                     	ds	2
   364   000096                     _check_sum_valor_calculado:
   365                           	callstack 0
   366   000096                     	ds	2
   367   000098                     _lectura_sensor_high_band:
   368                           	callstack 0
   369   000098                     	ds	2
   370   00009A                     _lectura_sensor_low_band:
   371                           	callstack 0
   372   00009A                     	ds	2
   373   00009C                     _lectura_sensor_full_band:
   374                           	callstack 0
   375   00009C                     	ds	2
   376   00009E                     _dato_spi_temp_h:
   377                           	callstack 0
   378   00009E                     	ds	2
   379   0000A0                     _dato_spi_temp_l:
   380                           	callstack 0
   381   0000A0                     	ds	2
   382   0000A2                     _dato_spi_temp_f:
   383                           	callstack 0
   384   0000A2                     	ds	2
   385   0000A4                     _cont_task10:
   386                           	callstack 0
   387   0000A4                     	ds	2
   388   0000A6                     _cont_task9:
   389                           	callstack 0
   390   0000A6                     	ds	2
   391   0000A8                     _cont_task8:
   392                           	callstack 0
   393   0000A8                     	ds	2
   394   0000AA                     _cont_task7:
   395                           	callstack 0
   396   0000AA                     	ds	2
   397   0000AC                     _cont_task6:
   398                           	callstack 0
   399   0000AC                     	ds	2
   400   0000AE                     _Lectura_ADC_CH0:
   401                           	callstack 0
   402   0000AE                     	ds	2
   403   0000B0                     _DATOS_LISTOS_EMPAQUEADO:
   404                           	callstack 0
   405   0000B0                     	ds	1
   406   0000B1                     _DATOS_LISTOS_SENSOR_AFM:
   407                           	callstack 0
   408   0000B1                     	ds	1
   409   0000B2                     _DATOS_LISTOS_ADC_BAT:
   410                           	callstack 0
   411   0000B2                     	ds	1
   412   0000B3                     _HABILITAR_VERIFICAR_UMBRAL:
   413                           	callstack 0
   414   0000B3                     	ds	1
   415   0000B4                     _HABILITAR_LECTURA_SENSOR:
   416                           	callstack 0
   417   0000B4                     	ds	1
   418   0000B5                     _HABILITAR_TX_DATOS_AFM:
   419                           	callstack 0
   420   0000B5                     	ds	1
   421   0000B6                     _frecuencia_tx_datos_pc:
   422                           	callstack 0
   423   0000B6                     	ds	1
   424   0000B7                     _ALARMA_ACTIVA:
   425                           	callstack 0
   426   0000B7                     	ds	1
   427   0000B8                     _contador_lectura_adc@interrupt_manager$F662:
   428                           	callstack 0
   429   0000B8                     	ds	1
   430   0000B9                     _num_de_estacion:
   431                           	callstack 0
   432   0000B9                     	ds	1
   433   0000BA                     _frec_tx_datos:
   434                           	callstack 0
   435   0000BA                     	ds	1
   436   0000BB                     _HABILITAR_TAREA_MINUTOS_SOL:
   437                           	callstack 0
   438   0000BB                     	ds	1
   439   0000BC                     _HABILITAR_TASK4:
   440                           	callstack 0
   441   0000BC                     	ds	1
   442   0000BD                     _HABILITAR_TASK3:
   443                           	callstack 0
   444   0000BD                     	ds	1
   445   0000BE                     _HABILITAR_TASK2:
   446                           	callstack 0
   447   0000BE                     	ds	1
   448   0000BF                     _HABILITAR_TASK1:
   449                           	callstack 0
   450   0000BF                     	ds	1
   451   0000C0                     _HABILITAR_TASK0:
   452                           	callstack 0
   453   0000C0                     	ds	1
   454   0000C1                     _contador_pluviometro:
   455                           	callstack 0
   456   0000C1                     	ds	1
   457   0000C2                     _FLANCO_NEG:
   458                           	callstack 0
   459   0000C2                     	ds	1
   460   0000C3                     _HABLILITAR_LECTURA_CH0:
   461                           	callstack 0
   462   0000C3                     	ds	1
   463   0000C4                     _NUM_MINUTOS_T0:
   464                           	callstack 0
   465   0000C4                     	ds	4
   466                           
   467                           	psect	dataBANK0
   468   0000FE                     __pdataBANK0:
   469                           	callstack 0
   470   0000FE                     _NIVEL_UNBRAL_500MV:
   471                           	callstack 0
   472   0000FE                     	ds	2
   473                           
   474                           	psect	bssBANK1
   475   000100                     __pbssBANK1:
   476                           	callstack 0
   477   000100                     _datos_sensores_afm_pc:
   478                           	callstack 0
   479   000100                     	ds	60
   480   00013C                     _datos_sensores_afm_radio:
   481                           	callstack 0
   482   00013C                     	ds	60
   483   000178                     _dbuf:
   484                           	callstack 0
   485   000178                     	ds	32
   486   000198                     _check_sum_str:
   487                           	callstack 0
   488   000198                     	ds	9
   489                           
   490                           	psect	cstackBANK1
   491   0001A1                     __pcstackBANK1:
   492                           	callstack 0
   493   0001A1                     ?_vfprintf:
   494                           	callstack 0
   495   0001A1                     vfprintf@fp:
   496                           	callstack 0
   497   0001A1                     ___fldiv@rem:
   498                           	callstack 0
   499                           
   500                           ; 4 bytes @ 0x0
   501   0001A1                     	ds	2
   502   0001A3                     vfprintf@fmt:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x2
   506   0001A3                     	ds	1
   507   0001A4                     vfprintf@ap:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x3
   511   0001A4                     	ds	1
   512   0001A5                     ___fldiv@sign:
   513                           	callstack 0
   514                           
   515                           ; 1 bytes @ 0x4
   516   0001A5                     	ds	1
   517   0001A6                     ?_sprintf:
   518                           	callstack 0
   519   0001A6                     ___fldiv@new_exp:
   520                           	callstack 0
   521   0001A6                     sprintf@s:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x5
   525   0001A6                     	ds	2
   526   0001A8                     sprintf@fmt:
   527                           	callstack 0
   528   0001A8                     ___fldiv@grs:
   529                           	callstack 0
   530                           
   531                           ; 4 bytes @ 0x7
   532   0001A8                     	ds	4
   533   0001AC                     ___fldiv@bexp:
   534                           	callstack 0
   535                           
   536                           ; 1 bytes @ 0xB
   537   0001AC                     	ds	1
   538   0001AD                     ___fldiv@aexp:
   539                           	callstack 0
   540                           
   541                           ; 1 bytes @ 0xC
   542   0001AD                     	ds	1
   543   0001AE                     ??___fltol:
   544                           
   545                           ; 1 bytes @ 0xD
   546   0001AE                     	ds	7
   547   0001B5                     sprintf@ap:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x14
   551   0001B5                     	ds	2
   552   0001B7                     sprintf@f:
   553                           	callstack 0
   554                           
   555                           ; 12 bytes @ 0x16
   556   0001B7                     	ds	12
   557   0001C3                     main@HABILITAR_ENVIAR_DATOS_PC:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x22
   561   0001C3                     	ds	1
   562   0001C4                     main@k:
   563                           	callstack 0
   564                           
   565                           ; 1 bytes @ 0x23
   566   0001C4                     	ds	1
   567   0001C5                     main@j:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0x24
   571   0001C5                     	ds	1
   572   0001C6                     main@i:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0x25
   576   0001C6                     	ds	1
   577                           
   578                           	psect	cstackBANK0
   579   0000C8                     __pcstackBANK0:
   580                           	callstack 0
   581   0000C8                     ??_fputc:
   582   0000C8                     ??___xxtofl:
   583   0000C8                     ?___lldiv:
   584                           	callstack 0
   585   0000C8                     ___awdiv@counter:
   586                           	callstack 0
   587   0000C8                     ___awmod@counter:
   588                           	callstack 0
   589   0000C8                     ___lwdiv@counter:
   590                           	callstack 0
   591   0000C8                     ___wmul@product:
   592                           	callstack 0
   593   0000C8                     ___lldiv@dividend:
   594                           	callstack 0
   595                           
   596                           ; 4 bytes @ 0x0
   597   0000C8                     	ds	1
   598   0000C9                     ___awdiv@sign:
   599                           	callstack 0
   600   0000C9                     ___awmod@sign:
   601                           	callstack 0
   602   0000C9                     ___lwdiv@quotient:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x1
   606   0000C9                     	ds	1
   607   0000CA                     ?_abs:
   608                           	callstack 0
   609   0000CA                     ?_read_prec_or_width:
   610                           	callstack 0
   611   0000CA                     read_prec_or_width@fmt:
   612                           	callstack 0
   613   0000CA                     ___awdiv@quotient:
   614                           	callstack 0
   615   0000CA                     abs@a:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x2
   619   0000CA                     	ds	1
   620   0000CB                     read_prec_or_width@ap:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x3
   624   0000CB                     	ds	1
   625   0000CC                     ??_abs:
   626   0000CC                     ___xxtofl@sign:
   627                           	callstack 0
   628   0000CC                     ___lldiv@divisor:
   629                           	callstack 0
   630                           
   631                           ; 4 bytes @ 0x4
   632   0000CC                     	ds	1
   633   0000CD                     ??_read_prec_or_width:
   634   0000CD                     ___xxtofl@exp:
   635                           	callstack 0
   636   0000CD                     fputs@s:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x5
   640   0000CD                     	ds	1
   641   0000CE                     ___xxtofl@arg:
   642                           	callstack 0
   643                           
   644                           ; 4 bytes @ 0x6
   645   0000CE                     	ds	1
   646   0000CF                     read_prec_or_width@c:
   647                           	callstack 0
   648   0000CF                     fputs@fp:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x7
   652   0000CF                     	ds	1
   653   0000D0                     read_prec_or_width@n:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x8
   657   0000D0                     	ds	1
   658   0000D1                     fputs@c:
   659                           	callstack 0
   660                           
   661                           ; 1 bytes @ 0x9
   662   0000D1                     	ds	1
   663   0000D2                     ?___flmul:
   664                           	callstack 0
   665   0000D2                     fputs@i:
   666                           	callstack 0
   667   0000D2                     Asignar_Minutos_Timer0@minutos:
   668                           	callstack 0
   669   0000D2                     ___flmul@b:
   670                           	callstack 0
   671                           
   672                           ; 4 bytes @ 0xA
   673   0000D2                     	ds	2
   674   0000D4                     pad@fp:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0xC
   678   0000D4                     	ds	2
   679   0000D6                     pad@buf:
   680                           	callstack 0
   681   0000D6                     ___flmul@a:
   682                           	callstack 0
   683                           
   684                           ; 4 bytes @ 0xE
   685   0000D6                     	ds	2
   686   0000D8                     pad@p:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x10
   690   0000D8                     	ds	2
   691   0000DA                     ??___flmul:
   692   0000DA                     pad@i:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x12
   696   0000DA                     	ds	2
   697   0000DC                     pad@w:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x14
   701   0000DC                     	ds	2
   702   0000DE                     ___flmul@sign:
   703                           	callstack 0
   704   0000DE                     dtoa@fp:
   705                           	callstack 0
   706   0000DE                     utoa@fp:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x16
   710   0000DE                     	ds	1
   711   0000DF                     ___flmul@aexp:
   712                           	callstack 0
   713                           
   714                           ; 1 bytes @ 0x17
   715   0000DF                     	ds	1
   716   0000E0                     ___flmul@bexp:
   717                           	callstack 0
   718   0000E0                     dtoa@d:
   719                           	callstack 0
   720   0000E0                     utoa@d:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x18
   724   0000E0                     	ds	1
   725   0000E1                     ___flmul@grs:
   726                           	callstack 0
   727                           
   728                           ; 4 bytes @ 0x19
   729   0000E1                     	ds	1
   730   0000E2                     _dtoa$2490:
   731                           	callstack 0
   732   0000E2                     utoa@p:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x1A
   736   0000E2                     	ds	2
   737   0000E4                     dtoa@p:
   738                           	callstack 0
   739   0000E4                     utoa@w:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x1C
   743   0000E4                     	ds	1
   744   0000E5                     ___flmul@prod:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x1D
   748   0000E5                     	ds	1
   749   0000E6                     dtoa@w:
   750                           	callstack 0
   751   0000E6                     utoa@i:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x1E
   755   0000E6                     	ds	2
   756   0000E8                     dtoa@s:
   757                           	callstack 0
   758                           
   759                           ; 1 bytes @ 0x20
   760   0000E8                     	ds	1
   761   0000E9                     ___flmul@temp:
   762                           	callstack 0
   763   0000E9                     dtoa@i:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0x21
   767   0000E9                     	ds	2
   768   0000EB                     ?___fldiv:
   769                           	callstack 0
   770   0000EB                     vfpfcnvrt@fp:
   771                           	callstack 0
   772   0000EB                     ___fldiv@b:
   773                           	callstack 0
   774                           
   775                           ; 4 bytes @ 0x23
   776   0000EB                     	ds	2
   777   0000ED                     vfpfcnvrt@fmt:
   778                           	callstack 0
   779                           
   780                           ; 1 bytes @ 0x25
   781   0000ED                     	ds	1
   782   0000EE                     vfpfcnvrt@ap:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x26
   786   0000EE                     	ds	1
   787   0000EF                     ___fldiv@a:
   788                           	callstack 0
   789                           
   790                           ; 4 bytes @ 0x27
   791   0000EF                     	ds	1
   792   0000F0                     ??_vfpfcnvrt:
   793                           
   794                           ; 1 bytes @ 0x28
   795   0000F0                     	ds	2
   796   0000F2                     vfpfcnvrt@done:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x2A
   800   0000F2                     	ds	1
   801   0000F3                     ??___fldiv:
   802                           
   803                           ; 1 bytes @ 0x2B
   804   0000F3                     	ds	1
   805   0000F4                     vfpfcnvrt@convarg:
   806                           	callstack 0
   807                           
   808                           ; 4 bytes @ 0x2C
   809   0000F4                     	ds	3
   810   0000F7                     ?___fltol:
   811                           	callstack 0
   812   0000F7                     ___fltol@f1:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0x2F
   816   0000F7                     	ds	1
   817   0000F8                     vfpfcnvrt@cp:
   818                           	callstack 0
   819                           
   820                           ; 1 bytes @ 0x30
   821   0000F8                     	ds	1
   822   0000F9                     vfprintf@cfmt:
   823                           	callstack 0
   824                           
   825                           ; 1 bytes @ 0x31
   826   0000F9                     	ds	2
   827   0000FB                     ___fltol@sign1:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x33
   831   0000FB                     	ds	1
   832   0000FC                     ___fltol@exp1:
   833                           	callstack 0
   834                           
   835                           ; 1 bytes @ 0x34
   836   0000FC                     	ds	1
   837   0000FD                     ??_main:
   838                           
   839                           ; 1 bytes @ 0x35
   840   0000FD                     	ds	1
   841                           
   842                           	psect	cstackCOMRAM
   843   000001                     __pcstackCOMRAM:
   844                           	callstack 0
   845   000001                     ?i1___fltol:
   846                           	callstack 0
   847   000001                     ?i1___flmul:
   848                           	callstack 0
   849   000001                     i1___fltol@f1:
   850                           	callstack 0
   851   000001                     i1___flmul@b:
   852                           	callstack 0
   853                           
   854                           ; 4 bytes @ 0x0
   855   000001                     	ds	4
   856   000005                     ??i1___fltol:
   857   000005                     i1___flmul@a:
   858                           	callstack 0
   859                           
   860                           ; 4 bytes @ 0x4
   861   000005                     	ds	4
   862   000009                     ??i1___flmul:
   863   000009                     i1___fltol@sign1:
   864                           	callstack 0
   865                           
   866                           ; 1 bytes @ 0x8
   867   000009                     	ds	1
   868   00000A                     i1___fltol@exp1:
   869                           	callstack 0
   870                           
   871                           ; 1 bytes @ 0x9
   872   00000A                     	ds	3
   873   00000D                     i1___flmul@sign:
   874                           	callstack 0
   875                           
   876                           ; 1 bytes @ 0xC
   877   00000D                     	ds	1
   878   00000E                     i1___flmul@aexp:
   879                           	callstack 0
   880                           
   881                           ; 1 bytes @ 0xD
   882   00000E                     	ds	1
   883   00000F                     i1___flmul@grs:
   884                           	callstack 0
   885                           
   886                           ; 4 bytes @ 0xE
   887   00000F                     	ds	4
   888   000013                     i1___flmul@bexp:
   889                           	callstack 0
   890                           
   891                           ; 1 bytes @ 0x12
   892   000013                     	ds	1
   893   000014                     i1___flmul@prod:
   894                           	callstack 0
   895                           
   896                           ; 4 bytes @ 0x13
   897   000014                     	ds	4
   898   000018                     i1___flmul@temp:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0x17
   902   000018                     	ds	2
   903   00001A                     ??_low_isr:
   904                           
   905                           ; 1 bytes @ 0x19
   906   00001A                     	ds	5
   907   00001F                     ??_Lectura_Numero_Est:
   908   00001F                     ??_Lectura_Frecuencia_tx:
   909   00001F                     ?_Leer_ADC:
   910                           	callstack 0
   911   00001F                     ?___wmul:
   912                           	callstack 0
   913   00001F                     ?___awdiv:
   914                           	callstack 0
   915   00001F                     ?___awmod:
   916                           	callstack 0
   917   00001F                     ?___lwdiv:
   918                           	callstack 0
   919   00001F                     ?___lwmod:
   920                           	callstack 0
   921   00001F                     ?___xxtofl:
   922                           	callstack 0
   923   00001F                     UART_Enviar_Caracter@dato:
   924                           	callstack 0
   925   00001F                     SPI_Enviar_Caracter@spi_tx:
   926                           	callstack 0
   927   00001F                     ___wmul@multiplier:
   928                           	callstack 0
   929   00001F                     ___awdiv@dividend:
   930                           	callstack 0
   931   00001F                     ___awmod@dividend:
   932                           	callstack 0
   933   00001F                     ___lwdiv@dividend:
   934                           	callstack 0
   935   00001F                     ___lwmod@dividend:
   936                           	callstack 0
   937   00001F                     fputc@c:
   938                           	callstack 0
   939   00001F                     ___lldiv@quotient:
   940                           	callstack 0
   941   00001F                     ___xxtofl@val:
   942                           	callstack 0
   943                           
   944                           ; 4 bytes @ 0x1E
   945   00001F                     	ds	1
   946   000020                     UART_Enviar_Cadena@cadena:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x1F
   950   000020                     	ds	1
   951   000021                     ??_Leer_ADC:
   952   000021                     ___wmul@multiplicand:
   953                           	callstack 0
   954   000021                     ___awdiv@divisor:
   955                           	callstack 0
   956   000021                     ___awmod@divisor:
   957                           	callstack 0
   958   000021                     ___lwdiv@divisor:
   959                           	callstack 0
   960   000021                     ___lwmod@divisor:
   961                           	callstack 0
   962   000021                     fputc@fp:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x20
   966   000021                     	ds	1
   967   000022                     
   968                           ; 1 bytes @ 0x21
   969   000022                     	ds	1
   970   000023                     ??_pad:
   971   000023                     ___lldiv@counter:
   972                           	callstack 0
   973   000023                     ___lwmod@counter:
   974                           	callstack 0
   975                           
   976                           ; 1 bytes @ 0x22
   977   000023                     	ds	1
   978   000024                     
   979                           ; 1 bytes @ 0x23
   980 ;;
   981 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   982 ;;
   983 ;; *************** function _main *****************
   984 ;; Defined at:
   985 ;;		line 55 in file "main.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;		None
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  i               1   37[BANK1 ] unsigned char 
   990 ;;  k               1   35[BANK1 ] unsigned char 
   991 ;;  j               1   36[BANK1 ] unsigned char 
   992 ;;  HABILITAR_EN    1   34[BANK1 ] _Bool 
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      void 
   995 ;; Registers used:
   996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 3F/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1002 ;;      Params:         0       0       0       0       0       0       0       0       0
  1003 ;;      Locals:         0       0       4       0       0       0       0       0       0
  1004 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1005 ;;      Totals:         0       1       4       0       0       0       0       0       0
  1006 ;;Total ram usage:        5 bytes
  1007 ;; Hardware stack levels required when called: 12
  1008 ;; This function calls:
  1009 ;;		_Asignar_Minutos_Timer0
  1010 ;;		_Inicializar_Sistema
  1011 ;;		_Lectura_Frecuencia_tx
  1012 ;;		_Lectura_Numero_Est
  1013 ;;		_Leer_ADC
  1014 ;;		_SPI_Enviar_Caracter
  1015 ;;		_SPI_Recibir_Caracter
  1016 ;;		_UART_Enviar_Cadena
  1017 ;;		_UART_Enviar_Caracter
  1018 ;;		___fldiv
  1019 ;;		___flmul
  1020 ;;		___fltol
  1021 ;;		___lldiv
  1022 ;;		___xxtofl
  1023 ;;		_sprintf
  1024 ;; This function is called by:
  1025 ;;		Startup code after reset
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           	psect	text0
  1030   000830                     __ptext0:
  1031                           	callstack 0
  1032   000830                     _main:
  1033                           	callstack 19
  1034                           
  1035                           ;main.c: 58:     Inicializar_Sistema();
  1036                           
  1037                           ;incstack = 0
  1038   000830  EC1E  F013         	call	_Inicializar_Sistema	;wreg free
  1039                           
  1040                           ; BSR set to: 0
  1041                           ;main.c: 61:     (SSPCON1bits.SSPEN = 1);
  1042   000834  8AC6               	bsf	198,5,c	;volatile
  1043                           
  1044                           ; BSR set to: 0
  1045                           ;main.c: 62:     (RCSTAbits.SPEN = 0);
  1046   000836  9EAB               	bcf	171,7,c	;volatile
  1047                           
  1048                           ; BSR set to: 0
  1049                           ;main.c: 64:     (TRISCbits.TRISC7 = 0);
  1050   000838  9E94               	bcf	148,7,c	;volatile
  1051                           
  1052                           ; BSR set to: 0
  1053                           ;main.c: 67:  SPI_Enviar_Caracter(0xFF);
  1054   00083A  0EFF               	movlw	255
  1055   00083C  ECF6  F013         	call	_SPI_Enviar_Caracter
  1056                           
  1057                           ;main.c: 68:  SPI_Enviar_Caracter(0xFF);
  1058   000840  0EFF               	movlw	255
  1059   000842  ECF6  F013         	call	_SPI_Enviar_Caracter
  1060                           
  1061                           ;main.c: 69:  SPI_Enviar_Caracter(0xFF);
  1062   000846  0EFF               	movlw	255
  1063   000848  ECF6  F013         	call	_SPI_Enviar_Caracter
  1064                           
  1065                           ;main.c: 70:  SPI_Enviar_Caracter(0xFF);
  1066   00084C  0EFF               	movlw	255
  1067   00084E  ECF6  F013         	call	_SPI_Enviar_Caracter
  1068                           
  1069                           ;main.c: 71:  SPI_Enviar_Caracter(0xFF);
  1070   000852  0EFF               	movlw	255
  1071   000854  ECF6  F013         	call	_SPI_Enviar_Caracter
  1072                           
  1073                           ;main.c: 74:  HABILITAR_TX_DATOS_AFM = 1;
  1074   000858  0E01               	movlw	1
  1075   00085A  0100               	movlb	0	; () banked
  1076   00085C  6FB5               	movwf	_HABILITAR_TX_DATOS_AFM& (0+255),b
  1077                           
  1078                           ; BSR set to: 0
  1079                           ;main.c: 75:     DATOS_LISTOS_ADC_BAT = 0;
  1080   00085E  0E00               	movlw	0
  1081   000860  6FB2               	movwf	_DATOS_LISTOS_ADC_BAT& (0+255),b
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;main.c: 76:     DATOS_LISTOS_SENSOR_AFM = 0;
  1085   000862  0E00               	movlw	0
  1086   000864  6FB1               	movwf	_DATOS_LISTOS_SENSOR_AFM& (0+255),b
  1087                           
  1088                           ; BSR set to: 0
  1089                           ;main.c: 77:     DATOS_LISTOS_EMPAQUEADO = 0;
  1090   000866  0E00               	movlw	0
  1091   000868  6FB0               	movwf	_DATOS_LISTOS_EMPAQUEADO& (0+255),b
  1092                           
  1093                           ; BSR set to: 0
  1094                           ;main.c: 79:     (SSPCON1bits.SSPEN = 0);
  1095   00086A  9AC6               	bcf	198,5,c	;volatile
  1096                           
  1097                           ; BSR set to: 0
  1098                           ;main.c: 80:     (RCSTAbits.SPEN = 1);
  1099   00086C  8EAB               	bsf	171,7,c	;volatile
  1100                           
  1101                           ; BSR set to: 0
  1102                           ;main.c: 81:     (TRISCbits.TRISC7 = 1);
  1103   00086E  8E94               	bsf	148,7,c	;volatile
  1104                           
  1105                           ; BSR set to: 0
  1106                           ;main.c: 85:     (INTCONbits.GIE = 1);
  1107   000870  8EF2               	bsf	242,7,c	;volatile
  1108                           
  1109                           ; BSR set to: 0
  1110                           ;main.c: 88:     (INTCONbits.PEIE = 1);
  1111   000872  8CF2               	bsf	242,6,c	;volatile
  1112                           
  1113                           ; BSR set to: 0
  1114                           ;main.c: 91:     HABILITAR_TAREA_MINUTOS_SOL = 1;
  1115   000874  0E01               	movlw	1
  1116   000876  6FBB               	movwf	_HABILITAR_TAREA_MINUTOS_SOL& (0+255),b	;volatile
  1117                           
  1118                           ; BSR set to: 0
  1119                           ;main.c: 95:     _Bool HABILITAR_ENVIAR_DATOS_PC = 0;
  1120   000878  0E00               	movlw	0
  1121   00087A  0101               	movlb	1	; () banked
  1122   00087C  6FC3               	movwf	main@HABILITAR_ENVIAR_DATOS_PC& (0+255),b
  1123   00087E                     l7091:
  1124                           
  1125                           ;main.c: 98:      {;main.c: 100:         if(HABILITAR_TAREA_MINUTOS_SOL && DATOS_LISTOS_
      +                          EMPAQUEADO){
  1126   00087E  0100               	movlb	0	; () banked
  1127   000880  51BB               	movf	_HABILITAR_TAREA_MINUTOS_SOL& (0+255),w,b	;volatile
  1128   000882  B4D8               	btfsc	status,2,c
  1129   000884  D052               	goto	l7135
  1130                           
  1131                           ; BSR set to: 0
  1132   000886  51B0               	movf	_DATOS_LISTOS_EMPAQUEADO& (0+255),w,b
  1133   000888  B4D8               	btfsc	status,2,c
  1134   00088A  D04F               	goto	l7135
  1135                           
  1136                           ; BSR set to: 0
  1137                           ;main.c: 101:             HABILITAR_TAREA_MINUTOS_SOL = 0;
  1138   00088C  0E00               	movlw	0
  1139   00088E  6FBB               	movwf	_HABILITAR_TAREA_MINUTOS_SOL& (0+255),b	;volatile
  1140                           
  1141                           ;main.c: 102:             DATOS_LISTOS_EMPAQUEADO = 0;
  1142   000890  0E00               	movlw	0
  1143   000892  6FB0               	movwf	_DATOS_LISTOS_EMPAQUEADO& (0+255),b
  1144                           
  1145                           ; BSR set to: 0
  1146                           ;main.c: 106:             (SSPCON1bits.SSPEN = 0);
  1147   000894  9AC6               	bcf	198,5,c	;volatile
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;main.c: 107:             (RCSTAbits.SPEN = 1);
  1151   000896  8EAB               	bsf	171,7,c	;volatile
  1152                           
  1153                           ; BSR set to: 0
  1154                           ;main.c: 108:             (TRISCbits.TRISC7 = 1);
  1155   000898  8E94               	bsf	148,7,c	;volatile
  1156                           
  1157                           ;main.c: 110:             for(j=0;j<29;j++){
  1158   00089A  0E00               	movlw	0
  1159   00089C  0101               	movlb	1	; () banked
  1160   00089E  6FC5               	movwf	main@j& (0+255),b
  1161   0008A0                     l7107:
  1162                           
  1163                           ; BSR set to: 1
  1164                           ;main.c: 111:                 UART_Enviar_Caracter(datos_sensores_afm_radio[j]);
  1165   0008A0  0E3C               	movlw	low _datos_sensores_afm_radio
  1166   0008A2  25C5               	addwf	main@j& (0+255),w,b
  1167   0008A4  6ED9               	movwf	fsr2l,c
  1168   0008A6  6ADA               	clrf	fsr2h,c
  1169   0008A8  0E01               	movlw	high _datos_sensores_afm_radio
  1170   0008AA  22DA               	addwfc	fsr2h,f,c
  1171   0008AC  50DF               	movf	indf2,w,c
  1172   0008AE  ECFD  F013         	call	_UART_Enviar_Caracter
  1173                           
  1174                           ;main.c: 112:             }
  1175   0008B2  0101               	movlb	1	; () banked
  1176   0008B4  2BC5               	incf	main@j& (0+255),f,b
  1177                           
  1178                           ; BSR set to: 1
  1179   0008B6  0E1C               	movlw	28
  1180   0008B8  65C5               	cpfsgt	main@j& (0+255),b
  1181   0008BA  D7F2               	goto	l7107
  1182                           
  1183                           ; BSR set to: 1
  1184                           ;main.c: 114:             for(j=0;j<8;j++){
  1185   0008BC  0E00               	movlw	0
  1186   0008BE  6FC5               	movwf	main@j& (0+255),b
  1187   0008C0                     l7119:
  1188                           
  1189                           ; BSR set to: 1
  1190                           ;main.c: 115:                 UART_Enviar_Caracter(check_sum_str[j]);
  1191   0008C0  0E98               	movlw	low _check_sum_str
  1192   0008C2  25C5               	addwf	main@j& (0+255),w,b
  1193   0008C4  6ED9               	movwf	fsr2l,c
  1194   0008C6  6ADA               	clrf	fsr2h,c
  1195   0008C8  0E01               	movlw	high _check_sum_str
  1196   0008CA  22DA               	addwfc	fsr2h,f,c
  1197   0008CC  50DF               	movf	indf2,w,c
  1198   0008CE  ECFD  F013         	call	_UART_Enviar_Caracter
  1199                           
  1200                           ;main.c: 116:             }
  1201   0008D2  0101               	movlb	1	; () banked
  1202   0008D4  2BC5               	incf	main@j& (0+255),f,b
  1203                           
  1204                           ; BSR set to: 1
  1205   0008D6  0E07               	movlw	7
  1206   0008D8  65C5               	cpfsgt	main@j& (0+255),b
  1207   0008DA  D7F2               	goto	l7119
  1208                           
  1209                           ; BSR set to: 1
  1210                           ;main.c: 118:             UART_Enviar_Cadena("\n");
  1211   0008DC  0E2D               	movlw	low STR_1
  1212   0008DE  6E20               	movwf	UART_Enviar_Cadena@cadena^0,c
  1213   0008E0  5020               	movf	UART_Enviar_Cadena@cadena^0,w,c
  1214   0008E2  A4D8               	btfss	status,2,c
  1215   0008E4  0E08               	movlw	high __smallconst
  1216   0008E6  6E21               	movwf	(UART_Enviar_Cadena@cadena+1)^0,c
  1217   0008E8  EC2A  F012         	call	_UART_Enviar_Cadena	;wreg free
  1218                           
  1219                           ;main.c: 119:             UART_Enviar_Cadena("\r");
  1220   0008EC  0E2B               	movlw	low (STR_5+7)
  1221   0008EE  6E20               	movwf	UART_Enviar_Cadena@cadena^0,c
  1222   0008F0  5020               	movf	UART_Enviar_Cadena@cadena^0,w,c
  1223   0008F2  A4D8               	btfss	status,2,c
  1224   0008F4  0E08               	movlw	high __smallconst
  1225   0008F6  6E21               	movwf	(UART_Enviar_Cadena@cadena+1)^0,c
  1226   0008F8  EC2A  F012         	call	_UART_Enviar_Cadena	;wreg free
  1227                           
  1228                           ;main.c: 129:             if(HABILITAR_ENVIAR_DATOS_PC){
  1229   0008FC  0101               	movlb	1	; () banked
  1230   0008FE  51C3               	movf	main@HABILITAR_ENVIAR_DATOS_PC& (0+255),w,b
  1231   000900  B4D8               	btfsc	status,2,c
  1232   000902  D00E               	goto	l7131
  1233                           
  1234                           ; BSR set to: 1
  1235                           ;main.c: 130:                 UART_Enviar_Cadena(datos_sensores_afm_pc);
  1236   000904  0E00               	movlw	low _datos_sensores_afm_pc
  1237   000906  6E20               	movwf	UART_Enviar_Cadena@cadena^0,c
  1238   000908  0E01               	movlw	high _datos_sensores_afm_pc
  1239   00090A  6E21               	movwf	(UART_Enviar_Cadena@cadena+1)^0,c
  1240   00090C  EC2A  F012         	call	_UART_Enviar_Cadena	;wreg free
  1241                           
  1242                           ;main.c: 131:                 UART_Enviar_Cadena("\r");
  1243   000910  0E2B               	movlw	low (STR_5+7)
  1244   000912  6E20               	movwf	UART_Enviar_Cadena@cadena^0,c
  1245   000914  5020               	movf	UART_Enviar_Cadena@cadena^0,w,c
  1246   000916  A4D8               	btfss	status,2,c
  1247   000918  0E08               	movlw	high __smallconst
  1248   00091A  6E21               	movwf	(UART_Enviar_Cadena@cadena+1)^0,c
  1249   00091C  EC2A  F012         	call	_UART_Enviar_Cadena	;wreg free
  1250   000920                     l7131:
  1251                           
  1252                           ;main.c: 133:             DATOS_LISTOS_ADC_BAT = 0;
  1253   000920  0E00               	movlw	0
  1254   000922  0100               	movlb	0	; () banked
  1255   000924  6FB2               	movwf	_DATOS_LISTOS_ADC_BAT& (0+255),b
  1256                           
  1257                           ; BSR set to: 0
  1258                           ;main.c: 134:             DATOS_LISTOS_SENSOR_AFM = 0;
  1259   000926  0E00               	movlw	0
  1260   000928  6FB1               	movwf	_DATOS_LISTOS_SENSOR_AFM& (0+255),b
  1261   00092A                     l7135:
  1262                           
  1263                           ; BSR set to: 0
  1264                           ;main.c: 138:         if(HABILITAR_TASK0) {
  1265   00092A  51C0               	movf	_HABILITAR_TASK0& (0+255),w,b	;volatile
  1266   00092C  B4D8               	btfsc	status,2,c
  1267   00092E  D24B               	goto	l7269
  1268                           
  1269                           ; BSR set to: 0
  1270                           ;main.c: 139:             HABILITAR_TASK0 = 0;
  1271   000930  0E00               	movlw	0
  1272   000932  6FC0               	movwf	_HABILITAR_TASK0& (0+255),b	;volatile
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;main.c: 141:             if (PORTBbits.RB5) {
  1276   000934  AA81               	btfss	129,5,c	;volatile
  1277   000936  D006               	goto	l7147
  1278                           
  1279                           ; BSR set to: 0
  1280                           ;main.c: 143:                 if (FLANCO_NEG) {
  1281   000938  51C2               	movf	_FLANCO_NEG& (0+255),w,b	;volatile
  1282   00093A  B4D8               	btfsc	status,2,c
  1283   00093C  D005               	goto	l305
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;main.c: 145:                     contador_pluviometro++;
  1287   00093E  2BC1               	incf	_contador_pluviometro& (0+255),f,b	;volatile
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;main.c: 146:                     FLANCO_NEG = 0;
  1291   000940  0E00               	movlw	0
  1292   000942  D001               	goto	L1
  1293   000944                     l7147:
  1294                           
  1295                           ; BSR set to: 0
  1296   000944  0E01               	movlw	1
  1297   000946                     L1:
  1298   000946  6FC2               	movwf	_FLANCO_NEG& (0+255),b	;volatile
  1299   000948                     l305:
  1300                           
  1301                           ; BSR set to: 0
  1302                           ;main.c: 150:             if(HABLILITAR_LECTURA_CH0) {
  1303   000948  51C3               	movf	_HABLILITAR_LECTURA_CH0& (0+255),w,b	;volatile
  1304   00094A  B4D8               	btfsc	status,2,c
  1305   00094C  D0A5               	goto	l7167
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;main.c: 153:                 suma_lectura_adc += Leer_ADC();
  1309   00094E  ECD9  F013         	call	_Leer_ADC	;wreg free
  1310   000952  501F               	movf	?_Leer_ADC^0,w,c
  1311   000954  277C               	addwf	_suma_lectura_adc@interrupt_manager$F663& (0+255),f,b
  1312   000956  5020               	movf	(?_Leer_ADC+1)^0,w,c
  1313   000958  237D               	addwfc	(_suma_lectura_adc@interrupt_manager$F663+1)& (0+255),f,b
  1314   00095A  0E00               	movlw	0
  1315   00095C  237E               	addwfc	(_suma_lectura_adc@interrupt_manager$F663+2)& (0+255),f,b
  1316   00095E  0E00               	movlw	0
  1317   000960  237F               	addwfc	(_suma_lectura_adc@interrupt_manager$F663+3)& (0+255),f,b
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;main.c: 154:                 if (contador_lectura_adc >= 15) {
  1321   000962  0E0E               	movlw	14
  1322   000964  65B8               	cpfsgt	_contador_lectura_adc@interrupt_manager$F662& (0+255),b
  1323   000966  D096               	goto	l7163
  1324                           
  1325                           ; BSR set to: 0
  1326                           ;main.c: 155:                     contador_lectura_adc = 0;
  1327   000968  0E00               	movlw	0
  1328   00096A  6FB8               	movwf	_contador_lectura_adc@interrupt_manager$F662& (0+255),b
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;main.c: 156:                     resultado_adc_flotante = (float)suma_lectura_adc / (fl
      +                          oat)15;
  1332   00096C  C07C  F01F         	movff	_suma_lectura_adc@interrupt_manager$F663,___xxtofl@val
  1333   000970  C07D  F020         	movff	_suma_lectura_adc@interrupt_manager$F663+1,___xxtofl@val+1
  1334   000974  C07E  F021         	movff	_suma_lectura_adc@interrupt_manager$F663+2,___xxtofl@val+2
  1335   000978  C07F  F022         	movff	_suma_lectura_adc@interrupt_manager$F663+3,___xxtofl@val+3
  1336   00097C  0E00               	movlw	0
  1337   00097E  EC13  F00E         	call	___xxtofl
  1338   000982  C01F  F0EB         	movff	?___xxtofl,___fldiv@b
  1339   000986  C020  F0EC         	movff	?___xxtofl+1,___fldiv@b+1
  1340   00098A  C021  F0ED         	movff	?___xxtofl+2,___fldiv@b+2
  1341   00098E  C022  F0EE         	movff	?___xxtofl+3,___fldiv@b+3
  1342   000992  0E00               	movlw	0
  1343   000994  6FEF               	movwf	___fldiv@a& (0+255),b
  1344   000996  0E00               	movlw	0
  1345   000998  6FF0               	movwf	(___fldiv@a+1)& (0+255),b
  1346   00099A  0E70               	movlw	112
  1347   00099C  6FF1               	movwf	(___fldiv@a+2)& (0+255),b
  1348   00099E  0E41               	movlw	65
  1349   0009A0  6FF2               	movwf	(___fldiv@a+3)& (0+255),b
  1350   0009A2  ECFC  F00A         	call	___fldiv	;wreg free
  1351   0009A6  C0EB  F078         	movff	?___fldiv,_resultado_adc_flotante@interrupt_manager$F664
  1352   0009AA  C0EC  F079         	movff	?___fldiv+1,_resultado_adc_flotante@interrupt_manager$F664+1
  1353   0009AE  C0ED  F07A         	movff	?___fldiv+2,_resultado_adc_flotante@interrupt_manager$F664+2
  1354   0009B2  C0EE  F07B         	movff	?___fldiv+3,_resultado_adc_flotante@interrupt_manager$F664+3
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;main.c: 157:                     Lectura_ADC_CH0 = (uint16_t)(resultado_adc_flotante);
  1358   0009B6  C078  F0F7         	movff	_resultado_adc_flotante@interrupt_manager$F664,___fltol@f1
  1359   0009BA  C079  F0F8         	movff	_resultado_adc_flotante@interrupt_manager$F664+1,___fltol@f1+1
  1360   0009BE  C07A  F0F9         	movff	_resultado_adc_flotante@interrupt_manager$F664+2,___fltol@f1+2
  1361   0009C2  C07B  F0FA         	movff	_resultado_adc_flotante@interrupt_manager$F664+3,___fltol@f1+3
  1362   0009C6  EC21  F00F         	call	___fltol	;wreg free
  1363   0009CA  C0F7  F0AE         	movff	?___fltol,_Lectura_ADC_CH0	;volatile
  1364   0009CE  C0F8  F0AF         	movff	?___fltol+1,_Lectura_ADC_CH0+1	;volatile
  1365                           
  1366                           ;main.c: 158:                     suma_lectura_adc = 0;
  1367   0009D2  0E00               	movlw	0
  1368   0009D4  6F7C               	movwf	_suma_lectura_adc@interrupt_manager$F663& (0+255),b
  1369   0009D6  0E00               	movlw	0
  1370   0009D8  6F7D               	movwf	(_suma_lectura_adc@interrupt_manager$F663+1)& (0+255),b
  1371   0009DA  0E00               	movlw	0
  1372   0009DC  6F7E               	movwf	(_suma_lectura_adc@interrupt_manager$F663+2)& (0+255),b
  1373   0009DE  0E00               	movlw	0
  1374   0009E0  6F7F               	movwf	(_suma_lectura_adc@interrupt_manager$F663+3)& (0+255),b
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;main.c: 160:                     medida_nivel_bateria_flt = (float)((float)Lectura_ADC_
      +                          CH0 * 15.0 / 1024.0);
  1378   0009E2  0E00               	movlw	0
  1379   0009E4  6FD6               	movwf	___flmul@a& (0+255),b
  1380   0009E6  0E00               	movlw	0
  1381   0009E8  6FD7               	movwf	(___flmul@a+1)& (0+255),b
  1382   0009EA  0E70               	movlw	112
  1383   0009EC  6FD8               	movwf	(___flmul@a+2)& (0+255),b
  1384   0009EE  0E41               	movlw	65
  1385   0009F0  6FD9               	movwf	(___flmul@a+3)& (0+255),b
  1386   0009F2  C0AE  F01F         	movff	_Lectura_ADC_CH0,___xxtofl@val	;volatile
  1387   0009F6  C0AF  F020         	movff	_Lectura_ADC_CH0+1,___xxtofl@val+1	;volatile
  1388   0009FA  6A21               	clrf	(___xxtofl@val+2)^0,c
  1389   0009FC  6A22               	clrf	(___xxtofl@val+3)^0,c
  1390   0009FE  0E00               	movlw	0
  1391   000A00  EC13  F00E         	call	___xxtofl
  1392   000A04  C01F  F0D2         	movff	?___xxtofl,___flmul@b
  1393   000A08  C020  F0D3         	movff	?___xxtofl+1,___flmul@b+1
  1394   000A0C  C021  F0D4         	movff	?___xxtofl+2,___flmul@b+2
  1395   000A10  C022  F0D5         	movff	?___xxtofl+3,___flmul@b+3
  1396   000A14  ECD0  F007         	call	___flmul	;wreg free
  1397   000A18  C0D2  F0EB         	movff	?___flmul,___fldiv@b
  1398   000A1C  C0D3  F0EC         	movff	?___flmul+1,___fldiv@b+1
  1399   000A20  C0D4  F0ED         	movff	?___flmul+2,___fldiv@b+2
  1400   000A24  C0D5  F0EE         	movff	?___flmul+3,___fldiv@b+3
  1401   000A28  0E00               	movlw	0
  1402   000A2A  6FEF               	movwf	___fldiv@a& (0+255),b
  1403   000A2C  0E00               	movlw	0
  1404   000A2E  6FF0               	movwf	(___fldiv@a+1)& (0+255),b
  1405   000A30  0E80               	movlw	128
  1406   000A32  6FF1               	movwf	(___fldiv@a+2)& (0+255),b
  1407   000A34  0E44               	movlw	68
  1408   000A36  6FF2               	movwf	(___fldiv@a+3)& (0+255),b
  1409   000A38  ECFC  F00A         	call	___fldiv	;wreg free
  1410   000A3C  C0EB  F068         	movff	?___fldiv,_medida_nivel_bateria_flt
  1411   000A40  C0EC  F069         	movff	?___fldiv+1,_medida_nivel_bateria_flt+1
  1412   000A44  C0ED  F06A         	movff	?___fldiv+2,_medida_nivel_bateria_flt+2
  1413   000A48  C0EE  F06B         	movff	?___fldiv+3,_medida_nivel_bateria_flt+3
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;main.c: 162:                     medida_nivel_bateria_dec = (uint16_t)(medida_nivel_bat
      +                          eria_flt * 250.0);
  1417   000A4C  0E00               	movlw	0
  1418   000A4E  6FD6               	movwf	___flmul@a& (0+255),b
  1419   000A50  0E00               	movlw	0
  1420   000A52  6FD7               	movwf	(___flmul@a+1)& (0+255),b
  1421   000A54  0E7A               	movlw	122
  1422   000A56  6FD8               	movwf	(___flmul@a+2)& (0+255),b
  1423   000A58  0E43               	movlw	67
  1424   000A5A  6FD9               	movwf	(___flmul@a+3)& (0+255),b
  1425   000A5C  C068  F0D2         	movff	_medida_nivel_bateria_flt,___flmul@b
  1426   000A60  C069  F0D3         	movff	_medida_nivel_bateria_flt+1,___flmul@b+1
  1427   000A64  C06A  F0D4         	movff	_medida_nivel_bateria_flt+2,___flmul@b+2
  1428   000A68  C06B  F0D5         	movff	_medida_nivel_bateria_flt+3,___flmul@b+3
  1429   000A6C  ECD0  F007         	call	___flmul	;wreg free
  1430   000A70  C0D2  F0F7         	movff	?___flmul,___fltol@f1
  1431   000A74  C0D3  F0F8         	movff	?___flmul+1,___fltol@f1+1
  1432   000A78  C0D4  F0F9         	movff	?___flmul+2,___fltol@f1+2
  1433   000A7C  C0D5  F0FA         	movff	?___flmul+3,___fltol@f1+3
  1434   000A80  EC21  F00F         	call	___fltol	;wreg free
  1435   000A84  C0F7  F08C         	movff	?___fltol,_medida_nivel_bateria_dec
  1436   000A88  C0F8  F08D         	movff	?___fltol+1,_medida_nivel_bateria_dec+1
  1437                           
  1438                           ;main.c: 164:                     HABLILITAR_LECTURA_CH0 = 0;
  1439   000A8C  0E00               	movlw	0
  1440   000A8E  6FC3               	movwf	_HABLILITAR_LECTURA_CH0& (0+255),b	;volatile
  1441                           
  1442                           ;main.c: 165:                     DATOS_LISTOS_ADC_BAT = 1;
  1443   000A90  0E01               	movlw	1
  1444   000A92  6FB2               	movwf	_DATOS_LISTOS_ADC_BAT& (0+255),b
  1445   000A94                     l7163:
  1446                           
  1447                           ; BSR set to: 0
  1448                           ;main.c: 169:                 ADCON0bits.GO = 1;
  1449   000A94  82C2               	bsf	194,1,c	;volatile
  1450                           
  1451                           ; BSR set to: 0
  1452                           ;main.c: 170:                 contador_lectura_adc++;
  1453   000A96  2BB8               	incf	_contador_lectura_adc@interrupt_manager$F662& (0+255),f,b
  1454   000A98                     l7167:
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;main.c: 173:             if(HABILITAR_LECTURA_SENSOR) {
  1458   000A98  51B4               	movf	_HABILITAR_LECTURA_SENSOR& (0+255),w,b
  1459   000A9A  B4D8               	btfsc	status,2,c
  1460   000A9C  D194               	goto	l7269
  1461                           
  1462                           ; BSR set to: 0
  1463                           ;main.c: 174:                 HABILITAR_LECTURA_SENSOR = 0;
  1464   000A9E  0E00               	movlw	0
  1465   000AA0  6FB4               	movwf	_HABILITAR_LECTURA_SENSOR& (0+255),b
  1466                           
  1467                           ; BSR set to: 0
  1468                           ;main.c: 175:                 (SSPCON1bits.SSPEN = 1);
  1469   000AA2  8AC6               	bsf	198,5,c	;volatile
  1470                           
  1471                           ; BSR set to: 0
  1472                           ;main.c: 176:                 (RCSTAbits.SPEN = 0);
  1473   000AA4  9EAB               	bcf	171,7,c	;volatile
  1474                           
  1475                           ; BSR set to: 0
  1476                           ;main.c: 178:                 (TRISCbits.TRISC7 = 0);
  1477   000AA6  9E94               	bcf	148,7,c	;volatile
  1478                           
  1479                           ;main.c: 181:                 uint8_t i = 0;
  1480   000AA8  0E00               	movlw	0
  1481   000AAA  0101               	movlb	1	; () banked
  1482   000AAC  6FC6               	movwf	main@i& (0+255),b
  1483                           
  1484                           ;main.c: 183:                 dato_spi_full_band = 0;
  1485   000AAE  0E00               	movlw	0
  1486   000AB0  0100               	movlb	0	; () banked
  1487   000AB2  6F74               	movwf	_dato_spi_full_band& (0+255),b
  1488   000AB4  0E00               	movlw	0
  1489   000AB6  6F75               	movwf	(_dato_spi_full_band+1)& (0+255),b
  1490   000AB8  0E00               	movlw	0
  1491   000ABA  6F76               	movwf	(_dato_spi_full_band+2)& (0+255),b
  1492   000ABC  0E00               	movlw	0
  1493   000ABE  6F77               	movwf	(_dato_spi_full_band+3)& (0+255),b
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;main.c: 184:                 SPI_Enviar_Caracter(0x20);
  1497   000AC0  0E20               	movlw	32
  1498   000AC2  ECF6  F013         	call	_SPI_Enviar_Caracter
  1499                           
  1500                           ;main.c: 185:                 SPI_Enviar_Caracter(0x0F);
  1501   000AC6  0E0F               	movlw	15
  1502   000AC8  ECF6  F013         	call	_SPI_Enviar_Caracter
  1503                           
  1504                           ;main.c: 186:                 SPI_Enviar_Caracter(0x10);
  1505   000ACC  0E10               	movlw	16
  1506   000ACE  ECF6  F013         	call	_SPI_Enviar_Caracter
  1507                           
  1508                           ;main.c: 187:                 SPI_Enviar_Caracter(0x40);
  1509   000AD2  0E40               	movlw	64
  1510   000AD4  ECF6  F013         	call	_SPI_Enviar_Caracter
  1511   000AD8                     l309:
  1512   000AD8  B481               	btfsc	129,2,c	;volatile
  1513   000ADA  D7FE               	goto	l309
  1514                           
  1515                           ;main.c: 189:                 for(i=0;i<15;i++){
  1516   000ADC  0E00               	movlw	0
  1517   000ADE  0101               	movlb	1	; () banked
  1518   000AE0  6FC6               	movwf	main@i& (0+255),b
  1519   000AE2  D01F               	goto	L2
  1520   000AE4                     l7191:
  1521                           
  1522                           ; BSR set to: 1
  1523                           ;main.c: 190:                     SPI_Enviar_Caracter(0x38);
  1524   000AE4  0E38               	movlw	56
  1525   000AE6  ECF6  F013         	call	_SPI_Enviar_Caracter
  1526   000AEA                     l314:
  1527   000AEA  B481               	btfsc	129,2,c	;volatile
  1528   000AEC  D7FE               	goto	l314
  1529                           
  1530                           ;main.c: 192:                     dato_spi_temp_f=0;
  1531   000AEE  0E00               	movlw	0
  1532   000AF0  0100               	movlb	0	; () banked
  1533   000AF2  6FA3               	movwf	(_dato_spi_temp_f+1)& (0+255),b
  1534   000AF4  0E00               	movlw	0
  1535   000AF6  6FA2               	movwf	_dato_spi_temp_f& (0+255),b
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;main.c: 193:                     dato_spi_temp_f =(uint16_t)(SPI_Recibir_Caracter()<<8)
      +                          ;
  1539   000AF8  EC03  F014         	call	_SPI_Recibir_Caracter	;wreg free
  1540   000AFC  6FA3               	movwf	(_dato_spi_temp_f+1)& (0+255),b
  1541   000AFE  6BA2               	clrf	_dato_spi_temp_f& (0+255),b
  1542                           
  1543                           ; BSR set to: 0
  1544                           ;main.c: 194:                     dato_spi_temp_f+=(uint16_t)SPI_Recibir_Caracter();
  1545   000B00  EC03  F014         	call	_SPI_Recibir_Caracter	;wreg free
  1546   000B04  6FFD               	movwf	??_main& (0+255),b
  1547   000B06  51FD               	movf	??_main& (0+255),w,b
  1548   000B08  27A2               	addwf	_dato_spi_temp_f& (0+255),f,b
  1549   000B0A  0E00               	movlw	0
  1550   000B0C  23A3               	addwfc	(_dato_spi_temp_f+1)& (0+255),f,b
  1551                           
  1552                           ; BSR set to: 0
  1553                           ;main.c: 195:                     dato_spi_full_band+=dato_spi_temp_f;
  1554   000B0E  51A2               	movf	_dato_spi_temp_f& (0+255),w,b
  1555   000B10  2774               	addwf	_dato_spi_full_band& (0+255),f,b
  1556   000B12  51A3               	movf	(_dato_spi_temp_f+1)& (0+255),w,b
  1557   000B14  2375               	addwfc	(_dato_spi_full_band+1)& (0+255),f,b
  1558   000B16  0E00               	movlw	0
  1559   000B18  2376               	addwfc	(_dato_spi_full_band+2)& (0+255),f,b
  1560   000B1A  0E00               	movlw	0
  1561   000B1C  2377               	addwfc	(_dato_spi_full_band+3)& (0+255),f,b
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;main.c: 196:                 }
  1565   000B1E  0101               	movlb	1	; () banked
  1566   000B20  2BC6               	incf	main@i& (0+255),f,b
  1567   000B22                     L2:
  1568   000B22  0E0E               	movlw	14
  1569   000B24  65C6               	cpfsgt	main@i& (0+255),b
  1570   000B26  D7DE               	goto	l7191
  1571                           
  1572                           ; BSR set to: 1
  1573                           ;main.c: 198:                 dato_spi_low_band = 0;
  1574   000B28  0E00               	movlw	0
  1575   000B2A  0100               	movlb	0	; () banked
  1576   000B2C  6F70               	movwf	_dato_spi_low_band& (0+255),b
  1577   000B2E  0E00               	movlw	0
  1578   000B30  6F71               	movwf	(_dato_spi_low_band+1)& (0+255),b
  1579   000B32  0E00               	movlw	0
  1580   000B34  6F72               	movwf	(_dato_spi_low_band+2)& (0+255),b
  1581   000B36  0E00               	movlw	0
  1582   000B38  6F73               	movwf	(_dato_spi_low_band+3)& (0+255),b
  1583                           
  1584                           ; BSR set to: 0
  1585                           ;main.c: 199:                 SPI_Enviar_Caracter(0x21);
  1586   000B3A  0E21               	movlw	33
  1587   000B3C  ECF6  F013         	call	_SPI_Enviar_Caracter
  1588                           
  1589                           ;main.c: 200:                 SPI_Enviar_Caracter(0x0F);
  1590   000B40  0E0F               	movlw	15
  1591   000B42  ECF6  F013         	call	_SPI_Enviar_Caracter
  1592                           
  1593                           ;main.c: 201:                 SPI_Enviar_Caracter(0x11);
  1594   000B46  0E11               	movlw	17
  1595   000B48  ECF6  F013         	call	_SPI_Enviar_Caracter
  1596                           
  1597                           ;main.c: 202:                 SPI_Enviar_Caracter(0x40);
  1598   000B4C  0E40               	movlw	64
  1599   000B4E  ECF6  F013         	call	_SPI_Enviar_Caracter
  1600   000B52                     l317:
  1601   000B52  B481               	btfsc	129,2,c	;volatile
  1602   000B54  D7FE               	goto	l317
  1603                           
  1604                           ;main.c: 204:                 for(i=0;i<15;i++){
  1605   000B56  0E00               	movlw	0
  1606   000B58  0101               	movlb	1	; () banked
  1607   000B5A  6FC6               	movwf	main@i& (0+255),b
  1608   000B5C  D01F               	goto	L3
  1609   000B5E                     l7219:
  1610                           
  1611                           ; BSR set to: 1
  1612                           ;main.c: 205:                     SPI_Enviar_Caracter(0x39);
  1613   000B5E  0E39               	movlw	57
  1614   000B60  ECF6  F013         	call	_SPI_Enviar_Caracter
  1615   000B64                     l322:
  1616   000B64  B481               	btfsc	129,2,c	;volatile
  1617   000B66  D7FE               	goto	l322
  1618                           
  1619                           ;main.c: 207:                     dato_spi_temp_l=0;
  1620   000B68  0E00               	movlw	0
  1621   000B6A  0100               	movlb	0	; () banked
  1622   000B6C  6FA1               	movwf	(_dato_spi_temp_l+1)& (0+255),b
  1623   000B6E  0E00               	movlw	0
  1624   000B70  6FA0               	movwf	_dato_spi_temp_l& (0+255),b
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;main.c: 208:                     dato_spi_temp_l = (uint16_t)SPI_Recibir_Caracter()<<8;
  1628   000B72  EC03  F014         	call	_SPI_Recibir_Caracter	;wreg free
  1629   000B76  6FA1               	movwf	(_dato_spi_temp_l+1)& (0+255),b
  1630   000B78  6BA0               	clrf	_dato_spi_temp_l& (0+255),b
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;main.c: 209:                     dato_spi_temp_l+= (uint16_t)SPI_Recibir_Caracter();
  1634   000B7A  EC03  F014         	call	_SPI_Recibir_Caracter	;wreg free
  1635   000B7E  6FFD               	movwf	??_main& (0+255),b
  1636   000B80  51FD               	movf	??_main& (0+255),w,b
  1637   000B82  27A0               	addwf	_dato_spi_temp_l& (0+255),f,b
  1638   000B84  0E00               	movlw	0
  1639   000B86  23A1               	addwfc	(_dato_spi_temp_l+1)& (0+255),f,b
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;main.c: 210:                     dato_spi_low_band+=dato_spi_temp_l;
  1643   000B88  51A0               	movf	_dato_spi_temp_l& (0+255),w,b
  1644   000B8A  2770               	addwf	_dato_spi_low_band& (0+255),f,b
  1645   000B8C  51A1               	movf	(_dato_spi_temp_l+1)& (0+255),w,b
  1646   000B8E  2371               	addwfc	(_dato_spi_low_band+1)& (0+255),f,b
  1647   000B90  0E00               	movlw	0
  1648   000B92  2372               	addwfc	(_dato_spi_low_band+2)& (0+255),f,b
  1649   000B94  0E00               	movlw	0
  1650   000B96  2373               	addwfc	(_dato_spi_low_band+3)& (0+255),f,b
  1651                           
  1652                           ; BSR set to: 0
  1653                           ;main.c: 211:                 }
  1654   000B98  0101               	movlb	1	; () banked
  1655   000B9A  2BC6               	incf	main@i& (0+255),f,b
  1656   000B9C                     L3:
  1657   000B9C  0E0E               	movlw	14
  1658   000B9E  65C6               	cpfsgt	main@i& (0+255),b
  1659   000BA0  D7DE               	goto	l7219
  1660                           
  1661                           ; BSR set to: 1
  1662                           ;main.c: 213:                 dato_spi_high_band = 0;
  1663   000BA2  0E00               	movlw	0
  1664   000BA4  0100               	movlb	0	; () banked
  1665   000BA6  6F6C               	movwf	_dato_spi_high_band& (0+255),b
  1666   000BA8  0E00               	movlw	0
  1667   000BAA  6F6D               	movwf	(_dato_spi_high_band+1)& (0+255),b
  1668   000BAC  0E00               	movlw	0
  1669   000BAE  6F6E               	movwf	(_dato_spi_high_band+2)& (0+255),b
  1670   000BB0  0E00               	movlw	0
  1671   000BB2  6F6F               	movwf	(_dato_spi_high_band+3)& (0+255),b
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;main.c: 214:                 SPI_Enviar_Caracter(0x23);
  1675   000BB4  0E23               	movlw	35
  1676   000BB6  ECF6  F013         	call	_SPI_Enviar_Caracter
  1677                           
  1678                           ;main.c: 215:                 SPI_Enviar_Caracter(0x0F);
  1679   000BBA  0E0F               	movlw	15
  1680   000BBC  ECF6  F013         	call	_SPI_Enviar_Caracter
  1681                           
  1682                           ;main.c: 216:                 SPI_Enviar_Caracter(0x13);
  1683   000BC0  0E13               	movlw	19
  1684   000BC2  ECF6  F013         	call	_SPI_Enviar_Caracter
  1685                           
  1686                           ;main.c: 217:                 SPI_Enviar_Caracter(0x40);
  1687   000BC6  0E40               	movlw	64
  1688   000BC8  ECF6  F013         	call	_SPI_Enviar_Caracter
  1689   000BCC                     l325:
  1690   000BCC  B481               	btfsc	129,2,c	;volatile
  1691   000BCE  D7FE               	goto	l325
  1692                           
  1693                           ;main.c: 219:                 for(i=0;i<15;i++) {
  1694   000BD0  0E00               	movlw	0
  1695   000BD2  0101               	movlb	1	; () banked
  1696   000BD4  6FC6               	movwf	main@i& (0+255),b
  1697   000BD6  D01F               	goto	L4
  1698   000BD8                     l7247:
  1699                           
  1700                           ; BSR set to: 1
  1701                           ;main.c: 220:                     SPI_Enviar_Caracter(0x3B);
  1702   000BD8  0E3B               	movlw	59
  1703   000BDA  ECF6  F013         	call	_SPI_Enviar_Caracter
  1704   000BDE                     l330:
  1705   000BDE  B481               	btfsc	129,2,c	;volatile
  1706   000BE0  D7FE               	goto	l330
  1707                           
  1708                           ;main.c: 222:                     dato_spi_temp_h=0;
  1709   000BE2  0E00               	movlw	0
  1710   000BE4  0100               	movlb	0	; () banked
  1711   000BE6  6F9F               	movwf	(_dato_spi_temp_h+1)& (0+255),b
  1712   000BE8  0E00               	movlw	0
  1713   000BEA  6F9E               	movwf	_dato_spi_temp_h& (0+255),b
  1714                           
  1715                           ; BSR set to: 0
  1716                           ;main.c: 223:                     dato_spi_temp_h = (uint16_t)SPI_Recibir_Caracter()<<8;
  1717   000BEC  EC03  F014         	call	_SPI_Recibir_Caracter	;wreg free
  1718   000BF0  6F9F               	movwf	(_dato_spi_temp_h+1)& (0+255),b
  1719   000BF2  6B9E               	clrf	_dato_spi_temp_h& (0+255),b
  1720                           
  1721                           ; BSR set to: 0
  1722                           ;main.c: 224:                     dato_spi_temp_h+= (uint16_t)SPI_Recibir_Caracter();
  1723   000BF4  EC03  F014         	call	_SPI_Recibir_Caracter	;wreg free
  1724   000BF8  6FFD               	movwf	??_main& (0+255),b
  1725   000BFA  51FD               	movf	??_main& (0+255),w,b
  1726   000BFC  279E               	addwf	_dato_spi_temp_h& (0+255),f,b
  1727   000BFE  0E00               	movlw	0
  1728   000C00  239F               	addwfc	(_dato_spi_temp_h+1)& (0+255),f,b
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;main.c: 225:                     dato_spi_high_band+=dato_spi_temp_h;
  1732   000C02  519E               	movf	_dato_spi_temp_h& (0+255),w,b
  1733   000C04  276C               	addwf	_dato_spi_high_band& (0+255),f,b
  1734   000C06  519F               	movf	(_dato_spi_temp_h+1)& (0+255),w,b
  1735   000C08  236D               	addwfc	(_dato_spi_high_band+1)& (0+255),f,b
  1736   000C0A  0E00               	movlw	0
  1737   000C0C  236E               	addwfc	(_dato_spi_high_band+2)& (0+255),f,b
  1738   000C0E  0E00               	movlw	0
  1739   000C10  236F               	addwfc	(_dato_spi_high_band+3)& (0+255),f,b
  1740                           
  1741                           ; BSR set to: 0
  1742                           ;main.c: 226:                 }
  1743   000C12  0101               	movlb	1	; () banked
  1744   000C14  2BC6               	incf	main@i& (0+255),f,b
  1745   000C16                     L4:
  1746   000C16  0E0E               	movlw	14
  1747   000C18  65C6               	cpfsgt	main@i& (0+255),b
  1748   000C1A  D7DE               	goto	l7247
  1749                           
  1750                           ; BSR set to: 1
  1751                           ;main.c: 227:                 lectura_sensor_full_band= (uint16_t)(dato_spi_full_band / 
      +                          15);
  1752   000C1C  C074  F0C8         	movff	_dato_spi_full_band,___lldiv@dividend
  1753   000C20  C075  F0C9         	movff	_dato_spi_full_band+1,___lldiv@dividend+1
  1754   000C24  C076  F0CA         	movff	_dato_spi_full_band+2,___lldiv@dividend+2
  1755   000C28  C077  F0CB         	movff	_dato_spi_full_band+3,___lldiv@dividend+3
  1756   000C2C  0E0F               	movlw	15
  1757   000C2E  0100               	movlb	0	; () banked
  1758   000C30  6FCC               	movwf	___lldiv@divisor& (0+255),b
  1759   000C32  0E00               	movlw	0
  1760   000C34  6FCD               	movwf	(___lldiv@divisor+1)& (0+255),b
  1761   000C36  0E00               	movlw	0
  1762   000C38  6FCE               	movwf	(___lldiv@divisor+2)& (0+255),b
  1763   000C3A  0E00               	movlw	0
  1764   000C3C  6FCF               	movwf	(___lldiv@divisor+3)& (0+255),b
  1765   000C3E  EC11  F011         	call	___lldiv	;wreg free
  1766   000C42  C0C8  F09C         	movff	?___lldiv,_lectura_sensor_full_band
  1767   000C46  C0C9  F09D         	movff	?___lldiv+1,_lectura_sensor_full_band+1
  1768                           
  1769                           ;main.c: 228:                 lectura_sensor_low_band = (uint16_t)(dato_spi_low_band / 1
      +                          5);
  1770   000C4A  C070  F0C8         	movff	_dato_spi_low_band,___lldiv@dividend
  1771   000C4E  C071  F0C9         	movff	_dato_spi_low_band+1,___lldiv@dividend+1
  1772   000C52  C072  F0CA         	movff	_dato_spi_low_band+2,___lldiv@dividend+2
  1773   000C56  C073  F0CB         	movff	_dato_spi_low_band+3,___lldiv@dividend+3
  1774   000C5A  0E0F               	movlw	15
  1775   000C5C  6FCC               	movwf	___lldiv@divisor& (0+255),b
  1776   000C5E  0E00               	movlw	0
  1777   000C60  6FCD               	movwf	(___lldiv@divisor+1)& (0+255),b
  1778   000C62  0E00               	movlw	0
  1779   000C64  6FCE               	movwf	(___lldiv@divisor+2)& (0+255),b
  1780   000C66  0E00               	movlw	0
  1781   000C68  6FCF               	movwf	(___lldiv@divisor+3)& (0+255),b
  1782   000C6A  EC11  F011         	call	___lldiv	;wreg free
  1783   000C6E  C0C8  F09A         	movff	?___lldiv,_lectura_sensor_low_band
  1784   000C72  C0C9  F09B         	movff	?___lldiv+1,_lectura_sensor_low_band+1
  1785                           
  1786                           ;main.c: 229:                 lectura_sensor_high_band= (uint16_t)(dato_spi_high_band / 
      +                          15);
  1787   000C76  C06C  F0C8         	movff	_dato_spi_high_band,___lldiv@dividend
  1788   000C7A  C06D  F0C9         	movff	_dato_spi_high_band+1,___lldiv@dividend+1
  1789   000C7E  C06E  F0CA         	movff	_dato_spi_high_band+2,___lldiv@dividend+2
  1790   000C82  C06F  F0CB         	movff	_dato_spi_high_band+3,___lldiv@dividend+3
  1791   000C86  0E0F               	movlw	15
  1792   000C88  6FCC               	movwf	___lldiv@divisor& (0+255),b
  1793   000C8A  0E00               	movlw	0
  1794   000C8C  6FCD               	movwf	(___lldiv@divisor+1)& (0+255),b
  1795   000C8E  0E00               	movlw	0
  1796   000C90  6FCE               	movwf	(___lldiv@divisor+2)& (0+255),b
  1797   000C92  0E00               	movlw	0
  1798   000C94  6FCF               	movwf	(___lldiv@divisor+3)& (0+255),b
  1799   000C96  EC11  F011         	call	___lldiv	;wreg free
  1800   000C9A  C0C8  F098         	movff	?___lldiv,_lectura_sensor_high_band
  1801   000C9E  C0C9  F099         	movff	?___lldiv+1,_lectura_sensor_high_band+1
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;main.c: 232:                 lectura_sensor_low_band_test = lectura_sensor_low_band;
  1805   000CA2  C09A  F094         	movff	_lectura_sensor_low_band,_lectura_sensor_low_band_test
  1806   000CA6  C09B  F095         	movff	_lectura_sensor_low_band+1,_lectura_sensor_low_band_test+1
  1807                           
  1808                           ;main.c: 236:                 lectura_sensor_full_band = (uint16_t)((float)lectura_senso
      +                          r_full_band / 13.107);
  1809   000CAA  0E46               	movlw	70
  1810   000CAC  6FEF               	movwf	___fldiv@a& (0+255),b
  1811   000CAE  0EB6               	movlw	182
  1812   000CB0  6FF0               	movwf	(___fldiv@a+1)& (0+255),b
  1813   000CB2  0E51               	movlw	81
  1814   000CB4  6FF1               	movwf	(___fldiv@a+2)& (0+255),b
  1815   000CB6  0E41               	movlw	65
  1816   000CB8  6FF2               	movwf	(___fldiv@a+3)& (0+255),b
  1817   000CBA  C09C  F01F         	movff	_lectura_sensor_full_band,___xxtofl@val
  1818   000CBE  C09D  F020         	movff	_lectura_sensor_full_band+1,___xxtofl@val+1
  1819   000CC2  6A21               	clrf	(___xxtofl@val+2)^0,c
  1820   000CC4  6A22               	clrf	(___xxtofl@val+3)^0,c
  1821   000CC6  0E00               	movlw	0
  1822   000CC8  EC13  F00E         	call	___xxtofl
  1823   000CCC  C01F  F0EB         	movff	?___xxtofl,___fldiv@b
  1824   000CD0  C020  F0EC         	movff	?___xxtofl+1,___fldiv@b+1
  1825   000CD4  C021  F0ED         	movff	?___xxtofl+2,___fldiv@b+2
  1826   000CD8  C022  F0EE         	movff	?___xxtofl+3,___fldiv@b+3
  1827   000CDC  ECFC  F00A         	call	___fldiv	;wreg free
  1828   000CE0  C0EB  F0F7         	movff	?___fldiv,___fltol@f1
  1829   000CE4  C0EC  F0F8         	movff	?___fldiv+1,___fltol@f1+1
  1830   000CE8  C0ED  F0F9         	movff	?___fldiv+2,___fltol@f1+2
  1831   000CEC  C0EE  F0FA         	movff	?___fldiv+3,___fltol@f1+3
  1832   000CF0  EC21  F00F         	call	___fltol	;wreg free
  1833   000CF4  C0F7  F09C         	movff	?___fltol,_lectura_sensor_full_band
  1834   000CF8  C0F8  F09D         	movff	?___fltol+1,_lectura_sensor_full_band+1
  1835                           
  1836                           ;main.c: 237:                 lectura_sensor_low_band = (uint16_t)((float)lectura_sensor
      +                          _low_band / 13.107);
  1837   000CFC  0E46               	movlw	70
  1838   000CFE  6FEF               	movwf	___fldiv@a& (0+255),b
  1839   000D00  0EB6               	movlw	182
  1840   000D02  6FF0               	movwf	(___fldiv@a+1)& (0+255),b
  1841   000D04  0E51               	movlw	81
  1842   000D06  6FF1               	movwf	(___fldiv@a+2)& (0+255),b
  1843   000D08  0E41               	movlw	65
  1844   000D0A  6FF2               	movwf	(___fldiv@a+3)& (0+255),b
  1845   000D0C  C09A  F01F         	movff	_lectura_sensor_low_band,___xxtofl@val
  1846   000D10  C09B  F020         	movff	_lectura_sensor_low_band+1,___xxtofl@val+1
  1847   000D14  6A21               	clrf	(___xxtofl@val+2)^0,c
  1848   000D16  6A22               	clrf	(___xxtofl@val+3)^0,c
  1849   000D18  0E00               	movlw	0
  1850   000D1A  EC13  F00E         	call	___xxtofl
  1851   000D1E  C01F  F0EB         	movff	?___xxtofl,___fldiv@b
  1852   000D22  C020  F0EC         	movff	?___xxtofl+1,___fldiv@b+1
  1853   000D26  C021  F0ED         	movff	?___xxtofl+2,___fldiv@b+2
  1854   000D2A  C022  F0EE         	movff	?___xxtofl+3,___fldiv@b+3
  1855   000D2E  ECFC  F00A         	call	___fldiv	;wreg free
  1856   000D32  C0EB  F0F7         	movff	?___fldiv,___fltol@f1
  1857   000D36  C0EC  F0F8         	movff	?___fldiv+1,___fltol@f1+1
  1858   000D3A  C0ED  F0F9         	movff	?___fldiv+2,___fltol@f1+2
  1859   000D3E  C0EE  F0FA         	movff	?___fldiv+3,___fltol@f1+3
  1860   000D42  EC21  F00F         	call	___fltol	;wreg free
  1861   000D46  C0F7  F09A         	movff	?___fltol,_lectura_sensor_low_band
  1862   000D4A  C0F8  F09B         	movff	?___fltol+1,_lectura_sensor_low_band+1
  1863                           
  1864                           ;main.c: 238:                 lectura_sensor_high_band = (uint16_t)((float)lectura_senso
      +                          r_high_band / 13.107);
  1865   000D4E  0E46               	movlw	70
  1866   000D50  6FEF               	movwf	___fldiv@a& (0+255),b
  1867   000D52  0EB6               	movlw	182
  1868   000D54  6FF0               	movwf	(___fldiv@a+1)& (0+255),b
  1869   000D56  0E51               	movlw	81
  1870   000D58  6FF1               	movwf	(___fldiv@a+2)& (0+255),b
  1871   000D5A  0E41               	movlw	65
  1872   000D5C  6FF2               	movwf	(___fldiv@a+3)& (0+255),b
  1873   000D5E  C098  F01F         	movff	_lectura_sensor_high_band,___xxtofl@val
  1874   000D62  C099  F020         	movff	_lectura_sensor_high_band+1,___xxtofl@val+1
  1875   000D66  6A21               	clrf	(___xxtofl@val+2)^0,c
  1876   000D68  6A22               	clrf	(___xxtofl@val+3)^0,c
  1877   000D6A  0E00               	movlw	0
  1878   000D6C  EC13  F00E         	call	___xxtofl
  1879   000D70  C01F  F0EB         	movff	?___xxtofl,___fldiv@b
  1880   000D74  C020  F0EC         	movff	?___xxtofl+1,___fldiv@b+1
  1881   000D78  C021  F0ED         	movff	?___xxtofl+2,___fldiv@b+2
  1882   000D7C  C022  F0EE         	movff	?___xxtofl+3,___fldiv@b+3
  1883   000D80  ECFC  F00A         	call	___fldiv	;wreg free
  1884   000D84  C0EB  F0F7         	movff	?___fldiv,___fltol@f1
  1885   000D88  C0EC  F0F8         	movff	?___fldiv+1,___fltol@f1+1
  1886   000D8C  C0ED  F0F9         	movff	?___fldiv+2,___fltol@f1+2
  1887   000D90  C0EE  F0FA         	movff	?___fldiv+3,___fltol@f1+3
  1888   000D94  EC21  F00F         	call	___fltol	;wreg free
  1889   000D98  C0F7  F098         	movff	?___fltol,_lectura_sensor_high_band
  1890   000D9C  C0F8  F099         	movff	?___fltol+1,_lectura_sensor_high_band+1
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;main.c: 241:                 DATOS_LISTOS_SENSOR_AFM = 1;
  1894   000DA0  0E01               	movlw	1
  1895   000DA2  6FB1               	movwf	_DATOS_LISTOS_SENSOR_AFM& (0+255),b
  1896                           
  1897                           ; BSR set to: 0
  1898                           ;main.c: 245:                 HABILITAR_VERIFICAR_UMBRAL = 1;
  1899   000DA4  0E01               	movlw	1
  1900   000DA6  6FB3               	movwf	_HABILITAR_VERIFICAR_UMBRAL& (0+255),b
  1901                           
  1902                           ; BSR set to: 0
  1903                           ;main.c: 246:                 LATBbits.LATB3 = !LATBbits.LATB3;
  1904   000DA8  B68A               	btfsc	138,3,c	;volatile
  1905   000DAA  D003               	goto	u8010
  1906   000DAC  6BFD               	clrf	??_main& (0+255),b
  1907   000DAE  2BFD               	incf	??_main& (0+255),f,b
  1908   000DB0  D002               	goto	u8028
  1909   000DB2                     u8010:
  1910   000DB2  0100               	movlb	0	; () banked
  1911   000DB4  6BFD               	clrf	??_main& (0+255),b
  1912   000DB6                     u8028:
  1913   000DB6  47FD               	rlncf	??_main& (0+255),f,b
  1914   000DB8  47FD               	rlncf	??_main& (0+255),f,b
  1915   000DBA  47FD               	rlncf	??_main& (0+255),f,b
  1916   000DBC  508A               	movf	138,w,c	;volatile
  1917   000DBE  19FD               	xorwf	??_main& (0+255),w,b
  1918   000DC0  0BF7               	andlw	-9
  1919   000DC2  19FD               	xorwf	??_main& (0+255),w,b
  1920   000DC4  6E8A               	movwf	138,c	;volatile
  1921   000DC6                     l7269:
  1922                           
  1923                           ; BSR set to: 0
  1924                           ;main.c: 251:         if (HABILITAR_TASK1){
  1925   000DC6  51BF               	movf	_HABILITAR_TASK1& (0+255),w,b	;volatile
  1926   000DC8  B4D8               	btfsc	status,2,c
  1927   000DCA  D007               	goto	u8047
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;main.c: 252:             HABILITAR_TASK1 = 0;
  1931   000DCC  0E00               	movlw	0
  1932   000DCE  6FBF               	movwf	_HABILITAR_TASK1& (0+255),b	;volatile
  1933                           
  1934                           ; BSR set to: 0
  1935                           ;main.c: 255:             LATBbits.LATB4 = PORTBbits.RB2;
  1936   000DD0  A481               	btfss	129,2,c	;volatile
  1937   000DD2  D002               	bra	u8045
  1938   000DD4  888A               	bsf	138,4,c	;volatile
  1939   000DD6  D001               	bra	u8047
  1940   000DD8                     u8045:
  1941   000DD8  988A               	bcf	138,4,c	;volatile
  1942   000DDA                     u8047:
  1943                           
  1944                           ;main.c: 259:         if(HABILITAR_TASK2){
  1945                           
  1946                           ;main.c: 256:         }
  1947   000DDA  0100               	movlb	0	; () banked
  1948   000DDC  51BE               	movf	_HABILITAR_TASK2& (0+255),w,b	;volatile
  1949   000DDE  B4D8               	btfsc	status,2,c
  1950   000DE0  D082               	goto	l7309
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;main.c: 260:             HABILITAR_TASK2 = 0;
  1954   000DE2  0E00               	movlw	0
  1955   000DE4  6FBE               	movwf	_HABILITAR_TASK2& (0+255),b	;volatile
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;main.c: 262:             num_de_estacion = Lectura_Numero_Est();
  1959   000DE6  ECBD  F012         	call	_Lectura_Numero_Est	;wreg free
  1960   000DEA  0100               	movlb	0	; () banked
  1961   000DEC  6FB9               	movwf	_num_de_estacion& (0+255),b	;volatile
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;main.c: 263:             frec_tx_datos = Lectura_Frecuencia_tx();
  1965   000DEE  ECDE  F012         	call	_Lectura_Frecuencia_tx	;wreg free
  1966   000DF2  0100               	movlb	0	; () banked
  1967   000DF4  6FBA               	movwf	_frec_tx_datos& (0+255),b	;volatile
  1968                           
  1969                           ; BSR set to: 0
  1970                           ;main.c: 265:             frecuencia_tx_datos_pc = (uint8_t)((float)(frec_tx_datos)*(flo
      +                          at)(3.0));
  1971   000DF6  0E00               	movlw	0
  1972   000DF8  6FD6               	movwf	___flmul@a& (0+255),b
  1973   000DFA  0E00               	movlw	0
  1974   000DFC  6FD7               	movwf	(___flmul@a+1)& (0+255),b
  1975   000DFE  0E40               	movlw	64
  1976   000E00  6FD8               	movwf	(___flmul@a+2)& (0+255),b
  1977   000E02  0E40               	movlw	64
  1978   000E04  6FD9               	movwf	(___flmul@a+3)& (0+255),b
  1979   000E06  51BA               	movf	_frec_tx_datos& (0+255),w,b	;volatile
  1980   000E08  6E1F               	movwf	___xxtofl@val^0,c
  1981   000E0A  6A20               	clrf	(___xxtofl@val+1)^0,c
  1982   000E0C  6A21               	clrf	(___xxtofl@val+2)^0,c
  1983   000E0E  6A22               	clrf	(___xxtofl@val+3)^0,c
  1984   000E10  0E00               	movlw	0
  1985   000E12  EC13  F00E         	call	___xxtofl
  1986   000E16  C01F  F0D2         	movff	?___xxtofl,___flmul@b
  1987   000E1A  C020  F0D3         	movff	?___xxtofl+1,___flmul@b+1
  1988   000E1E  C021  F0D4         	movff	?___xxtofl+2,___flmul@b+2
  1989   000E22  C022  F0D5         	movff	?___xxtofl+3,___flmul@b+3
  1990   000E26  ECD0  F007         	call	___flmul	;wreg free
  1991   000E2A  C0D2  F0F7         	movff	?___flmul,___fltol@f1
  1992   000E2E  C0D3  F0F8         	movff	?___flmul+1,___fltol@f1+1
  1993   000E32  C0D4  F0F9         	movff	?___flmul+2,___fltol@f1+2
  1994   000E36  C0D5  F0FA         	movff	?___flmul+3,___fltol@f1+3
  1995   000E3A  EC21  F00F         	call	___fltol	;wreg free
  1996   000E3E  51F7               	movf	?___fltol& (0+255),w,b
  1997   000E40  6FB6               	movwf	_frecuencia_tx_datos_pc& (0+255),b
  1998                           
  1999                           ; BSR set to: 0
  2000                           ;main.c: 267:             uint8_t k = 0;
  2001   000E42  0E00               	movlw	0
  2002   000E44  0101               	movlb	1	; () banked
  2003   000E46  6FC4               	movwf	main@k& (0+255),b
  2004                           
  2005                           ; BSR set to: 1
  2006                           ;main.c: 269:             if(DATOS_LISTOS_ADC_BAT && DATOS_LISTOS_SENSOR_AFM){
  2007   000E48  0100               	movlb	0	; () banked
  2008   000E4A  51B2               	movf	_DATOS_LISTOS_ADC_BAT& (0+255),w,b
  2009   000E4C  B4D8               	btfsc	status,2,c
  2010   000E4E  D048               	goto	l7307
  2011                           
  2012                           ; BSR set to: 0
  2013   000E50  51B1               	movf	_DATOS_LISTOS_SENSOR_AFM& (0+255),w,b
  2014   000E52  B4D8               	btfsc	status,2,c
  2015   000E54  D045               	goto	l7307
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;main.c: 271:                 check_sum_valor_calculado = 0;
  2019   000E56  0E00               	movlw	0
  2020   000E58  6F97               	movwf	(_check_sum_valor_calculado+1)& (0+255),b
  2021   000E5A  0E00               	movlw	0
  2022   000E5C  6F96               	movwf	_check_sum_valor_calculado& (0+255),b
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;main.c: 272:                 sprintf(datos_sensores_afm_radio,"%01d%02d +%04u +%04u +%0
      +                          4u +%04u c",
  2026   000E5E  0E3C               	movlw	low _datos_sensores_afm_radio
  2027   000E60  0101               	movlb	1	; () banked
  2028   000E62  6FA6               	movwf	sprintf@s& (0+255),b
  2029   000E64  0E01               	movlw	high _datos_sensores_afm_radio
  2030   000E66  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  2031   000E68  0E01               	movlw	low STR_4
  2032   000E6A  6FA8               	movwf	sprintf@fmt& (0+255),b
  2033   000E6C  C0B7  F1A9         	movff	_ALARMA_ACTIVA,?_sprintf+3
  2034   000E70  6BAA               	clrf	(?_sprintf+4)& (0+255),b
  2035   000E72  C0B9  F1AB         	movff	_num_de_estacion,?_sprintf+5	;volatile
  2036   000E76  6BAC               	clrf	(?_sprintf+6)& (0+255),b
  2037   000E78  C09C  F1AD         	movff	_lectura_sensor_full_band,?_sprintf+7
  2038   000E7C  C09D  F1AE         	movff	_lectura_sensor_full_band+1,?_sprintf+8
  2039   000E80  C09A  F1AF         	movff	_lectura_sensor_low_band,?_sprintf+9
  2040   000E84  C09B  F1B0         	movff	_lectura_sensor_low_band+1,?_sprintf+10
  2041   000E88  C098  F1B1         	movff	_lectura_sensor_high_band,?_sprintf+11
  2042   000E8C  C099  F1B2         	movff	_lectura_sensor_high_band+1,?_sprintf+12
  2043   000E90  C08C  F1B3         	movff	_medida_nivel_bateria_dec,?_sprintf+13
  2044   000E94  C08D  F1B4         	movff	_medida_nivel_bateria_dec+1,?_sprintf+14
  2045   000E98  EC78  F012         	call	_sprintf	;wreg free
  2046                           
  2047                           ; BSR set to: 1
  2048                           ;main.c: 280:                 for(k=0;k<29;k++){
  2049   000E9C  0E00               	movlw	0
  2050   000E9E  6FC4               	movwf	main@k& (0+255),b
  2051   000EA0                     l7295:
  2052                           
  2053                           ; BSR set to: 1
  2054   000EA0  0E1C               	movlw	28
  2055   000EA2  65C4               	cpfsgt	main@k& (0+255),b
  2056   000EA4  D001               	goto	l7299
  2057   000EA6  D010               	goto	l7305
  2058   000EA8                     l7299:
  2059                           
  2060                           ; BSR set to: 1
  2061                           ;main.c: 281:                     check_sum_valor_calculado+= datos_sensores_afm_radio[k
      +                          ];
  2062   000EA8  0E3C               	movlw	low _datos_sensores_afm_radio
  2063   000EAA  25C4               	addwf	main@k& (0+255),w,b
  2064   000EAC  6ED9               	movwf	fsr2l,c
  2065   000EAE  6ADA               	clrf	fsr2h,c
  2066   000EB0  0E01               	movlw	high _datos_sensores_afm_radio
  2067   000EB2  22DA               	addwfc	fsr2h,f,c
  2068   000EB4  50DF               	movf	indf2,w,c
  2069   000EB6  0100               	movlb	0	; () banked
  2070   000EB8  6FFD               	movwf	??_main& (0+255),b
  2071   000EBA  51FD               	movf	??_main& (0+255),w,b
  2072   000EBC  2796               	addwf	_check_sum_valor_calculado& (0+255),f,b
  2073   000EBE  0E00               	movlw	0
  2074   000EC0  2397               	addwfc	(_check_sum_valor_calculado+1)& (0+255),f,b
  2075                           
  2076                           ; BSR set to: 0
  2077                           ;main.c: 282:                 }
  2078   000EC2  0101               	movlb	1	; () banked
  2079   000EC4  2BC4               	incf	main@k& (0+255),f,b
  2080   000EC6  D7EC               	goto	l7295
  2081   000EC8                     l7305:
  2082                           
  2083                           ; BSR set to: 1
  2084                           ;main.c: 285:                 sprintf(check_sum_str,"+%04u \n\r",check_sum_valor_calcula
      +                          do);
  2085   000EC8  0E98               	movlw	low _check_sum_str
  2086   000ECA  6FA6               	movwf	sprintf@s& (0+255),b
  2087   000ECC  0E01               	movlw	high _check_sum_str
  2088   000ECE  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  2089   000ED0  0E24               	movlw	low STR_5
  2090   000ED2  6FA8               	movwf	sprintf@fmt& (0+255),b
  2091   000ED4  C096  F1A9         	movff	_check_sum_valor_calculado,?_sprintf+3
  2092   000ED8  C097  F1AA         	movff	_check_sum_valor_calculado+1,?_sprintf+4
  2093   000EDC  EC78  F012         	call	_sprintf	;wreg free
  2094   000EE0                     l7307:
  2095                           
  2096                           ;main.c: 294:             DATOS_LISTOS_EMPAQUEADO = 1;
  2097   000EE0  0E01               	movlw	1
  2098   000EE2  0100               	movlb	0	; () banked
  2099   000EE4  6FB0               	movwf	_DATOS_LISTOS_EMPAQUEADO& (0+255),b
  2100   000EE6                     l7309:
  2101                           
  2102                           ; BSR set to: 0
  2103                           ;main.c: 299:         if(HABILITAR_TASK3){
  2104   000EE6  51BD               	movf	_HABILITAR_TASK3& (0+255),w,b	;volatile
  2105   000EE8  B4D8               	btfsc	status,2,c
  2106   000EEA  D054               	goto	l339
  2107                           
  2108                           ; BSR set to: 0
  2109                           ;main.c: 300:             HABILITAR_TASK3 = 0;
  2110   000EEC  0E00               	movlw	0
  2111   000EEE  6FBD               	movwf	_HABILITAR_TASK3& (0+255),b	;volatile
  2112                           
  2113                           ;main.c: 302:             HABLILITAR_LECTURA_CH0 = 1;
  2114   000EF0  0E01               	movlw	1
  2115   000EF2  6FC3               	movwf	_HABLILITAR_LECTURA_CH0& (0+255),b	;volatile
  2116                           
  2117                           ;main.c: 304:             HABILITAR_LECTURA_SENSOR = 1;
  2118   000EF4  0E01               	movlw	1
  2119   000EF6  6FB4               	movwf	_HABILITAR_LECTURA_SENSOR& (0+255),b
  2120                           
  2121                           ;main.c: 307:             if(HABILITAR_VERIFICAR_UMBRAL){
  2122   000EF8  51B3               	movf	_HABILITAR_VERIFICAR_UMBRAL& (0+255),w,b
  2123   000EFA  B4D8               	btfsc	status,2,c
  2124   000EFC  D04B               	goto	l339
  2125                           
  2126                           ; BSR set to: 0
  2127                           ;main.c: 308:                 HABILITAR_VERIFICAR_UMBRAL = 0;
  2128   000EFE  0E00               	movlw	0
  2129   000F00  6FB3               	movwf	_HABILITAR_VERIFICAR_UMBRAL& (0+255),b
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;main.c: 309:                 if(NIVEL_UNBRAL_500MV<=lectura_sensor_low_band_test){
  2133   000F02  0E9A               	movlw	154
  2134   000F04  5D94               	subwf	_lectura_sensor_low_band_test& (0+255),w,b
  2135   000F06  0E19               	movlw	25
  2136   000F08  5995               	subwfb	(_lectura_sensor_low_band_test+1)& (0+255),w,b
  2137   000F0A  A0D8               	btfss	status,0,c
  2138   000F0C  D019               	goto	l7327
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;main.c: 310:                     CONT_TIEMPO_UMBRAL++;
  2142   000F0E  4B92               	infsnz	_CONT_TIEMPO_UMBRAL& (0+255),f,b
  2143   000F10  2B93               	incf	(_CONT_TIEMPO_UMBRAL+1)& (0+255),f,b
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;main.c: 312:                     if(111<=CONT_TIEMPO_UMBRAL){
  2147   000F12  5193               	movf	(_CONT_TIEMPO_UMBRAL+1)& (0+255),w,b
  2148   000F14  E104               	bnz	u8120
  2149   000F16  0E6F               	movlw	111
  2150   000F18  5D92               	subwf	_CONT_TIEMPO_UMBRAL& (0+255),w,b
  2151   000F1A  A0D8               	btfss	status,0,c
  2152   000F1C  D03B               	goto	l339
  2153   000F1E                     u8120:
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;main.c: 313:                         CONT_TIEMPO_UMBRAL = 0;
  2157   000F1E  0E00               	movlw	0
  2158   000F20  6F93               	movwf	(_CONT_TIEMPO_UMBRAL+1)& (0+255),b
  2159   000F22  0E00               	movlw	0
  2160   000F24  6F92               	movwf	_CONT_TIEMPO_UMBRAL& (0+255),b
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;main.c: 315:                         Asignar_Minutos_Timer0(0.0164);
  2164   000F26  0E4B               	movlw	75
  2165   000F28  6FD2               	movwf	Asignar_Minutos_Timer0@minutos& (0+255),b
  2166   000F2A  0E59               	movlw	89
  2167   000F2C  6FD3               	movwf	(Asignar_Minutos_Timer0@minutos+1)& (0+255),b
  2168   000F2E  0E86               	movlw	134
  2169   000F30  6FD4               	movwf	(Asignar_Minutos_Timer0@minutos+2)& (0+255),b
  2170   000F32  0E3C               	movlw	60
  2171   000F34  6FD5               	movwf	(Asignar_Minutos_Timer0@minutos+3)& (0+255),b
  2172   000F36  ECED  F013         	call	_Asignar_Minutos_Timer0	;wreg free
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;main.c: 317:                         ALARMA_ACTIVA = 1;
  2176   000F3A  0E01               	movlw	1
  2177   000F3C  6FB7               	movwf	_ALARMA_ACTIVA& (0+255),b
  2178   000F3E  D02A               	goto	l339
  2179   000F40                     l7327:
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;main.c: 321:                     ALARMA_ACTIVA = 0;
  2183   000F40  0E00               	movlw	0
  2184   000F42  6FB7               	movwf	_ALARMA_ACTIVA& (0+255),b
  2185                           
  2186                           ;main.c: 322:                     CONT_TIEMPO_UMBRAL = 0;
  2187   000F44  0E00               	movlw	0
  2188   000F46  6F93               	movwf	(_CONT_TIEMPO_UMBRAL+1)& (0+255),b
  2189   000F48  0E00               	movlw	0
  2190   000F4A  6F92               	movwf	_CONT_TIEMPO_UMBRAL& (0+255),b
  2191                           
  2192                           ; BSR set to: 0
  2193                           ;main.c: 323:                      frec_tx_datos = Lectura_Frecuencia_tx();
  2194   000F4C  ECDE  F012         	call	_Lectura_Frecuencia_tx	;wreg free
  2195   000F50  0100               	movlb	0	; () banked
  2196   000F52  6FBA               	movwf	_frec_tx_datos& (0+255),b	;volatile
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;main.c: 325:                     if(frec_tx_datos == 0){
  2200   000F54  51BA               	movf	_frec_tx_datos& (0+255),w,b	;volatile
  2201   000F56  A4D8               	btfss	status,2,c
  2202   000F58  D00B               	goto	l7335
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;main.c: 326:                         Asignar_Minutos_Timer0(0.0164);
  2206   000F5A  0E4B               	movlw	75
  2207   000F5C  6FD2               	movwf	Asignar_Minutos_Timer0@minutos& (0+255),b
  2208   000F5E  0E59               	movlw	89
  2209   000F60  6FD3               	movwf	(Asignar_Minutos_Timer0@minutos+1)& (0+255),b
  2210   000F62  0E86               	movlw	134
  2211   000F64  6FD4               	movwf	(Asignar_Minutos_Timer0@minutos+2)& (0+255),b
  2212   000F66  0E3C               	movlw	60
  2213   000F68  6FD5               	movwf	(Asignar_Minutos_Timer0@minutos+3)& (0+255),b
  2214   000F6A  ECED  F013         	call	_Asignar_Minutos_Timer0	;wreg free
  2215                           
  2216                           ;main.c: 327:                     }
  2217   000F6E  D012               	goto	l339
  2218   000F70                     l7335:
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;main.c: 329:                         Asignar_Minutos_Timer0(frecuencia_tx_datos_pc);
  2222   000F70  51B6               	movf	_frecuencia_tx_datos_pc& (0+255),w,b
  2223   000F72  6E1F               	movwf	___xxtofl@val^0,c
  2224   000F74  6A20               	clrf	(___xxtofl@val+1)^0,c
  2225   000F76  6A21               	clrf	(___xxtofl@val+2)^0,c
  2226   000F78  6A22               	clrf	(___xxtofl@val+3)^0,c
  2227   000F7A  0E00               	movlw	0
  2228   000F7C  EC13  F00E         	call	___xxtofl
  2229   000F80  C01F  F0D2         	movff	?___xxtofl,Asignar_Minutos_Timer0@minutos
  2230   000F84  C020  F0D3         	movff	?___xxtofl+1,Asignar_Minutos_Timer0@minutos+1
  2231   000F88  C021  F0D4         	movff	?___xxtofl+2,Asignar_Minutos_Timer0@minutos+2
  2232   000F8C  C022  F0D5         	movff	?___xxtofl+3,Asignar_Minutos_Timer0@minutos+3
  2233   000F90  ECED  F013         	call	_Asignar_Minutos_Timer0	;wreg free
  2234   000F94                     l339:
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;main.c: 345:         if(HABILITAR_TASK4){
  2238                           
  2239                           ; BSR set to: 0
  2240   000F94  51BC               	movf	_HABILITAR_TASK4& (0+255),w,b	;volatile
  2241   000F96  B4D8               	btfsc	status,2,c
  2242   000F98  D472               	goto	l7091
  2243                           
  2244                           ; BSR set to: 0
  2245                           ;main.c: 346:             HABILITAR_TASK4 = 0;
  2246   000F9A  0E00               	movlw	0
  2247   000F9C  6FBC               	movwf	_HABILITAR_TASK4& (0+255),b	;volatile
  2248   000F9E  D46F               	goto	l7091
  2249   000FA0                     __end_of_main:
  2250                           	callstack 0
  2251                           
  2252 ;; *************** function _sprintf *****************
  2253 ;; Defined at:
  2254 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  s               2    5[BANK1 ] PTR unsigned char 
  2257 ;;		 -> check_sum_str(9), datos_sensores_afm_radio(60), 
  2258 ;;  fmt             1    7[BANK1 ] PTR const unsigned char 
  2259 ;;		 -> STR_5(9), STR_4(35), 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  f              12   22[BANK1 ] struct _IO_FILE
  2262 ;;  ap              2   20[BANK1 ] PTR void [1]
  2263 ;;		 -> ?_sprintf(2), 
  2264 ;;  ret             2    0        int 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  2    5[BANK1 ] int 
  2267 ;; Registers used:
  2268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 3F/1
  2271 ;;		On exit  : 3F/1
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2274 ;;      Params:         0       0      15       0       0       0       0       0       0
  2275 ;;      Locals:         0       0      14       0       0       0       0       0       0
  2276 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2277 ;;      Totals:         0       0      29       0       0       0       0       0       0
  2278 ;;Total ram usage:       29 bytes
  2279 ;; Hardware stack levels used: 1
  2280 ;; Hardware stack levels required when called: 11
  2281 ;; This function calls:
  2282 ;;		_vfprintf
  2283 ;; This function is called by:
  2284 ;;		_main
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text1
  2289   0024F0                     __ptext1:
  2290                           	callstack 0
  2291   0024F0                     _sprintf:
  2292                           	callstack 19
  2293                           
  2294                           ; BSR set to: 1
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;incstack = 0
  2298   0024F0  0EA9               	movlw	low (?_sprintf+3)
  2299   0024F2  6FB5               	movwf	sprintf@ap& (0+255),b
  2300   0024F4  0E01               	movlw	high (?_sprintf+3)
  2301   0024F6  6FB6               	movwf	(sprintf@ap+1)& (0+255),b
  2302   0024F8  C1A6  F1B7         	movff	sprintf@s,sprintf@f
  2303   0024FC  C1A7  F1B8         	movff	sprintf@s+1,sprintf@f+1
  2304                           
  2305                           ; BSR set to: 1
  2306   002500  0E00               	movlw	0
  2307   002502  6FBB               	movwf	(sprintf@f+4)& (0+255),b
  2308   002504  0E00               	movlw	0
  2309   002506  6FBA               	movwf	(sprintf@f+3)& (0+255),b
  2310                           
  2311                           ; BSR set to: 1
  2312   002508  0E00               	movlw	0
  2313   00250A  6FC2               	movwf	(sprintf@f+11)& (0+255),b
  2314   00250C  0E00               	movlw	0
  2315   00250E  6FC1               	movwf	(sprintf@f+10)& (0+255),b
  2316                           
  2317                           ; BSR set to: 1
  2318   002510  0EB7               	movlw	low sprintf@f
  2319   002512  6FA1               	movwf	vfprintf@fp& (0+255),b
  2320   002514  0E01               	movlw	high sprintf@f
  2321   002516  6FA2               	movwf	(vfprintf@fp+1)& (0+255),b
  2322   002518  C1A8  F1A3         	movff	sprintf@fmt,vfprintf@fmt
  2323   00251C  0EB5               	movlw	low sprintf@ap
  2324   00251E  6FA4               	movwf	vfprintf@ap& (0+255),b
  2325   002520  0E01               	movlw	high sprintf@ap
  2326   002522  6FA5               	movwf	(vfprintf@ap+1)& (0+255),b
  2327   002524  ECFF  F012         	call	_vfprintf	;wreg free
  2328                           
  2329                           ; BSR set to: 1
  2330   002528  51BA               	movf	(sprintf@f+3)& (0+255),w,b
  2331   00252A  25A6               	addwf	sprintf@s& (0+255),w,b
  2332   00252C  6ED9               	movwf	fsr2l,c
  2333   00252E  51BB               	movf	(sprintf@f+4)& (0+255),w,b
  2334   002530  21A7               	addwfc	(sprintf@s+1)& (0+255),w,b
  2335   002532  6EDA               	movwf	fsr2h,c
  2336   002534  6ADF               	clrf	indf2,c
  2337                           
  2338                           ; BSR set to: 1
  2339   002536  0012               	return		;funcret
  2340   002538                     __end_of_sprintf:
  2341                           	callstack 0
  2342                           
  2343 ;; *************** function _vfprintf *****************
  2344 ;; Defined at:
  2345 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  2348 ;;		 -> sprintf@f(12), 
  2349 ;;  fmt             1    2[BANK1 ] PTR const unsigned char 
  2350 ;;		 -> STR_5(9), STR_4(35), 
  2351 ;;  ap              2    3[BANK1 ] PTR PTR void 
  2352 ;;		 -> sprintf@ap(2), 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  cfmt            1   49[BANK0 ] PTR unsigned char 
  2355 ;;		 -> STR_5(9), STR_4(35), 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  2    0[BANK1 ] int 
  2358 ;; Registers used:
  2359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : 3F/1
  2362 ;;		On exit  : 3F/1
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2365 ;;      Params:         0       0       5       0       0       0       0       0       0
  2366 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2367 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2368 ;;      Totals:         0       1       5       0       0       0       0       0       0
  2369 ;;Total ram usage:        6 bytes
  2370 ;; Hardware stack levels used: 1
  2371 ;; Hardware stack levels required when called: 10
  2372 ;; This function calls:
  2373 ;;		_vfpfcnvrt
  2374 ;; This function is called by:
  2375 ;;		_sprintf
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text2
  2380   0025FE                     __ptext2:
  2381                           	callstack 0
  2382   0025FE                     _vfprintf:
  2383                           	callstack 19
  2384                           
  2385                           ; BSR set to: 1
  2386                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2387                           
  2388                           ; BSR set to: 1
  2389                           ;incstack = 0
  2390   0025FE  C1A3  F0F9         	movff	vfprintf@fmt,vfprintf@cfmt
  2391                           
  2392                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2393   002602  D00D               	goto	l7033
  2394   002604                     l7031:
  2395                           
  2396                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2397   002604  C1A1  F0EB         	movff	vfprintf@fp,vfpfcnvrt@fp
  2398   002608  C1A2  F0EC         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2399   00260C  0EF9               	movlw	low vfprintf@cfmt
  2400   00260E  0100               	movlb	0	; () banked
  2401   002610  6FED               	movwf	vfpfcnvrt@fmt& (0+255),b
  2402   002612  C1A4  F0EE         	movff	vfprintf@ap,vfpfcnvrt@ap
  2403   002616  C1A5  F0EF         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2404   00261A  EC8D  F00C         	call	_vfpfcnvrt	;wreg free
  2405   00261E                     l7033:
  2406                           
  2407                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2408   00261E  C0F9  FFF6         	movff	vfprintf@cfmt,tblptrl
  2409   002622                     	if	1	;There is more than 1 active tblptr byte
  2410   002622  0E08               	movlw	high __smallconst
  2411   002624  6EF7               	movwf	tblptrh,c
  2412   002626                     	endif
  2413   002626                     	if	0	;tblptru may be non-zero
  2414   002626                     	endif
  2415   002626                     	if	0	;tblptru may be non-zero
  2416   002626                     	endif
  2417   002626  0008               	tblrd		*
  2418   002628  50F5               	movf	tablat,w,c
  2419   00262A  0900               	iorlw	0
  2420   00262C  A4D8               	btfss	status,2,c
  2421   00262E  D7EA               	goto	l7031
  2422                           
  2423                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2424   002630  0E00               	movlw	0
  2425   002632  0101               	movlb	1	; () banked
  2426   002634  6FA2               	movwf	(?_vfprintf+1)& (0+255),b
  2427   002636  0E00               	movlw	0
  2428   002638  6FA1               	movwf	?_vfprintf& (0+255),b
  2429                           
  2430                           ; BSR set to: 1
  2431   00263A  0012               	return		;funcret
  2432   00263C                     __end_of_vfprintf:
  2433                           	callstack 0
  2434                           
  2435 ;; *************** function _vfpfcnvrt *****************
  2436 ;; Defined at:
  2437 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  2440 ;;		 -> sprintf@f(12), 
  2441 ;;  fmt             1   37[BANK0 ] PTR PTR unsigned char 
  2442 ;;		 -> vfprintf@cfmt(1), 
  2443 ;;  ap              2   38[BANK0 ] PTR PTR void 
  2444 ;;		 -> sprintf@ap(2), 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  convarg         4   44[BANK0 ] struct .
  2447 ;;  done            2   42[BANK0 ] int 
  2448 ;;  i               2    0        int 
  2449 ;;  cp              1   48[BANK0 ] PTR unsigned char 
  2450 ;;		 -> STR_5(9), STR_4(35), 
  2451 ;;  c               1    0        unsigned char 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      void 
  2454 ;; Registers used:
  2455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 3F/0
  2458 ;;		On exit  : 3F/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2461 ;;      Params:         0       5       0       0       0       0       0       0       0
  2462 ;;      Locals:         0       7       0       0       0       0       0       0       0
  2463 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2464 ;;      Totals:         0      14       0       0       0       0       0       0       0
  2465 ;;Total ram usage:       14 bytes
  2466 ;; Hardware stack levels used: 1
  2467 ;; Hardware stack levels required when called: 9
  2468 ;; This function calls:
  2469 ;;		_dtoa
  2470 ;;		_fputc
  2471 ;;		_read_prec_or_width
  2472 ;;		_utoa
  2473 ;; This function is called by:
  2474 ;;		_vfprintf
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	text3
  2479   00191A                     __ptext3:
  2480                           	callstack 0
  2481   00191A                     _vfpfcnvrt:
  2482                           	callstack 19
  2483                           
  2484                           ; BSR set to: 0
  2485                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2486                           
  2487                           ; BSR set to: 1
  2488                           ;incstack = 0
  2489   00191A  51ED               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2490   00191C  6ED9               	movwf	fsr2l,c
  2491   00191E  6ADA               	clrf	fsr2h,c
  2492   001920  CFDF FFF6          	movff	indf2,tblptrl
  2493   001924                     	if	1	;There is more than 1 active tblptr byte
  2494   001924  0E08               	movlw	high __smallconst
  2495   001926  6EF7               	movwf	tblptrh,c
  2496   001928                     	endif
  2497   001928                     	if	0	;tblptru may be non-zero
  2498   001928                     	endif
  2499   001928                     	if	0	;tblptru may be non-zero
  2500   001928                     	endif
  2501   001928  0008               	tblrd		*
  2502   00192A  50F5               	movf	tablat,w,c
  2503   00192C  0A25               	xorlw	37
  2504   00192E  A4D8               	btfss	status,2,c
  2505   001930  D0C4               	goto	l7015
  2506                           
  2507                           ; BSR set to: 0
  2508                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2509   001932  51ED               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2510   001934  6ED9               	movwf	fsr2l,c
  2511   001936  6ADA               	clrf	fsr2h,c
  2512   001938  2ADF               	incf	indf2,f,c
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2516   00193A  0E00               	movlw	0
  2517   00193C  6E25               	movwf	(_width+1)^0,c
  2518   00193E  0E00               	movlw	0
  2519   001940  6E24               	movwf	_width^0,c
  2520   001942  C024  F036         	movff	_width,_flags
  2521                           
  2522                           ; BSR set to: 0
  2523                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2524   001946  6826               	setf	_prec^0,c
  2525   001948  6827               	setf	(_prec+1)^0,c
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1070:         don
      +                          e = 0;
  2529   00194A  0E00               	movlw	0
  2530   00194C  6FF3               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2531   00194E  0E00               	movlw	0
  2532   001950  D009               	goto	L5
  2533   001952                     l6969:
  2534                           
  2535                           ; BSR set to: 0
  2536                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1081:            
      +                                   flags |= (1 << 1);
  2537   001952  8236               	bsf	_flags^0,1,c
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1082:            
      +                                   ++*fmt;
  2541   001954  51ED               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2542   001956  6ED9               	movwf	fsr2l,c
  2543   001958  6ADA               	clrf	fsr2h,c
  2544   00195A  2ADF               	incf	indf2,f,c
  2545                           
  2546                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1083:            
      +                                   break;
  2547   00195C  D019               	goto	l6979
  2548   00195E                     l6973:
  2549                           
  2550                           ; BSR set to: 0
  2551                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1104:            
      +                                   done = 1;
  2552   00195E  0E00               	movlw	0
  2553   001960  6FF3               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2554   001962  0E01               	movlw	1
  2555   001964                     L5:
  2556   001964  6FF2               	movwf	vfpfcnvrt@done& (0+255),b
  2557                           
  2558                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1105:            
      +                                   break;
  2559   001966  D014               	goto	l6979
  2560   001968                     l6977:
  2561                           
  2562                           ; BSR set to: 0
  2563   001968  51ED               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2564   00196A  6ED9               	movwf	fsr2l,c
  2565   00196C  6ADA               	clrf	fsr2h,c
  2566   00196E  CFDF FFF6          	movff	indf2,tblptrl
  2567   001972                     	if	1	;There is more than 1 active tblptr byte
  2568   001972  0E08               	movlw	high __smallconst
  2569   001974  6EF7               	movwf	tblptrh,c
  2570   001976                     	endif
  2571   001976                     	if	0	;tblptru may be non-zero
  2572   001976                     	endif
  2573   001976                     	if	0	;tblptru may be non-zero
  2574   001976                     	endif
  2575   001976  0008               	tblrd		*
  2576   001978  50F5               	movf	tablat,w,c
  2577   00197A  6FF0               	movwf	??_vfpfcnvrt& (0+255),b
  2578   00197C  6BF1               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2579                           
  2580                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2581                           ; Switch size 1, requested type "simple"
  2582                           ; Number of cases is 1, Range of values is 0 to 0
  2583                           ; switch strategies available:
  2584                           ; Name         Instructions Cycles
  2585                           ; simple_byte            4     3 (average)
  2586                           ;	Chosen strategy is simple_byte
  2587   00197E  51F1               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2588   001980  0A00               	xorlw	0	; case 0
  2589   001982  A4D8               	btfss	status,2,c
  2590   001984  D7EC               	goto	l6973
  2591                           
  2592                           ; BSR set to: 0
  2593                           ; Switch size 1, requested type "simple"
  2594                           ; Number of cases is 1, Range of values is 48 to 48
  2595                           ; switch strategies available:
  2596                           ; Name         Instructions Cycles
  2597                           ; simple_byte            4     3 (average)
  2598                           ;	Chosen strategy is simple_byte
  2599   001986  51F0               	movf	??_vfpfcnvrt& (0+255),w,b
  2600   001988  0A30               	xorlw	48	; case 48
  2601   00198A  B4D8               	btfsc	status,2,c
  2602   00198C  D7E2               	goto	l6969
  2603   00198E  D7E7               	goto	l6973
  2604   001990                     l6979:
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  2608   001990  51F2               	movf	vfpfcnvrt@done& (0+255),w,b
  2609   001992  11F3               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2610   001994  B4D8               	btfsc	status,2,c
  2611   001996  D7E8               	goto	l6977
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1117:   width = r
      +                          ead_prec_or_width(fmt, ap);
  2615   001998  C0ED  F0CA         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2616   00199C  C0EE  F0CB         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2617   0019A0  C0EF  F0CC         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  2618   0019A4  EC2F  F010         	call	_read_prec_or_width	;wreg free
  2619   0019A8  C0CA  F024         	movff	?_read_prec_or_width,_width
  2620   0019AC  C0CB  F025         	movff	?_read_prec_or_width+1,_width+1
  2621                           
  2622                           ; BSR set to: 0
  2623                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1118:   if (width
      +                           < 0) {
  2624   0019B0  AE25               	btfss	(_width+1)^0,7,c
  2625   0019B2  D005               	goto	l6987
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1119:    flags |=
      +                           (1 << 0);
  2629   0019B4  8036               	bsf	_flags^0,0,c
  2630                           
  2631                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1120:    width = 
      +                          -width;
  2632   0019B6  6C24               	negf	_width^0,c
  2633   0019B8  1E25               	comf	(_width+1)^0,f,c
  2634   0019BA  B0D8               	btfsc	status,0,c
  2635   0019BC  2A25               	incf	(_width+1)^0,f,c
  2636   0019BE                     l6987:
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  2640   0019BE  51ED               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2641   0019C0  6ED9               	movwf	fsr2l,c
  2642   0019C2  6ADA               	clrf	fsr2h,c
  2643   0019C4  50DF               	movf	indf2,w,c
  2644   0019C6  6FF8               	movwf	vfpfcnvrt@cp& (0+255),b
  2645                           
  2646                           ; BSR set to: 0
  2647                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2648   0019C8  C0F8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2649   0019CC                     	if	1	;There is more than 1 active tblptr byte
  2650   0019CC  0E08               	movlw	high __smallconst
  2651   0019CE  6EF7               	movwf	tblptrh,c
  2652   0019D0                     	endif
  2653   0019D0                     	if	0	;tblptru may be non-zero
  2654   0019D0                     	endif
  2655   0019D0                     	if	0	;tblptru may be non-zero
  2656   0019D0                     	endif
  2657   0019D0  0008               	tblrd		*
  2658   0019D2  50F5               	movf	tablat,w,c
  2659   0019D4  0A64               	xorlw	100
  2660   0019D6  B4D8               	btfsc	status,2,c
  2661   0019D8  D009               	goto	u7750
  2662                           
  2663                           ; BSR set to: 0
  2664   0019DA  C0F8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2665   0019DE                     	if	1	;There is more than 1 active tblptr byte
  2666   0019DE  0E08               	movlw	high __smallconst
  2667   0019E0  6EF7               	movwf	tblptrh,c
  2668   0019E2                     	endif
  2669   0019E2                     	if	0	;tblptru may be non-zero
  2670   0019E2                     	endif
  2671   0019E2                     	if	0	;tblptru may be non-zero
  2672   0019E2                     	endif
  2673   0019E2  0008               	tblrd		*
  2674   0019E4  50F5               	movf	tablat,w,c
  2675   0019E6  0A69               	xorlw	105
  2676   0019E8  A4D8               	btfss	status,2,c
  2677   0019EA  D024               	goto	l6999
  2678   0019EC                     u7750:
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2682   0019EC  C0EE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2683   0019F0  C0EF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2684   0019F4  CFDF F0F0          	movff	indf2,??_vfpfcnvrt
  2685   0019F8  0E02               	movlw	2
  2686   0019FA  26DE               	addwf	postinc2,f,c
  2687   0019FC  CFDF F0F1          	movff	indf2,??_vfpfcnvrt+1
  2688   001A00  0E00               	movlw	0
  2689   001A02  22DD               	addwfc	postdec2,f,c
  2690   001A04  C0F0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2691   001A08  C0F1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2692   001A0C  CFDE F0F4          	movff	postinc2,vfpfcnvrt@convarg
  2693   001A10  CFDD F0F5          	movff	postdec2,vfpfcnvrt@convarg+1
  2694                           
  2695                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  2696   001A14  51ED               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2697   001A16  6ED9               	movwf	fsr2l,c
  2698   001A18  6ADA               	clrf	fsr2h,c
  2699   001A1A  29F8               	incf	vfpfcnvrt@cp& (0+255),w,b
  2700   001A1C  6EDF               	movwf	indf2,c
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2704   001A1E  C0EB  F0DE         	movff	vfpfcnvrt@fp,dtoa@fp
  2705   001A22  C0EC  F0DF         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2706   001A26  C0F4  F0E0         	movff	vfpfcnvrt@convarg,dtoa@d
  2707   001A2A  C0F5  F0E1         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2708   001A2E  EC6F  F00D         	call	_dtoa	;wreg free
  2709   001A32  0012               	return	
  2710   001A34                     l6999:
  2711                           
  2712                           ; BSR set to: 0
  2713   001A34  C0F8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2714   001A38                     	if	1	;There is more than 1 active tblptr byte
  2715   001A38  0E08               	movlw	high __smallconst
  2716   001A3A  6EF7               	movwf	tblptrh,c
  2717   001A3C                     	endif
  2718   001A3C                     	if	0	;tblptru may be non-zero
  2719   001A3C                     	endif
  2720   001A3C                     	if	0	;tblptru may be non-zero
  2721   001A3C                     	endif
  2722   001A3C  0008               	tblrd		*
  2723   001A3E  50F5               	movf	tablat,w,c
  2724   001A40  0A75               	xorlw	117
  2725   001A42  A4D8               	btfss	status,2,c
  2726   001A44  D035               	goto	l7011
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1278:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1321:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  2730   001A46  C0EE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2731   001A4A  C0EF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2732   001A4E  CFDF F0F0          	movff	indf2,??_vfpfcnvrt
  2733   001A52  0E02               	movlw	2
  2734   001A54  26DE               	addwf	postinc2,f,c
  2735   001A56  CFDF F0F1          	movff	indf2,??_vfpfcnvrt+1
  2736   001A5A  0E00               	movlw	0
  2737   001A5C  22DD               	addwfc	postdec2,f,c
  2738   001A5E  C0F0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2739   001A62  C0F1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2740   001A66  CFDE F0F4          	movff	postinc2,vfpfcnvrt@convarg
  2741   001A6A  CFDD F0F5          	movff	postdec2,vfpfcnvrt@convarg+1
  2742                           
  2743                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1323:    *fmt = c
      +                          p+1;
  2744   001A6E  51ED               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2745   001A70  6ED9               	movwf	fsr2l,c
  2746   001A72  6ADA               	clrf	fsr2h,c
  2747   001A74  29F8               	incf	vfpfcnvrt@cp& (0+255),w,b
  2748   001A76  6EDF               	movwf	indf2,c
  2749                           
  2750                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1324:    switch (
      +                          *cp) {
  2751   001A78  D00B               	goto	l7009
  2752   001A7A                     l7003:
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1331:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
  2756   001A7A  C0EB  F0DE         	movff	vfpfcnvrt@fp,utoa@fp
  2757   001A7E  C0EC  F0DF         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2758   001A82  C0F4  F0E0         	movff	vfpfcnvrt@convarg,utoa@d
  2759   001A86  C0F5  F0E1         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  2760   001A8A  ECB4  F00E         	call	_utoa	;wreg free
  2761   001A8E  0012               	return	
  2762   001A90                     l7009:
  2763                           
  2764                           ; BSR set to: 0
  2765   001A90  C0F8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2766   001A94                     	if	1	;There is more than 1 active tblptr byte
  2767   001A94  0E08               	movlw	high __smallconst
  2768   001A96  6EF7               	movwf	tblptrh,c
  2769   001A98                     	endif
  2770   001A98                     	if	0	;tblptru may be non-zero
  2771   001A98                     	endif
  2772   001A98                     	if	0	;tblptru may be non-zero
  2773   001A98                     	endif
  2774   001A98  0008               	tblrd		*
  2775   001A9A  50F5               	movf	tablat,w,c
  2776   001A9C  6FF0               	movwf	??_vfpfcnvrt& (0+255),b
  2777   001A9E  6BF1               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2778                           
  2779                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2780                           ; Switch size 1, requested type "simple"
  2781                           ; Number of cases is 1, Range of values is 0 to 0
  2782                           ; switch strategies available:
  2783                           ; Name         Instructions Cycles
  2784                           ; simple_byte            4     3 (average)
  2785                           ;	Chosen strategy is simple_byte
  2786   001AA0  51F1               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2787   001AA2  0A00               	xorlw	0	; case 0
  2788   001AA4  A4D8               	btfss	status,2,c
  2789   001AA6  D004               	goto	l7011
  2790                           
  2791                           ; BSR set to: 0
  2792                           ; Switch size 1, requested type "simple"
  2793                           ; Number of cases is 1, Range of values is 117 to 117
  2794                           ; switch strategies available:
  2795                           ; Name         Instructions Cycles
  2796                           ; simple_byte            4     3 (average)
  2797                           ;	Chosen strategy is simple_byte
  2798   001AA8  51F0               	movf	??_vfpfcnvrt& (0+255),w,b
  2799   001AAA  0A75               	xorlw	117	; case 117
  2800   001AAC  B4D8               	btfsc	status,2,c
  2801   001AAE  D7E5               	goto	l7003
  2802   001AB0                     l7011:
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2806   001AB0  51ED               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2807   001AB2  6ED9               	movwf	fsr2l,c
  2808   001AB4  6ADA               	clrf	fsr2h,c
  2809   001AB6  2ADF               	incf	indf2,f,c
  2810   001AB8  0012               	return	
  2811   001ABA                     l7015:
  2812                           
  2813                           ; BSR set to: 0
  2814                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2815   001ABA  51ED               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2816   001ABC  6ED9               	movwf	fsr2l,c
  2817   001ABE  6ADA               	clrf	fsr2h,c
  2818   001AC0  CFDF FFF6          	movff	indf2,tblptrl
  2819   001AC4                     	if	1	;There is more than 1 active tblptr byte
  2820   001AC4  0E08               	movlw	high __smallconst
  2821   001AC6  6EF7               	movwf	tblptrh,c
  2822   001AC8                     	endif
  2823   001AC8                     	if	0	;tblptru may be non-zero
  2824   001AC8                     	endif
  2825   001AC8                     	if	0	;tblptru may be non-zero
  2826   001AC8                     	endif
  2827   001AC8  0008               	tblrd		*
  2828   001ACA  50F5               	movf	tablat,w,c
  2829   001ACC  6E1F               	movwf	fputc@c^0,c
  2830   001ACE  6A20               	clrf	(fputc@c+1)^0,c
  2831   001AD0  C0EB  F021         	movff	vfpfcnvrt@fp,fputc@fp
  2832   001AD4  C0EC  F022         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2833   001AD8  EC7F  F010         	call	_fputc	;wreg free
  2834   001ADC  D7E9               	goto	l7011
  2835   001ADE                     __end_of_vfpfcnvrt:
  2836                           	callstack 0
  2837                           
  2838 ;; *************** function _utoa *****************
  2839 ;; Defined at:
  2840 ;;		line 917 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  fp              2   22[BANK0 ] PTR struct _IO_FILE
  2843 ;;		 -> sprintf@f(12), 
  2844 ;;  d               2   24[BANK0 ] unsigned int 
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;  i               2   30[BANK0 ] int 
  2847 ;;  w               2   28[BANK0 ] int 
  2848 ;;  p               2   26[BANK0 ] int 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 3F/0
  2855 ;;		On exit  : 3F/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2858 ;;      Params:         0       4       0       0       0       0       0       0       0
  2859 ;;      Locals:         0       6       0       0       0       0       0       0       0
  2860 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2861 ;;      Totals:         0      10       0       0       0       0       0       0       0
  2862 ;;Total ram usage:       10 bytes
  2863 ;; Hardware stack levels used: 1
  2864 ;; Hardware stack levels required when called: 8
  2865 ;; This function calls:
  2866 ;;		___lwdiv
  2867 ;;		___lwmod
  2868 ;;		_pad
  2869 ;; This function is called by:
  2870 ;;		_vfpfcnvrt
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           	psect	text4
  2875   001D68                     __ptext4:
  2876                           	callstack 0
  2877   001D68                     _utoa:
  2878                           	callstack 19
  2879                           
  2880                           ; BSR set to: 0
  2881                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 917: static void 
      +                          utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 918: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           919:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprn
      +                          t.c: 923:     if (!(prec < 0)) {
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;incstack = 0
  2885   001D68  AE27               	btfss	(_prec+1)^0,7,c
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 924:         flag
      +                          s &= ~(1 << 1);
  2889   001D6A  9236               	bcf	_flags^0,1,c
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 927:     p = (0 <
      +                          = prec) ? prec : 1;
  2893   001D6C  AE27               	btfss	(_prec+1)^0,7,c
  2894   001D6E  D005               	goto	l1336
  2895                           
  2896                           ; BSR set to: 0
  2897   001D70  0E00               	movlw	0
  2898   001D72  6FE3               	movwf	(utoa@p+1)& (0+255),b
  2899   001D74  0E01               	movlw	1
  2900   001D76  6FE2               	movwf	utoa@p& (0+255),b
  2901   001D78  D004               	goto	l1338
  2902   001D7A                     l1336:
  2903                           
  2904                           ; BSR set to: 0
  2905   001D7A  C026  F0E2         	movff	_prec,utoa@p
  2906   001D7E  C027  F0E3         	movff	_prec+1,utoa@p+1
  2907   001D82                     l1338:
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 928:     w = widt
      +                          h;
  2911   001D82  C024  F0E4         	movff	_width,utoa@w
  2912   001D86  C025  F0E5         	movff	_width+1,utoa@w+1
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 931:     i = size
      +                          of(dbuf) - 1;
  2916   001D8A  0E00               	movlw	0
  2917   001D8C  6FE7               	movwf	(utoa@i+1)& (0+255),b
  2918   001D8E  0E1F               	movlw	31
  2919   001D90  6FE6               	movwf	utoa@i& (0+255),b
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 932:     dbuf[i] 
      +                          = '\0';
  2923   001D92  0E00               	movlw	0
  2924   001D94  0101               	movlb	1	; () banked
  2925   001D96  6F97               	movwf	(_dbuf+31)& (0+255),b
  2926                           
  2927                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 933:     while (i
      +                           && (d || (0 < p)
  2928   001D98  D02A               	goto	l6499
  2929   001D9A                     l6489:
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 937:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 938:         --i;
  2933   001D9A  07E6               	decf	utoa@i& (0+255),f,b
  2934   001D9C  A0D8               	btfss	status,0,c
  2935   001D9E  07E7               	decf	(utoa@i+1)& (0+255),f,b
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 939:         dbuf
      +                          [i] = '0' + (d % 10);
  2939   001DA0  0E78               	movlw	low _dbuf
  2940   001DA2  25E6               	addwf	utoa@i& (0+255),w,b
  2941   001DA4  6ED9               	movwf	fsr2l,c
  2942   001DA6  0E01               	movlw	high _dbuf
  2943   001DA8  21E7               	addwfc	(utoa@i+1)& (0+255),w,b
  2944   001DAA  6EDA               	movwf	fsr2h,c
  2945   001DAC  C0E0  F01F         	movff	utoa@d,___lwmod@dividend
  2946   001DB0  C0E1  F020         	movff	utoa@d+1,___lwmod@dividend+1
  2947   001DB4  0E00               	movlw	0
  2948   001DB6  6E22               	movwf	(___lwmod@divisor+1)^0,c
  2949   001DB8  0E0A               	movlw	10
  2950   001DBA  6E21               	movwf	___lwmod@divisor^0,c
  2951   001DBC  EC9C  F012         	call	___lwmod	;wreg free
  2952   001DC0  501F               	movf	?___lwmod^0,w,c
  2953   001DC2  0F30               	addlw	48
  2954   001DC4  6EDF               	movwf	indf2,c
  2955                           
  2956                           ; BSR set to: 0
  2957                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 940:         --p;
  2958   001DC6  07E2               	decf	utoa@p& (0+255),f,b
  2959   001DC8  A0D8               	btfss	status,0,c
  2960   001DCA  07E3               	decf	(utoa@p+1)& (0+255),f,b
  2961                           
  2962                           ; BSR set to: 0
  2963                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 941:         --w;
  2964   001DCC  07E4               	decf	utoa@w& (0+255),f,b
  2965   001DCE  A0D8               	btfss	status,0,c
  2966   001DD0  07E5               	decf	(utoa@w+1)& (0+255),f,b
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 942:         d = 
      +                          d / 10;
  2970   001DD2  C0E0  F01F         	movff	utoa@d,___lwdiv@dividend
  2971   001DD6  C0E1  F020         	movff	utoa@d+1,___lwdiv@dividend+1
  2972   001DDA  0E00               	movlw	0
  2973   001DDC  6E22               	movwf	(___lwdiv@divisor+1)^0,c
  2974   001DDE  0E0A               	movlw	10
  2975   001DE0  6E21               	movwf	___lwdiv@divisor^0,c
  2976   001DE2  EC01  F012         	call	___lwdiv	;wreg free
  2977   001DE6  C01F  F0E0         	movff	?___lwdiv,utoa@d
  2978   001DEA  C020  F0E1         	movff	?___lwdiv+1,utoa@d+1
  2979   001DEE                     l6499:
  2980                           
  2981                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 933:     while (i
      +                           && (d || (0 < p)
  2982   001DEE  0100               	movlb	0	; () banked
  2983   001DF0  51E6               	movf	utoa@i& (0+255),w,b
  2984   001DF2  11E7               	iorwf	(utoa@i+1)& (0+255),w,b
  2985   001DF4  B4D8               	btfsc	status,2,c
  2986   001DF6  D014               	goto	u7220
  2987                           
  2988                           ; BSR set to: 0
  2989   001DF8  51E0               	movf	utoa@d& (0+255),w,b
  2990   001DFA  11E1               	iorwf	(utoa@d+1)& (0+255),w,b
  2991   001DFC  A4D8               	btfss	status,2,c
  2992   001DFE  D7CD               	goto	l6489
  2993                           
  2994                           ; BSR set to: 0
  2995   001E00  BFE3               	btfsc	(utoa@p+1)& (0+255),7,b
  2996   001E02  D005               	goto	u7200
  2997   001E04  51E3               	movf	(utoa@p+1)& (0+255),w,b
  2998   001E06  E1C9               	bnz	l6489
  2999   001E08  05E2               	decf	utoa@p& (0+255),w,b
  3000   001E0A  B0D8               	btfsc	status,0,c
  3001   001E0C  D7C6               	goto	l6489
  3002   001E0E                     u7200:
  3003                           
  3004                           ; BSR set to: 0
  3005   001E0E  BFE5               	btfsc	(utoa@w+1)& (0+255),7,b
  3006   001E10  D007               	goto	u7220
  3007   001E12  51E5               	movf	(utoa@w+1)& (0+255),w,b
  3008   001E14  E103               	bnz	u7210
  3009   001E16  05E4               	decf	utoa@w& (0+255),w,b
  3010   001E18  A0D8               	btfss	status,0,c
  3011   001E1A  D002               	goto	u7220
  3012   001E1C                     u7210:
  3013                           
  3014                           ; BSR set to: 0
  3015   001E1C  B236               	btfsc	_flags^0,1,c
  3016   001E1E  D7BD               	goto	l6489
  3017   001E20                     u7220:
  3018                           
  3019                           ; BSR set to: 0
  3020                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 946:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3021   001E20  C0DE  F0D4         	movff	utoa@fp,pad@fp
  3022   001E24  C0DF  F0D5         	movff	utoa@fp+1,pad@fp+1
  3023   001E28  0E78               	movlw	low _dbuf
  3024   001E2A  25E6               	addwf	utoa@i& (0+255),w,b
  3025   001E2C  6FD6               	movwf	pad@buf& (0+255),b
  3026   001E2E  0E01               	movlw	high _dbuf
  3027   001E30  21E7               	addwfc	(utoa@i+1)& (0+255),w,b
  3028   001E32  6FD7               	movwf	(pad@buf+1)& (0+255),b
  3029   001E34  C0E4  F0D8         	movff	utoa@w,pad@p
  3030   001E38  C0E5  F0D9         	movff	utoa@w+1,pad@p+1
  3031   001E3C  EC52  F011         	call	_pad	;wreg free
  3032                           
  3033                           ; BSR set to: 0
  3034   001E40  0012               	return		;funcret
  3035   001E42                     __end_of_utoa:
  3036                           	callstack 0
  3037                           
  3038 ;; *************** function ___lwmod *****************
  3039 ;; Defined at:
  3040 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwmod.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  dividend        2   30[COMRAM] unsigned int 
  3043 ;;  divisor         2   32[COMRAM] unsigned int 
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;  counter         1   34[COMRAM] unsigned char 
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  2   30[COMRAM] unsigned int 
  3048 ;; Registers used:
  3049 ;;		wreg, status,2, status,0
  3050 ;; Tracked objects:
  3051 ;;		On entry : 3F/0
  3052 ;;		On exit  : 3F/0
  3053 ;;		Unchanged: 3F/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3055 ;;      Params:         4       0       0       0       0       0       0       0       0
  3056 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3057 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3058 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3059 ;;Total ram usage:        5 bytes
  3060 ;; Hardware stack levels used: 1
  3061 ;; Hardware stack levels required when called: 4
  3062 ;; This function calls:
  3063 ;;		Nothing
  3064 ;; This function is called by:
  3065 ;;		_utoa
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text5
  3070   002538                     __ptext5:
  3071                           	callstack 0
  3072   002538                     ___lwmod:
  3073                           	callstack 22
  3074                           
  3075                           ; BSR set to: 0
  3076                           
  3077                           ; BSR set to: 0
  3078                           ;incstack = 0
  3079   002538  5021               	movf	___lwmod@divisor^0,w,c
  3080   00253A  1022               	iorwf	(___lwmod@divisor+1)^0,w,c
  3081   00253C  B4D8               	btfsc	status,2,c
  3082   00253E  D018               	goto	l1104
  3083                           
  3084                           ; BSR set to: 0
  3085   002540  0E01               	movlw	1
  3086   002542  6E23               	movwf	___lwmod@counter^0,c
  3087   002544  D004               	goto	l6387
  3088   002546                     l6385:
  3089                           
  3090                           ; BSR set to: 0
  3091   002546  90D8               	bcf	status,0,c
  3092   002548  3621               	rlcf	___lwmod@divisor^0,f,c
  3093   00254A  3622               	rlcf	(___lwmod@divisor+1)^0,f,c
  3094   00254C  2A23               	incf	___lwmod@counter^0,f,c
  3095   00254E                     l6387:
  3096                           
  3097                           ; BSR set to: 0
  3098   00254E  AE22               	btfss	(___lwmod@divisor+1)^0,7,c
  3099   002550  D7FA               	goto	l6385
  3100   002552                     u6960:
  3101                           
  3102                           ; BSR set to: 0
  3103   002552  5021               	movf	___lwmod@divisor^0,w,c
  3104   002554  5C1F               	subwf	___lwmod@dividend^0,w,c
  3105   002556  5022               	movf	(___lwmod@divisor+1)^0,w,c
  3106   002558  5820               	subwfb	(___lwmod@dividend+1)^0,w,c
  3107   00255A  A0D8               	btfss	status,0,c
  3108   00255C  D004               	goto	l6393
  3109                           
  3110                           ; BSR set to: 0
  3111   00255E  5021               	movf	___lwmod@divisor^0,w,c
  3112   002560  5E1F               	subwf	___lwmod@dividend^0,f,c
  3113   002562  5022               	movf	(___lwmod@divisor+1)^0,w,c
  3114   002564  5A20               	subwfb	(___lwmod@dividend+1)^0,f,c
  3115   002566                     l6393:
  3116                           
  3117                           ; BSR set to: 0
  3118   002566  90D8               	bcf	status,0,c
  3119   002568  3222               	rrcf	(___lwmod@divisor+1)^0,f,c
  3120   00256A  3221               	rrcf	___lwmod@divisor^0,f,c
  3121                           
  3122                           ; BSR set to: 0
  3123   00256C  2E23               	decfsz	___lwmod@counter^0,f,c
  3124   00256E  D7F1               	goto	u6960
  3125   002570                     l1104:
  3126                           
  3127                           ; BSR set to: 0
  3128   002570  C01F  F01F         	movff	___lwmod@dividend,?___lwmod
  3129   002574  C020  F020         	movff	___lwmod@dividend+1,?___lwmod+1
  3130                           
  3131                           ; BSR set to: 0
  3132   002578  0012               	return		;funcret
  3133   00257A                     __end_of___lwmod:
  3134                           	callstack 0
  3135                           
  3136 ;; *************** function ___lwdiv *****************
  3137 ;; Defined at:
  3138 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  dividend        2   30[COMRAM] unsigned int 
  3141 ;;  divisor         2   32[COMRAM] unsigned int 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  quotient        2    1[BANK0 ] unsigned int 
  3144 ;;  counter         1    0[BANK0 ] unsigned char 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  2   30[COMRAM] unsigned int 
  3147 ;; Registers used:
  3148 ;;		wreg, status,2, status,0
  3149 ;; Tracked objects:
  3150 ;;		On entry : 3F/0
  3151 ;;		On exit  : 3F/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3154 ;;      Params:         4       0       0       0       0       0       0       0       0
  3155 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3156 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3157 ;;      Totals:         4       3       0       0       0       0       0       0       0
  3158 ;;Total ram usage:        7 bytes
  3159 ;; Hardware stack levels used: 1
  3160 ;; Hardware stack levels required when called: 4
  3161 ;; This function calls:
  3162 ;;		Nothing
  3163 ;; This function is called by:
  3164 ;;		_utoa
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text6
  3169   002402                     __ptext6:
  3170                           	callstack 0
  3171   002402                     ___lwdiv:
  3172                           	callstack 22
  3173                           
  3174                           ; BSR set to: 0
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;incstack = 0
  3178   002402  0E00               	movlw	0
  3179   002404  6FCA               	movwf	(___lwdiv@quotient+1)& (0+255),b
  3180   002406  0E00               	movlw	0
  3181   002408  6FC9               	movwf	___lwdiv@quotient& (0+255),b
  3182                           
  3183                           ; BSR set to: 0
  3184   00240A  5021               	movf	___lwdiv@divisor^0,w,c
  3185   00240C  1022               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3186   00240E  B4D8               	btfsc	status,2,c
  3187   002410  D01C               	goto	l1094
  3188                           
  3189                           ; BSR set to: 0
  3190   002412  0E01               	movlw	1
  3191   002414  6FC8               	movwf	___lwdiv@counter& (0+255),b
  3192   002416  D004               	goto	l6367
  3193   002418                     l6365:
  3194                           
  3195                           ; BSR set to: 0
  3196   002418  90D8               	bcf	status,0,c
  3197   00241A  3621               	rlcf	___lwdiv@divisor^0,f,c
  3198   00241C  3622               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3199   00241E  2BC8               	incf	___lwdiv@counter& (0+255),f,b
  3200   002420                     l6367:
  3201                           
  3202                           ; BSR set to: 0
  3203   002420  AE22               	btfss	(___lwdiv@divisor+1)^0,7,c
  3204   002422  D7FA               	goto	l6365
  3205   002424                     u6930:
  3206                           
  3207                           ; BSR set to: 0
  3208   002424  90D8               	bcf	status,0,c
  3209   002426  37C9               	rlcf	___lwdiv@quotient& (0+255),f,b
  3210   002428  37CA               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  3211                           
  3212                           ; BSR set to: 0
  3213   00242A  5021               	movf	___lwdiv@divisor^0,w,c
  3214   00242C  5C1F               	subwf	___lwdiv@dividend^0,w,c
  3215   00242E  5022               	movf	(___lwdiv@divisor+1)^0,w,c
  3216   002430  5820               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3217   002432  A0D8               	btfss	status,0,c
  3218   002434  D005               	goto	l6377
  3219                           
  3220                           ; BSR set to: 0
  3221   002436  5021               	movf	___lwdiv@divisor^0,w,c
  3222   002438  5E1F               	subwf	___lwdiv@dividend^0,f,c
  3223   00243A  5022               	movf	(___lwdiv@divisor+1)^0,w,c
  3224   00243C  5A20               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3225                           
  3226                           ; BSR set to: 0
  3227   00243E  81C9               	bsf	___lwdiv@quotient& (0+255),0,b
  3228   002440                     l6377:
  3229                           
  3230                           ; BSR set to: 0
  3231   002440  90D8               	bcf	status,0,c
  3232   002442  3222               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3233   002444  3221               	rrcf	___lwdiv@divisor^0,f,c
  3234                           
  3235                           ; BSR set to: 0
  3236   002446  2FC8               	decfsz	___lwdiv@counter& (0+255),f,b
  3237   002448  D7ED               	goto	u6930
  3238   00244A                     l1094:
  3239                           
  3240                           ; BSR set to: 0
  3241   00244A  C0C9  F01F         	movff	___lwdiv@quotient,?___lwdiv
  3242   00244E  C0CA  F020         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3243                           
  3244                           ; BSR set to: 0
  3245   002452  0012               	return		;funcret
  3246   002454                     __end_of___lwdiv:
  3247                           	callstack 0
  3248                           
  3249 ;; *************** function _read_prec_or_width *****************
  3250 ;; Defined at:
  3251 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;  fmt             1    2[BANK0 ] PTR PTR const unsigned c
  3254 ;;		 -> vfprintf@cfmt(1), 
  3255 ;;  ap              2    3[BANK0 ] PTR PTR void [1]
  3256 ;;		 -> sprintf@ap(2), 
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;  c               1    7[BANK0 ] unsigned char 
  3259 ;;  n               2    8[BANK0 ] int 
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  2    2[BANK0 ] int 
  3262 ;; Registers used:
  3263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3264 ;; Tracked objects:
  3265 ;;		On entry : 3F/0
  3266 ;;		On exit  : 3F/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3269 ;;      Params:         0       3       0       0       0       0       0       0       0
  3270 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3271 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3272 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3273 ;;Total ram usage:        8 bytes
  3274 ;; Hardware stack levels used: 1
  3275 ;; Hardware stack levels required when called: 5
  3276 ;; This function calls:
  3277 ;;		___wmul
  3278 ;; This function is called by:
  3279 ;;		_vfpfcnvrt
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text7
  3284   00205E                     __ptext7:
  3285                           	callstack 0
  3286   00205E                     _read_prec_or_width:
  3287                           	callstack 22
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;incstack = 0
  3294   00205E  0E00               	movlw	0
  3295   002060  6FD1               	movwf	(read_prec_or_width@n+1)& (0+255),b
  3296   002062  0E00               	movlw	0
  3297   002064  6FD0               	movwf	read_prec_or_width@n& (0+255),b
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  3301   002066  51CA               	movf	read_prec_or_width@fmt& (0+255),w,b
  3302   002068  6ED9               	movwf	fsr2l,c
  3303   00206A  6ADA               	clrf	fsr2h,c
  3304   00206C  CFDF FFF6          	movff	indf2,tblptrl
  3305   002070                     	if	1	;There is more than 1 active tblptr byte
  3306   002070  0E08               	movlw	high __smallconst
  3307   002072  6EF7               	movwf	tblptrh,c
  3308   002074                     	endif
  3309   002074                     	if	0	;tblptru may be non-zero
  3310   002074                     	endif
  3311   002074                     	if	0	;tblptru may be non-zero
  3312   002074                     	endif
  3313   002074  0008               	tblrd		*
  3314   002076  50F5               	movf	tablat,w,c
  3315   002078  0A2A               	xorlw	42
  3316   00207A  A4D8               	btfss	status,2,c
  3317   00207C  D02D               	goto	l6957
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  3321   00207E  51CA               	movf	read_prec_or_width@fmt& (0+255),w,b
  3322   002080  6ED9               	movwf	fsr2l,c
  3323   002082  6ADA               	clrf	fsr2h,c
  3324   002084  2ADF               	incf	indf2,f,c
  3325                           
  3326                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3327   002086  C0CB  FFD9         	movff	read_prec_or_width@ap,fsr2l
  3328   00208A  C0CC  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  3329   00208E  CFDF F0CD          	movff	indf2,??_read_prec_or_width
  3330   002092  0E02               	movlw	2
  3331   002094  26DE               	addwf	postinc2,f,c
  3332   002096  CFDF F0CE          	movff	indf2,??_read_prec_or_width+1
  3333   00209A  0E00               	movlw	0
  3334   00209C  22DD               	addwfc	postdec2,f,c
  3335   00209E  C0CD  FFD9         	movff	??_read_prec_or_width,fsr2l
  3336   0020A2  C0CE  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  3337   0020A6  CFDE F0D0          	movff	postinc2,read_prec_or_width@n
  3338   0020AA  CFDD F0D1          	movff	postdec2,read_prec_or_width@n+1
  3339                           
  3340                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  3341   0020AE  D022               	goto	u7700
  3342   0020B0                     l6953:
  3343                           
  3344                           ; BSR set to: 0
  3345                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  3346   0020B0  C0D0  F01F         	movff	read_prec_or_width@n,___wmul@multiplier
  3347   0020B4  C0D1  F020         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  3348   0020B8  0E00               	movlw	0
  3349   0020BA  6E22               	movwf	(___wmul@multiplicand+1)^0,c
  3350   0020BC  0E0A               	movlw	10
  3351   0020BE  6E21               	movwf	___wmul@multiplicand^0,c
  3352   0020C0  EC9A  F013         	call	___wmul	;wreg free
  3353   0020C4  51CF               	movf	read_prec_or_width@c& (0+255),w,b
  3354   0020C6  241F               	addwf	?___wmul^0,w,c
  3355   0020C8  6FD0               	movwf	read_prec_or_width@n& (0+255),b
  3356   0020CA  0E00               	movlw	0
  3357   0020CC  2020               	addwfc	(?___wmul+1)^0,w,c
  3358   0020CE  6FD1               	movwf	(read_prec_or_width@n+1)& (0+255),b
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  3362   0020D0  51CA               	movf	read_prec_or_width@fmt& (0+255),w,b
  3363   0020D2  6ED9               	movwf	fsr2l,c
  3364   0020D4  6ADA               	clrf	fsr2h,c
  3365   0020D6  2ADF               	incf	indf2,f,c
  3366   0020D8                     l6957:
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3370   0020D8  51CA               	movf	read_prec_or_width@fmt& (0+255),w,b
  3371   0020DA  6ED9               	movwf	fsr2l,c
  3372   0020DC  6ADA               	clrf	fsr2h,c
  3373   0020DE  CFDF FFF6          	movff	indf2,tblptrl
  3374   0020E2                     	if	1	;There is more than 1 active tblptr byte
  3375   0020E2  0E08               	movlw	high __smallconst
  3376   0020E4  6EF7               	movwf	tblptrh,c
  3377   0020E6                     	endif
  3378   0020E6                     	if	0	;tblptru may be non-zero
  3379   0020E6                     	endif
  3380   0020E6                     	if	0	;tblptru may be non-zero
  3381   0020E6                     	endif
  3382   0020E6  0008               	tblrd		*
  3383   0020E8  50F5               	movf	tablat,w,c
  3384   0020EA  0FD0               	addlw	208
  3385   0020EC  6FCF               	movwf	read_prec_or_width@c& (0+255),b
  3386   0020EE  0E09               	movlw	9
  3387   0020F0  65CF               	cpfsgt	read_prec_or_width@c& (0+255),b
  3388   0020F2  D7DE               	goto	l6953
  3389   0020F4                     u7700:
  3390                           
  3391                           ; BSR set to: 0
  3392                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  3393                           
  3394                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1040:     }
  3395   0020F4  C0D0  F0CA         	movff	read_prec_or_width@n,?_read_prec_or_width
  3396   0020F8  C0D1  F0CB         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  3397                           
  3398                           ; BSR set to: 0
  3399   0020FC  0012               	return		;funcret
  3400   0020FE                     __end_of_read_prec_or_width:
  3401                           	callstack 0
  3402                           
  3403 ;; *************** function ___wmul *****************
  3404 ;; Defined at:
  3405 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;  multiplier      2   30[COMRAM] unsigned int 
  3408 ;;  multiplicand    2   32[COMRAM] unsigned int 
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;  product         2    0[BANK0 ] unsigned int 
  3411 ;; Return value:  Size  Location     Type
  3412 ;;                  2   30[COMRAM] unsigned int 
  3413 ;; Registers used:
  3414 ;;		wreg, status,2, status,0, prodl, prodh
  3415 ;; Tracked objects:
  3416 ;;		On entry : 3F/0
  3417 ;;		On exit  : 3F/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3420 ;;      Params:         4       0       0       0       0       0       0       0       0
  3421 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3422 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3423 ;;      Totals:         4       2       0       0       0       0       0       0       0
  3424 ;;Total ram usage:        6 bytes
  3425 ;; Hardware stack levels used: 1
  3426 ;; Hardware stack levels required when called: 4
  3427 ;; This function calls:
  3428 ;;		Nothing
  3429 ;; This function is called by:
  3430 ;;		_read_prec_or_width
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           	psect	text8
  3435   002734                     __ptext8:
  3436                           	callstack 0
  3437   002734                     ___wmul:
  3438                           	callstack 22
  3439                           
  3440                           ; BSR set to: 0
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;incstack = 0
  3444   002734  501F               	movf	___wmul@multiplier^0,w,c
  3445   002736  0221               	mulwf	___wmul@multiplicand^0,c
  3446   002738  CFF3 F0C8          	movff	prodl,___wmul@product
  3447   00273C  CFF4 F0C9          	movff	prodh,___wmul@product+1
  3448   002740  501F               	movf	___wmul@multiplier^0,w,c
  3449   002742  0222               	mulwf	(___wmul@multiplicand+1)^0,c
  3450   002744  50F3               	movf	243,w,c
  3451   002746  27C9               	addwf	(___wmul@product+1)& (0+255),f,b
  3452   002748  5020               	movf	(___wmul@multiplier+1)^0,w,c
  3453   00274A  0221               	mulwf	___wmul@multiplicand^0,c
  3454   00274C  50F3               	movf	243,w,c
  3455   00274E  27C9               	addwf	(___wmul@product+1)& (0+255),f,b
  3456                           
  3457                           ; BSR set to: 0
  3458   002750  C0C8  F01F         	movff	___wmul@product,?___wmul
  3459   002754  C0C9  F020         	movff	___wmul@product+1,?___wmul+1
  3460                           
  3461                           ; BSR set to: 0
  3462   002758  0012               	return		;funcret
  3463   00275A                     __end_of___wmul:
  3464                           	callstack 0
  3465                           
  3466 ;; *************** function _dtoa *****************
  3467 ;; Defined at:
  3468 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;  fp              2   22[BANK0 ] PTR struct _IO_FILE
  3471 ;;		 -> sprintf@f(12), 
  3472 ;;  d               2   24[BANK0 ] int 
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;  i               2   33[BANK0 ] int 
  3475 ;;  w               2   30[BANK0 ] int 
  3476 ;;  p               2   28[BANK0 ] int 
  3477 ;;  s               1   32[BANK0 ] unsigned char 
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      void 
  3480 ;; Registers used:
  3481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3482 ;; Tracked objects:
  3483 ;;		On entry : 3F/0
  3484 ;;		On exit  : 3F/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3487 ;;      Params:         0       4       0       0       0       0       0       0       0
  3488 ;;      Locals:         0       9       0       0       0       0       0       0       0
  3489 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3490 ;;      Totals:         0      13       0       0       0       0       0       0       0
  3491 ;;Total ram usage:       13 bytes
  3492 ;; Hardware stack levels used: 1
  3493 ;; Hardware stack levels required when called: 8
  3494 ;; This function calls:
  3495 ;;		___awdiv
  3496 ;;		___awmod
  3497 ;;		_abs
  3498 ;;		_pad
  3499 ;; This function is called by:
  3500 ;;		_vfpfcnvrt
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           	psect	text9
  3505   001ADE                     __ptext9:
  3506                           	callstack 0
  3507   001ADE                     _dtoa:
  3508                           	callstack 19
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  3512                           
  3513                           ; BSR set to: 0
  3514                           ;incstack = 0
  3515   001ADE  AFE1               	btfss	(dtoa@d+1)& (0+255),7,b
  3516   001AE0  D002               	goto	u7030
  3517   001AE2  0E01               	movlw	1
  3518   001AE4  D001               	goto	u7040
  3519   001AE6                     u7030:
  3520   001AE6  0E00               	movlw	0
  3521   001AE8                     u7040:
  3522   001AE8  6FE8               	movwf	dtoa@s& (0+255),b
  3523                           
  3524                           ; BSR set to: 0
  3525                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  3526   001AEA  51E8               	movf	dtoa@s& (0+255),w,b
  3527   001AEC  B4D8               	btfsc	status,2,c
  3528   001AEE  D004               	goto	l6425
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  3532   001AF0  6DE0               	negf	dtoa@d& (0+255),b
  3533   001AF2  1FE1               	comf	(dtoa@d+1)& (0+255),f,b
  3534   001AF4  B0D8               	btfsc	status,0,c
  3535   001AF6  2BE1               	incf	(dtoa@d+1)& (0+255),f,b
  3536   001AF8                     l6425:
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 483:     if (!(pr
      +                          ec < 0)) {
  3540   001AF8  AE27               	btfss	(_prec+1)^0,7,c
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 484:         flag
      +                          s &= ~(1 << 1);
  3544   001AFA  9236               	bcf	_flags^0,1,c
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  3548   001AFC  AE27               	btfss	(_prec+1)^0,7,c
  3549   001AFE  D005               	goto	l1315
  3550                           
  3551                           ; BSR set to: 0
  3552   001B00  0E00               	movlw	0
  3553   001B02  6FE5               	movwf	(dtoa@p+1)& (0+255),b
  3554   001B04  0E01               	movlw	1
  3555   001B06  6FE4               	movwf	dtoa@p& (0+255),b
  3556   001B08  D004               	goto	l1317
  3557   001B0A                     l1315:
  3558                           
  3559                           ; BSR set to: 0
  3560   001B0A  C026  F0E4         	movff	_prec,dtoa@p
  3561   001B0E  C027  F0E5         	movff	_prec+1,dtoa@p+1
  3562   001B12                     l1317:
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  3566   001B12  C024  F0E6         	movff	_width,dtoa@w
  3567   001B16  C025  F0E7         	movff	_width+1,dtoa@w+1
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  3571   001B1A  51E8               	movf	dtoa@s& (0+255),w,b
  3572   001B1C  B4D8               	btfsc	status,2,c
  3573   001B1E  D010               	goto	l1318
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  3577   001B20  07E6               	decf	dtoa@w& (0+255),f,b
  3578   001B22  A0D8               	btfss	status,0,c
  3579   001B24  07E7               	decf	(dtoa@w+1)& (0+255),f,b
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  3583   001B26  51E8               	movf	dtoa@s& (0+255),w,b
  3584   001B28  A4D8               	btfss	status,2,c
  3585   001B2A  D004               	goto	l6441
  3586                           
  3587                           ; BSR set to: 0
  3588   001B2C  0E00               	movlw	0
  3589   001B2E  6FE3               	movwf	(_dtoa$2490+1)& (0+255),b
  3590   001B30  0E2B               	movlw	43
  3591   001B32  D003               	goto	L6
  3592   001B34                     l6441:
  3593                           
  3594                           ; BSR set to: 0
  3595   001B34  0E00               	movlw	0
  3596   001B36  6FE3               	movwf	(_dtoa$2490+1)& (0+255),b
  3597   001B38  0E2D               	movlw	45
  3598   001B3A                     L6:
  3599   001B3A  6FE2               	movwf	_dtoa$2490& (0+255),b
  3600                           
  3601                           ; BSR set to: 0
  3602   001B3C  C0E2  F0E8         	movff	_dtoa$2490,dtoa@s
  3603   001B40                     l1318:
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  3607   001B40  0E00               	movlw	0
  3608   001B42  6FEA               	movwf	(dtoa@i+1)& (0+255),b
  3609   001B44  0E1F               	movlw	31
  3610   001B46  6FE9               	movwf	dtoa@i& (0+255),b
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  3614   001B48  0E00               	movlw	0
  3615   001B4A  0101               	movlb	1	; () banked
  3616   001B4C  6F97               	movwf	(_dbuf+31)& (0+255),b
  3617                           
  3618                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  3619   001B4E  D030               	goto	l6457
  3620   001B50                     l6447:
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  3624   001B50  07E9               	decf	dtoa@i& (0+255),f,b
  3625   001B52  A0D8               	btfss	status,0,c
  3626   001B54  07EA               	decf	(dtoa@i+1)& (0+255),f,b
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  3630   001B56  0E78               	movlw	low _dbuf
  3631   001B58  25E9               	addwf	dtoa@i& (0+255),w,b
  3632   001B5A  6ED9               	movwf	fsr2l,c
  3633   001B5C  0E01               	movlw	high _dbuf
  3634   001B5E  21EA               	addwfc	(dtoa@i+1)& (0+255),w,b
  3635   001B60  6EDA               	movwf	fsr2h,c
  3636   001B62  C0E0  F01F         	movff	dtoa@d,___awmod@dividend
  3637   001B66  C0E1  F020         	movff	dtoa@d+1,___awmod@dividend+1
  3638   001B6A  0E00               	movlw	0
  3639   001B6C  6E22               	movwf	(___awmod@divisor+1)^0,c
  3640   001B6E  0E0A               	movlw	10
  3641   001B70  6E21               	movwf	___awmod@divisor^0,c
  3642   001B72  EC91  F011         	call	___awmod	;wreg free
  3643   001B76  C01F  F0CA         	movff	?___awmod,abs@a
  3644   001B7A  C020  F0CB         	movff	?___awmod+1,abs@a+1
  3645   001B7E  EC57  F013         	call	_abs	;wreg free
  3646   001B82  51CA               	movf	?_abs& (0+255),w,b
  3647   001B84  0F30               	addlw	48
  3648   001B86  6EDF               	movwf	indf2,c
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  3652   001B88  07E4               	decf	dtoa@p& (0+255),f,b
  3653   001B8A  A0D8               	btfss	status,0,c
  3654   001B8C  07E5               	decf	(dtoa@p+1)& (0+255),f,b
  3655                           
  3656                           ; BSR set to: 0
  3657                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  3658   001B8E  07E6               	decf	dtoa@w& (0+255),f,b
  3659   001B90  A0D8               	btfss	status,0,c
  3660   001B92  07E7               	decf	(dtoa@w+1)& (0+255),f,b
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  3664   001B94  C0E0  F01F         	movff	dtoa@d,___awdiv@dividend
  3665   001B98  C0E1  F020         	movff	dtoa@d+1,___awdiv@dividend+1
  3666   001B9C  0E00               	movlw	0
  3667   001B9E  6E22               	movwf	(___awdiv@divisor+1)^0,c
  3668   001BA0  0E0A               	movlw	10
  3669   001BA2  6E21               	movwf	___awdiv@divisor^0,c
  3670   001BA4  ECCF  F010         	call	___awdiv	;wreg free
  3671   001BA8  C01F  F0E0         	movff	?___awdiv,dtoa@d
  3672   001BAC  C020  F0E1         	movff	?___awdiv+1,dtoa@d+1
  3673   001BB0                     l6457:
  3674                           
  3675                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  3676   001BB0  0100               	movlb	0	; () banked
  3677   001BB2  BFEA               	btfsc	(dtoa@i+1)& (0+255),7,b
  3678   001BB4  D019               	goto	u7140
  3679   001BB6  51EA               	movf	(dtoa@i+1)& (0+255),w,b
  3680   001BB8  E103               	bnz	u7100
  3681   001BBA  05E9               	decf	dtoa@i& (0+255),w,b
  3682   001BBC  A0D8               	btfss	status,0,c
  3683   001BBE  D014               	goto	u7140
  3684   001BC0                     u7100:
  3685                           
  3686                           ; BSR set to: 0
  3687   001BC0  51E0               	movf	dtoa@d& (0+255),w,b
  3688   001BC2  11E1               	iorwf	(dtoa@d+1)& (0+255),w,b
  3689   001BC4  A4D8               	btfss	status,2,c
  3690   001BC6  D7C4               	goto	l6447
  3691                           
  3692                           ; BSR set to: 0
  3693   001BC8  BFE5               	btfsc	(dtoa@p+1)& (0+255),7,b
  3694   001BCA  D005               	goto	u7120
  3695   001BCC  51E5               	movf	(dtoa@p+1)& (0+255),w,b
  3696   001BCE  E1C0               	bnz	l6447
  3697   001BD0  05E4               	decf	dtoa@p& (0+255),w,b
  3698   001BD2  B0D8               	btfsc	status,0,c
  3699   001BD4  D7BD               	goto	l6447
  3700   001BD6                     u7120:
  3701                           
  3702                           ; BSR set to: 0
  3703   001BD6  BFE7               	btfsc	(dtoa@w+1)& (0+255),7,b
  3704   001BD8  D007               	goto	u7140
  3705   001BDA  51E7               	movf	(dtoa@w+1)& (0+255),w,b
  3706   001BDC  E103               	bnz	u7130
  3707   001BDE  05E6               	decf	dtoa@w& (0+255),w,b
  3708   001BE0  A0D8               	btfss	status,0,c
  3709   001BE2  D002               	goto	u7140
  3710   001BE4                     u7130:
  3711                           
  3712                           ; BSR set to: 0
  3713   001BE4  B236               	btfsc	_flags^0,1,c
  3714   001BE6  D7B4               	goto	l6447
  3715   001BE8                     u7140:
  3716                           
  3717                           ; BSR set to: 0
  3718                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  3719   001BE8  51E8               	movf	dtoa@s& (0+255),w,b
  3720   001BEA  B4D8               	btfsc	status,2,c
  3721   001BEC  D00B               	goto	l6473
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  3725   001BEE  07E9               	decf	dtoa@i& (0+255),f,b
  3726   001BF0  A0D8               	btfss	status,0,c
  3727   001BF2  07EA               	decf	(dtoa@i+1)& (0+255),f,b
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  3731   001BF4  0E78               	movlw	low _dbuf
  3732   001BF6  25E9               	addwf	dtoa@i& (0+255),w,b
  3733   001BF8  6ED9               	movwf	fsr2l,c
  3734   001BFA  0E01               	movlw	high _dbuf
  3735   001BFC  21EA               	addwfc	(dtoa@i+1)& (0+255),w,b
  3736   001BFE  6EDA               	movwf	fsr2h,c
  3737   001C00  C0E8  FFDF         	movff	dtoa@s,indf2
  3738   001C04                     l6473:
  3739                           
  3740                           ; BSR set to: 0
  3741                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3742   001C04  C0DE  F0D4         	movff	dtoa@fp,pad@fp
  3743   001C08  C0DF  F0D5         	movff	dtoa@fp+1,pad@fp+1
  3744   001C0C  0E78               	movlw	low _dbuf
  3745   001C0E  25E9               	addwf	dtoa@i& (0+255),w,b
  3746   001C10  6FD6               	movwf	pad@buf& (0+255),b
  3747   001C12  0E01               	movlw	high _dbuf
  3748   001C14  21EA               	addwfc	(dtoa@i+1)& (0+255),w,b
  3749   001C16  6FD7               	movwf	(pad@buf+1)& (0+255),b
  3750   001C18  C0E6  F0D8         	movff	dtoa@w,pad@p
  3751   001C1C  C0E7  F0D9         	movff	dtoa@w+1,pad@p+1
  3752   001C20  EC52  F011         	call	_pad	;wreg free
  3753                           
  3754                           ; BSR set to: 0
  3755   001C24  0012               	return		;funcret
  3756   001C26                     __end_of_dtoa:
  3757                           	callstack 0
  3758                           
  3759 ;; *************** function _pad *****************
  3760 ;; Defined at:
  3761 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  3764 ;;		 -> sprintf@f(12), 
  3765 ;;  buf             2   14[BANK0 ] PTR unsigned char 
  3766 ;;		 -> dbuf(32), 
  3767 ;;  p               2   16[BANK0 ] int 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;  w               2   20[BANK0 ] int 
  3770 ;;  i               2   18[BANK0 ] int 
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1    wreg      void 
  3773 ;; Registers used:
  3774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3775 ;; Tracked objects:
  3776 ;;		On entry : 3F/0
  3777 ;;		On exit  : 3F/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3780 ;;      Params:         0       6       0       0       0       0       0       0       0
  3781 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3782 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3783 ;;      Totals:         1      10       0       0       0       0       0       0       0
  3784 ;;Total ram usage:       11 bytes
  3785 ;; Hardware stack levels used: 1
  3786 ;; Hardware stack levels required when called: 7
  3787 ;; This function calls:
  3788 ;;		_fputc
  3789 ;;		_fputs
  3790 ;; This function is called by:
  3791 ;;		_dtoa
  3792 ;;		_utoa
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	text10
  3797   0022A4                     __ptext10:
  3798                           	callstack 0
  3799   0022A4                     _pad:
  3800                           	callstack 19
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 158:     if (flags & (1 << 0)) {
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;incstack = 0
  3807   0022A4  A036               	btfss	_flags^0,0,c
  3808   0022A6  D00A               	goto	l6401
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 159:         fput
      +                          s((const char *)buf, fp);
  3812   0022A8  C0D6  F0CD         	movff	pad@buf,fputs@s
  3813   0022AC  C0D7  F0CE         	movff	pad@buf+1,fputs@s+1
  3814   0022B0  C0D4  F0CF         	movff	pad@fp,fputs@fp
  3815   0022B4  C0D5  F0D0         	movff	pad@fp+1,fputs@fp+1
  3816   0022B8  EC3B  F013         	call	_fputs	;wreg free
  3817   0022BC                     l6401:
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 164:     w = (p <
      +                           0) ? 0 : p;
  3821   0022BC  BFD9               	btfsc	(pad@p+1)& (0+255),7,b
  3822   0022BE  D005               	goto	l6405
  3823                           
  3824                           ; BSR set to: 0
  3825   0022C0  C0D8  F0DC         	movff	pad@p,pad@w
  3826   0022C4  C0D9  F0DD         	movff	pad@p+1,pad@w+1
  3827   0022C8  D004               	goto	l1304
  3828   0022CA                     l6405:
  3829                           
  3830                           ; BSR set to: 0
  3831   0022CA  0E00               	movlw	0
  3832   0022CC  6FDD               	movwf	(pad@w+1)& (0+255),b
  3833   0022CE  0E00               	movlw	0
  3834   0022D0  6FDC               	movwf	pad@w& (0+255),b
  3835   0022D2                     l1304:
  3836                           
  3837                           ; BSR set to: 0
  3838                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  3839   0022D2  0E00               	movlw	0
  3840   0022D4  6FDB               	movwf	(pad@i+1)& (0+255),b
  3841   0022D6  0E00               	movlw	0
  3842   0022D8  6FDA               	movwf	pad@i& (0+255),b
  3843                           
  3844                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3845   0022DA  D00C               	goto	l6411
  3846   0022DC                     l6407:
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  3850   0022DC  0E00               	movlw	0
  3851   0022DE  6E20               	movwf	(fputc@c+1)^0,c
  3852   0022E0  0E20               	movlw	32
  3853   0022E2  6E1F               	movwf	fputc@c^0,c
  3854   0022E4  C0D4  F021         	movff	pad@fp,fputc@fp
  3855   0022E8  C0D5  F022         	movff	pad@fp+1,fputc@fp+1
  3856   0022EC  EC7F  F010         	call	_fputc	;wreg free
  3857                           
  3858                           ; BSR set to: 0
  3859                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  3860   0022F0  4BDA               	infsnz	pad@i& (0+255),f,b
  3861   0022F2  2BDB               	incf	(pad@i+1)& (0+255),f,b
  3862   0022F4                     l6411:
  3863                           
  3864                           ; BSR set to: 0
  3865                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3866   0022F4  51DC               	movf	pad@w& (0+255),w,b
  3867   0022F6  5DDA               	subwf	pad@i& (0+255),w,b
  3868   0022F8  51DB               	movf	(pad@i+1)& (0+255),w,b
  3869   0022FA  0A80               	xorlw	128
  3870   0022FC  6E23               	movwf	??_pad^0,c
  3871   0022FE  51DD               	movf	(pad@w+1)& (0+255),w,b
  3872   002300  0A80               	xorlw	128
  3873   002302  5823               	subwfb	??_pad^0,w,c
  3874   002304  A0D8               	btfss	status,0,c
  3875   002306  D7EA               	goto	l6407
  3876                           
  3877                           ; BSR set to: 0
  3878                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 173:     if (!(fl
      +                          ags & (1 << 0))) {
  3879   002308  B036               	btfsc	_flags^0,0,c
  3880   00230A  0012               	return	
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  3884   00230C  C0D6  F0CD         	movff	pad@buf,fputs@s
  3885   002310  C0D7  F0CE         	movff	pad@buf+1,fputs@s+1
  3886   002314  C0D4  F0CF         	movff	pad@fp,fputs@fp
  3887   002318  C0D5  F0D0         	movff	pad@fp+1,fputs@fp+1
  3888   00231C  EC3B  F013         	call	_fputs	;wreg free
  3889                           
  3890                           ; BSR set to: 0
  3891   002320  0012               	return		;funcret
  3892   002322                     __end_of_pad:
  3893                           	callstack 0
  3894                           
  3895 ;; *************** function _fputs *****************
  3896 ;; Defined at:
  3897 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;  s               2    5[BANK0 ] PTR const unsigned char 
  3900 ;;		 -> dbuf(32), 
  3901 ;;  fp              2    7[BANK0 ] PTR struct _IO_FILE
  3902 ;;		 -> sprintf@f(12), 
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;  i               2   10[BANK0 ] int 
  3905 ;;  c               1    9[BANK0 ] unsigned char 
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  2    5[BANK0 ] int 
  3908 ;; Registers used:
  3909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3910 ;; Tracked objects:
  3911 ;;		On entry : 3F/0
  3912 ;;		On exit  : 3F/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3915 ;;      Params:         0       4       0       0       0       0       0       0       0
  3916 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3917 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3918 ;;      Totals:         0       7       0       0       0       0       0       0       0
  3919 ;;Total ram usage:        7 bytes
  3920 ;; Hardware stack levels used: 1
  3921 ;; Hardware stack levels required when called: 6
  3922 ;; This function calls:
  3923 ;;		_fputc
  3924 ;; This function is called by:
  3925 ;;		_pad
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929                           	psect	text11
  3930   002676                     __ptext11:
  3931                           	callstack 0
  3932   002676                     _fputs:
  3933                           	callstack 19
  3934                           
  3935                           ; BSR set to: 0
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;incstack = 0
  3939   002676  0E00               	movlw	0
  3940   002678  6FD3               	movwf	(fputs@i+1)& (0+255),b
  3941   00267A  0E00               	movlw	0
  3942   00267C  6FD2               	movwf	fputs@i& (0+255),b
  3943   00267E  D00B               	goto	l6271
  3944   002680                     l6267:
  3945                           
  3946                           ; BSR set to: 0
  3947   002680  C0D1  F01F         	movff	fputs@c,fputc@c
  3948   002684  6A20               	clrf	(fputc@c+1)^0,c
  3949   002686  C0CF  F021         	movff	fputs@fp,fputc@fp
  3950   00268A  C0D0  F022         	movff	fputs@fp+1,fputc@fp+1
  3951   00268E  EC7F  F010         	call	_fputc	;wreg free
  3952                           
  3953                           ; BSR set to: 0
  3954   002692  4BD2               	infsnz	fputs@i& (0+255),f,b
  3955   002694  2BD3               	incf	(fputs@i+1)& (0+255),f,b
  3956   002696                     l6271:
  3957                           
  3958                           ; BSR set to: 0
  3959   002696  51D2               	movf	fputs@i& (0+255),w,b
  3960   002698  25CD               	addwf	fputs@s& (0+255),w,b
  3961   00269A  6ED9               	movwf	fsr2l,c
  3962   00269C  51D3               	movf	(fputs@i+1)& (0+255),w,b
  3963   00269E  21CE               	addwfc	(fputs@s+1)& (0+255),w,b
  3964   0026A0  6EDA               	movwf	fsr2h,c
  3965   0026A2  50DF               	movf	indf2,w,c
  3966   0026A4  6FD1               	movwf	fputs@c& (0+255),b
  3967   0026A6  51D1               	movf	fputs@c& (0+255),w,b
  3968   0026A8  B4D8               	btfsc	status,2,c
  3969   0026AA  0012               	return	
  3970   0026AC  D7E9               	goto	l6267
  3971   0026AE                     __end_of_fputs:
  3972                           	callstack 0
  3973                           
  3974 ;; *************** function _fputc *****************
  3975 ;; Defined at:
  3976 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  c               2   30[COMRAM] int 
  3979 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  3980 ;;		 -> sprintf@f(12), 
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;		None
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  2   30[COMRAM] int 
  3985 ;; Registers used:
  3986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 3F/0
  3989 ;;		On exit  : 3F/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3992 ;;      Params:         4       0       0       0       0       0       0       0       0
  3993 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3994 ;;      Temps:          0       5       0       0       0       0       0       0       0
  3995 ;;      Totals:         4       5       0       0       0       0       0       0       0
  3996 ;;Total ram usage:        9 bytes
  3997 ;; Hardware stack levels used: 1
  3998 ;; Hardware stack levels required when called: 5
  3999 ;; This function calls:
  4000 ;;		_putch
  4001 ;; This function is called by:
  4002 ;;		_pad
  4003 ;;		_vfpfcnvrt
  4004 ;;		_fputs
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007                           
  4008                           	psect	text12
  4009   0020FE                     __ptext12:
  4010                           	callstack 0
  4011   0020FE                     _fputc:
  4012                           	callstack 19
  4013                           
  4014                           ; BSR set to: 0
  4015                           
  4016                           ; BSR set to: 0
  4017                           ;incstack = 0
  4018   0020FE  5021               	movf	fputc@fp^0,w,c
  4019   002100  1022               	iorwf	(fputc@fp+1)^0,w,c
  4020   002102  B4D8               	btfsc	status,2,c
  4021   002104  D004               	goto	u6760
  4022                           
  4023                           ; BSR set to: 0
  4024   002106  5021               	movf	fputc@fp^0,w,c
  4025   002108  1022               	iorwf	(fputc@fp+1)^0,w,c
  4026   00210A  A4D8               	btfss	status,2,c
  4027   00210C  D004               	goto	l6257
  4028   00210E                     u6760:
  4029                           
  4030                           ; BSR set to: 0
  4031   00210E  501F               	movf	fputc@c^0,w,c
  4032   002110  EC11  F014         	call	_putch
  4033   002114  0012               	return	
  4034   002116                     l6257:
  4035                           
  4036                           ; BSR set to: 0
  4037   002116  EE20 F00A          	lfsr	2,10
  4038   00211A  5021               	movf	fputc@fp^0,w,c
  4039   00211C  26D9               	addwf	fsr2l,f,c
  4040   00211E  5022               	movf	(fputc@fp+1)^0,w,c
  4041   002120  22DA               	addwfc	fsr2h,f,c
  4042   002122  50DE               	movf	postinc2,w,c
  4043   002124  10DE               	iorwf	postinc2,w,c
  4044   002126  B4D8               	btfsc	status,2,c
  4045   002128  D016               	goto	u6780
  4046                           
  4047                           ; BSR set to: 0
  4048   00212A  EE20 F00A          	lfsr	2,10
  4049   00212E  5021               	movf	fputc@fp^0,w,c
  4050   002130  26D9               	addwf	fsr2l,f,c
  4051   002132  5022               	movf	(fputc@fp+1)^0,w,c
  4052   002134  22DA               	addwfc	fsr2h,f,c
  4053   002136  EE10 F003          	lfsr	1,3
  4054   00213A  5021               	movf	fputc@fp^0,w,c
  4055   00213C  26E1               	addwf	fsr1l,f,c
  4056   00213E  5022               	movf	(fputc@fp+1)^0,w,c
  4057   002140  22E2               	addwfc	fsr1h,f,c
  4058   002142  50DE               	movf	postinc2,w,c
  4059   002144  5CE6               	subwf	postinc1,w,c
  4060   002146  50E6               	movf	postinc1,w,c
  4061   002148  0A80               	xorlw	128
  4062   00214A  6FCC               	movwf	(??_fputc+4)& (0+255),b
  4063   00214C  50DE               	movf	postinc2,w,c
  4064   00214E  0A80               	xorlw	128
  4065   002150  59CC               	subwfb	(??_fputc+4)& (0+255),w,b
  4066   002152  B0D8               	btfsc	status,0,c
  4067   002154  0012               	return	
  4068   002156                     u6780:
  4069                           
  4070                           ; BSR set to: 0
  4071   002156  EE20 F003          	lfsr	2,3
  4072   00215A  5021               	movf	fputc@fp^0,w,c
  4073   00215C  26D9               	addwf	fsr2l,f,c
  4074   00215E  5022               	movf	(fputc@fp+1)^0,w,c
  4075   002160  22DA               	addwfc	fsr2h,f,c
  4076   002162  CFDE F0C8          	movff	postinc2,??_fputc
  4077   002166  CFDD F0C9          	movff	postdec2,??_fputc+1
  4078   00216A  C021  FFD9         	movff	fputc@fp,fsr2l
  4079   00216E  C022  FFDA         	movff	fputc@fp+1,fsr2h
  4080   002172  CFDE F0CA          	movff	postinc2,??_fputc+2
  4081   002176  CFDD F0CB          	movff	postdec2,??_fputc+3
  4082   00217A  51C8               	movf	??_fputc& (0+255),w,b
  4083   00217C  25CA               	addwf	(??_fputc+2)& (0+255),w,b
  4084   00217E  6ED9               	movwf	fsr2l,c
  4085   002180  51C9               	movf	(??_fputc+1)& (0+255),w,b
  4086   002182  21CB               	addwfc	(??_fputc+3)& (0+255),w,b
  4087   002184  6EDA               	movwf	fsr2h,c
  4088   002186  C01F  FFDF         	movff	fputc@c,indf2
  4089   00218A  EE20 F003          	lfsr	2,3
  4090   00218E  5021               	movf	fputc@fp^0,w,c
  4091   002190  26D9               	addwf	fsr2l,f,c
  4092   002192  5022               	movf	(fputc@fp+1)^0,w,c
  4093   002194  22DA               	addwfc	fsr2h,f,c
  4094   002196  2ADE               	incf	postinc2,f,c
  4095   002198  0E00               	movlw	0
  4096   00219A  22DD               	addwfc	postdec2,f,c
  4097                           
  4098                           ; BSR set to: 0
  4099   00219C  0012               	return		;funcret
  4100   00219E                     __end_of_fputc:
  4101                           	callstack 0
  4102                           
  4103 ;; *************** function _putch *****************
  4104 ;; Defined at:
  4105 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;  c               1    wreg     unsigned char 
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;  c               1    0[COMRAM] unsigned char 
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  1    wreg      void 
  4112 ;; Registers used:
  4113 ;;		wreg
  4114 ;; Tracked objects:
  4115 ;;		On entry : 3F/0
  4116 ;;		On exit  : 3F/0
  4117 ;;		Unchanged: 3F/0
  4118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4119 ;;      Params:         0       0       0       0       0       0       0       0       0
  4120 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4122 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4123 ;;Total ram usage:        0 bytes
  4124 ;; Hardware stack levels used: 1
  4125 ;; Hardware stack levels required when called: 4
  4126 ;; This function calls:
  4127 ;;		Nothing
  4128 ;; This function is called by:
  4129 ;;		_fputc
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133                           	psect	text13
  4134   002822                     __ptext13:
  4135                           	callstack 0
  4136   002822                     _putch:
  4137                           	callstack 19
  4138                           
  4139                           ; BSR set to: 0
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;incstack = 0
  4143   002822  0012               	return		;funcret
  4144   002824                     __end_of_putch:
  4145                           	callstack 0
  4146                           
  4147 ;; *************** function _abs *****************
  4148 ;; Defined at:
  4149 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;  a               2    2[BANK0 ] int 
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;		None
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  2    2[BANK0 ] int 
  4156 ;; Registers used:
  4157 ;;		wreg, status,2, status,0
  4158 ;; Tracked objects:
  4159 ;;		On entry : 3F/0
  4160 ;;		On exit  : 3F/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4163 ;;      Params:         0       2       0       0       0       0       0       0       0
  4164 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4165 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4166 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4167 ;;Total ram usage:        4 bytes
  4168 ;; Hardware stack levels used: 1
  4169 ;; Hardware stack levels required when called: 4
  4170 ;; This function calls:
  4171 ;;		Nothing
  4172 ;; This function is called by:
  4173 ;;		_dtoa
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176                           
  4177                           	psect	text14
  4178   0026AE                     __ptext14:
  4179                           	callstack 0
  4180   0026AE                     _abs:
  4181                           	callstack 22
  4182                           
  4183                           ; BSR set to: 0
  4184                           
  4185                           ; BSR set to: 0
  4186                           ;incstack = 0
  4187   0026AE  BFCB               	btfsc	(abs@a+1)& (0+255),7,b
  4188   0026B0  D005               	goto	u7020
  4189   0026B2  51CB               	movf	(abs@a+1)& (0+255),w,b
  4190   0026B4  E110               	bnz	l1385
  4191   0026B6  05CA               	decf	abs@a& (0+255),w,b
  4192   0026B8  B0D8               	btfsc	status,0,c
  4193   0026BA  D00D               	goto	l1385
  4194   0026BC                     u7020:
  4195                           
  4196                           ; BSR set to: 0
  4197   0026BC  C0CA  F0CC         	movff	abs@a,??_abs
  4198   0026C0  C0CB  F0CD         	movff	abs@a+1,??_abs+1
  4199   0026C4  1FCC               	comf	??_abs& (0+255),f,b
  4200   0026C6  1FCD               	comf	(??_abs+1)& (0+255),f,b
  4201   0026C8  4BCC               	infsnz	??_abs& (0+255),f,b
  4202   0026CA  2BCD               	incf	(??_abs+1)& (0+255),f,b
  4203   0026CC  C0CC  F0CA         	movff	??_abs,?_abs
  4204   0026D0  C0CD  F0CB         	movff	??_abs+1,?_abs+1
  4205   0026D4  0012               	return	
  4206   0026D6                     l1385:
  4207                           
  4208                           ; BSR set to: 0
  4209   0026D6  C0CA  F0CA         	movff	abs@a,?_abs
  4210   0026DA  C0CB  F0CB         	movff	abs@a+1,?_abs+1
  4211                           
  4212                           ; BSR set to: 0
  4213   0026DE  0012               	return		;funcret
  4214   0026E0                     __end_of_abs:
  4215                           	callstack 0
  4216                           
  4217 ;; *************** function ___awmod *****************
  4218 ;; Defined at:
  4219 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  dividend        2   30[COMRAM] int 
  4222 ;;  divisor         2   32[COMRAM] int 
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;  sign            1    1[BANK0 ] unsigned char 
  4225 ;;  counter         1    0[BANK0 ] unsigned char 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  2   30[COMRAM] int 
  4228 ;; Registers used:
  4229 ;;		wreg, status,2, status,0
  4230 ;; Tracked objects:
  4231 ;;		On entry : 3F/0
  4232 ;;		On exit  : 3F/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4235 ;;      Params:         4       0       0       0       0       0       0       0       0
  4236 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4237 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4238 ;;      Totals:         4       2       0       0       0       0       0       0       0
  4239 ;;Total ram usage:        6 bytes
  4240 ;; Hardware stack levels used: 1
  4241 ;; Hardware stack levels required when called: 4
  4242 ;; This function calls:
  4243 ;;		Nothing
  4244 ;; This function is called by:
  4245 ;;		_dtoa
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249                           	psect	text15
  4250   002322                     __ptext15:
  4251                           	callstack 0
  4252   002322                     ___awmod:
  4253                           	callstack 22
  4254                           
  4255                           ; BSR set to: 0
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;incstack = 0
  4259   002322  0E00               	movlw	0
  4260   002324  6FC9               	movwf	___awmod@sign& (0+255),b
  4261                           
  4262                           ; BSR set to: 0
  4263   002326  AE20               	btfss	(___awmod@dividend+1)^0,7,c
  4264   002328  D006               	goto	l6331
  4265                           
  4266                           ; BSR set to: 0
  4267   00232A  6C1F               	negf	___awmod@dividend^0,c
  4268   00232C  1E20               	comf	(___awmod@dividend+1)^0,f,c
  4269   00232E  B0D8               	btfsc	status,0,c
  4270   002330  2A20               	incf	(___awmod@dividend+1)^0,f,c
  4271                           
  4272                           ; BSR set to: 0
  4273   002332  0E01               	movlw	1
  4274   002334  6FC9               	movwf	___awmod@sign& (0+255),b
  4275   002336                     l6331:
  4276                           
  4277                           ; BSR set to: 0
  4278   002336  AE22               	btfss	(___awmod@divisor+1)^0,7,c
  4279   002338  D004               	goto	l6335
  4280                           
  4281                           ; BSR set to: 0
  4282   00233A  6C21               	negf	___awmod@divisor^0,c
  4283   00233C  1E22               	comf	(___awmod@divisor+1)^0,f,c
  4284   00233E  B0D8               	btfsc	status,0,c
  4285   002340  2A22               	incf	(___awmod@divisor+1)^0,f,c
  4286   002342                     l6335:
  4287                           
  4288                           ; BSR set to: 0
  4289   002342  5021               	movf	___awmod@divisor^0,w,c
  4290   002344  1022               	iorwf	(___awmod@divisor+1)^0,w,c
  4291   002346  B4D8               	btfsc	status,2,c
  4292   002348  D018               	goto	l6351
  4293                           
  4294                           ; BSR set to: 0
  4295   00234A  0E01               	movlw	1
  4296   00234C  6FC8               	movwf	___awmod@counter& (0+255),b
  4297   00234E  D004               	goto	l6341
  4298   002350                     l6339:
  4299                           
  4300                           ; BSR set to: 0
  4301   002350  90D8               	bcf	status,0,c
  4302   002352  3621               	rlcf	___awmod@divisor^0,f,c
  4303   002354  3622               	rlcf	(___awmod@divisor+1)^0,f,c
  4304   002356  2BC8               	incf	___awmod@counter& (0+255),f,b
  4305   002358                     l6341:
  4306                           
  4307                           ; BSR set to: 0
  4308   002358  AE22               	btfss	(___awmod@divisor+1)^0,7,c
  4309   00235A  D7FA               	goto	l6339
  4310   00235C                     u6890:
  4311                           
  4312                           ; BSR set to: 0
  4313   00235C  5021               	movf	___awmod@divisor^0,w,c
  4314   00235E  5C1F               	subwf	___awmod@dividend^0,w,c
  4315   002360  5022               	movf	(___awmod@divisor+1)^0,w,c
  4316   002362  5820               	subwfb	(___awmod@dividend+1)^0,w,c
  4317   002364  A0D8               	btfss	status,0,c
  4318   002366  D004               	goto	l6347
  4319                           
  4320                           ; BSR set to: 0
  4321   002368  5021               	movf	___awmod@divisor^0,w,c
  4322   00236A  5E1F               	subwf	___awmod@dividend^0,f,c
  4323   00236C  5022               	movf	(___awmod@divisor+1)^0,w,c
  4324   00236E  5A20               	subwfb	(___awmod@dividend+1)^0,f,c
  4325   002370                     l6347:
  4326                           
  4327                           ; BSR set to: 0
  4328   002370  90D8               	bcf	status,0,c
  4329   002372  3222               	rrcf	(___awmod@divisor+1)^0,f,c
  4330   002374  3221               	rrcf	___awmod@divisor^0,f,c
  4331                           
  4332                           ; BSR set to: 0
  4333   002376  2FC8               	decfsz	___awmod@counter& (0+255),f,b
  4334   002378  D7F1               	goto	u6890
  4335   00237A                     l6351:
  4336                           
  4337                           ; BSR set to: 0
  4338   00237A  51C9               	movf	___awmod@sign& (0+255),w,b
  4339   00237C  B4D8               	btfsc	status,2,c
  4340   00237E  D004               	goto	l6355
  4341                           
  4342                           ; BSR set to: 0
  4343   002380  6C1F               	negf	___awmod@dividend^0,c
  4344   002382  1E20               	comf	(___awmod@dividend+1)^0,f,c
  4345   002384  B0D8               	btfsc	status,0,c
  4346   002386  2A20               	incf	(___awmod@dividend+1)^0,f,c
  4347   002388                     l6355:
  4348                           
  4349                           ; BSR set to: 0
  4350   002388  C01F  F01F         	movff	___awmod@dividend,?___awmod
  4351   00238C  C020  F020         	movff	___awmod@dividend+1,?___awmod+1
  4352                           
  4353                           ; BSR set to: 0
  4354   002390  0012               	return		;funcret
  4355   002392                     __end_of___awmod:
  4356                           	callstack 0
  4357                           
  4358 ;; *************** function ___awdiv *****************
  4359 ;; Defined at:
  4360 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  4361 ;; Parameters:    Size  Location     Type
  4362 ;;  dividend        2   30[COMRAM] int 
  4363 ;;  divisor         2   32[COMRAM] int 
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;  quotient        2    2[BANK0 ] int 
  4366 ;;  sign            1    1[BANK0 ] unsigned char 
  4367 ;;  counter         1    0[BANK0 ] unsigned char 
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  2   30[COMRAM] int 
  4370 ;; Registers used:
  4371 ;;		wreg, status,2, status,0
  4372 ;; Tracked objects:
  4373 ;;		On entry : 3F/0
  4374 ;;		On exit  : 3F/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4377 ;;      Params:         4       0       0       0       0       0       0       0       0
  4378 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4379 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4380 ;;      Totals:         4       4       0       0       0       0       0       0       0
  4381 ;;Total ram usage:        8 bytes
  4382 ;; Hardware stack levels used: 1
  4383 ;; Hardware stack levels required when called: 4
  4384 ;; This function calls:
  4385 ;;		Nothing
  4386 ;; This function is called by:
  4387 ;;		_dtoa
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           	psect	text16
  4392   00219E                     __ptext16:
  4393                           	callstack 0
  4394   00219E                     ___awdiv:
  4395                           	callstack 22
  4396                           
  4397                           ; BSR set to: 0
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;incstack = 0
  4401   00219E  0E00               	movlw	0
  4402   0021A0  6FC9               	movwf	___awdiv@sign& (0+255),b
  4403                           
  4404                           ; BSR set to: 0
  4405   0021A2  AE22               	btfss	(___awdiv@divisor+1)^0,7,c
  4406   0021A4  D006               	goto	l6287
  4407                           
  4408                           ; BSR set to: 0
  4409   0021A6  6C21               	negf	___awdiv@divisor^0,c
  4410   0021A8  1E22               	comf	(___awdiv@divisor+1)^0,f,c
  4411   0021AA  B0D8               	btfsc	status,0,c
  4412   0021AC  2A22               	incf	(___awdiv@divisor+1)^0,f,c
  4413                           
  4414                           ; BSR set to: 0
  4415   0021AE  0E01               	movlw	1
  4416   0021B0  6FC9               	movwf	___awdiv@sign& (0+255),b
  4417   0021B2                     l6287:
  4418                           
  4419                           ; BSR set to: 0
  4420   0021B2  AE20               	btfss	(___awdiv@dividend+1)^0,7,c
  4421   0021B4  D006               	goto	l6293
  4422                           
  4423                           ; BSR set to: 0
  4424   0021B6  6C1F               	negf	___awdiv@dividend^0,c
  4425   0021B8  1E20               	comf	(___awdiv@dividend+1)^0,f,c
  4426   0021BA  B0D8               	btfsc	status,0,c
  4427   0021BC  2A20               	incf	(___awdiv@dividend+1)^0,f,c
  4428                           
  4429                           ; BSR set to: 0
  4430   0021BE  0E01               	movlw	1
  4431   0021C0  1BC9               	xorwf	___awdiv@sign& (0+255),f,b
  4432   0021C2                     l6293:
  4433                           
  4434                           ; BSR set to: 0
  4435   0021C2  0E00               	movlw	0
  4436   0021C4  6FCB               	movwf	(___awdiv@quotient+1)& (0+255),b
  4437   0021C6  0E00               	movlw	0
  4438   0021C8  6FCA               	movwf	___awdiv@quotient& (0+255),b
  4439                           
  4440                           ; BSR set to: 0
  4441   0021CA  5021               	movf	___awdiv@divisor^0,w,c
  4442   0021CC  1022               	iorwf	(___awdiv@divisor+1)^0,w,c
  4443   0021CE  B4D8               	btfsc	status,2,c
  4444   0021D0  D01C               	goto	l6315
  4445                           
  4446                           ; BSR set to: 0
  4447   0021D2  0E01               	movlw	1
  4448   0021D4  6FC8               	movwf	___awdiv@counter& (0+255),b
  4449   0021D6  D004               	goto	l6301
  4450   0021D8                     l6299:
  4451                           
  4452                           ; BSR set to: 0
  4453   0021D8  90D8               	bcf	status,0,c
  4454   0021DA  3621               	rlcf	___awdiv@divisor^0,f,c
  4455   0021DC  3622               	rlcf	(___awdiv@divisor+1)^0,f,c
  4456   0021DE  2BC8               	incf	___awdiv@counter& (0+255),f,b
  4457   0021E0                     l6301:
  4458                           
  4459                           ; BSR set to: 0
  4460   0021E0  AE22               	btfss	(___awdiv@divisor+1)^0,7,c
  4461   0021E2  D7FA               	goto	l6299
  4462   0021E4                     u6830:
  4463                           
  4464                           ; BSR set to: 0
  4465   0021E4  90D8               	bcf	status,0,c
  4466   0021E6  37CA               	rlcf	___awdiv@quotient& (0+255),f,b
  4467   0021E8  37CB               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4468                           
  4469                           ; BSR set to: 0
  4470   0021EA  5021               	movf	___awdiv@divisor^0,w,c
  4471   0021EC  5C1F               	subwf	___awdiv@dividend^0,w,c
  4472   0021EE  5022               	movf	(___awdiv@divisor+1)^0,w,c
  4473   0021F0  5820               	subwfb	(___awdiv@dividend+1)^0,w,c
  4474   0021F2  A0D8               	btfss	status,0,c
  4475   0021F4  D005               	goto	l6311
  4476                           
  4477                           ; BSR set to: 0
  4478   0021F6  5021               	movf	___awdiv@divisor^0,w,c
  4479   0021F8  5E1F               	subwf	___awdiv@dividend^0,f,c
  4480   0021FA  5022               	movf	(___awdiv@divisor+1)^0,w,c
  4481   0021FC  5A20               	subwfb	(___awdiv@dividend+1)^0,f,c
  4482                           
  4483                           ; BSR set to: 0
  4484   0021FE  81CA               	bsf	___awdiv@quotient& (0+255),0,b
  4485   002200                     l6311:
  4486                           
  4487                           ; BSR set to: 0
  4488   002200  90D8               	bcf	status,0,c
  4489   002202  3222               	rrcf	(___awdiv@divisor+1)^0,f,c
  4490   002204  3221               	rrcf	___awdiv@divisor^0,f,c
  4491                           
  4492                           ; BSR set to: 0
  4493   002206  2FC8               	decfsz	___awdiv@counter& (0+255),f,b
  4494   002208  D7ED               	goto	u6830
  4495   00220A                     l6315:
  4496                           
  4497                           ; BSR set to: 0
  4498   00220A  51C9               	movf	___awdiv@sign& (0+255),w,b
  4499   00220C  B4D8               	btfsc	status,2,c
  4500   00220E  D004               	goto	l6319
  4501                           
  4502                           ; BSR set to: 0
  4503   002210  6DCA               	negf	___awdiv@quotient& (0+255),b
  4504   002212  1FCB               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4505   002214  B0D8               	btfsc	status,0,c
  4506   002216  2BCB               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4507   002218                     l6319:
  4508                           
  4509                           ; BSR set to: 0
  4510   002218  C0CA  F01F         	movff	___awdiv@quotient,?___awdiv
  4511   00221C  C0CB  F020         	movff	___awdiv@quotient+1,?___awdiv+1
  4512                           
  4513                           ; BSR set to: 0
  4514   002220  0012               	return		;funcret
  4515   002222                     __end_of___awdiv:
  4516                           	callstack 0
  4517                           
  4518 ;; *************** function ___xxtofl *****************
  4519 ;; Defined at:
  4520 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;  sign            1    wreg     unsigned char 
  4523 ;;  val             4   30[COMRAM] long 
  4524 ;; Auto vars:     Size  Location     Type
  4525 ;;  sign            1    4[BANK0 ] unsigned char 
  4526 ;;  arg             4    6[BANK0 ] unsigned long 
  4527 ;;  exp             1    5[BANK0 ] unsigned char 
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  4   30[COMRAM] unsigned char 
  4530 ;; Registers used:
  4531 ;;		wreg, status,2, status,0
  4532 ;; Tracked objects:
  4533 ;;		On entry : 3F/0
  4534 ;;		On exit  : 3F/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4537 ;;      Params:         4       0       0       0       0       0       0       0       0
  4538 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4539 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4540 ;;      Totals:         4      10       0       0       0       0       0       0       0
  4541 ;;Total ram usage:       14 bytes
  4542 ;; Hardware stack levels used: 1
  4543 ;; Hardware stack levels required when called: 4
  4544 ;; This function calls:
  4545 ;;		Nothing
  4546 ;; This function is called by:
  4547 ;;		_main
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551                           	psect	text17
  4552   001C26                     __ptext17:
  4553                           	callstack 0
  4554   001C26                     ___xxtofl:
  4555                           	callstack 26
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;incstack = 0
  4559                           ;___xxtofl@sign stored from wreg
  4560   001C26  6FCC               	movwf	___xxtofl@sign& (0+255),b
  4561   001C28  0100               	movlb	0	; () banked
  4562   001C2A  51CC               	movf	___xxtofl@sign& (0+255),w,b
  4563   001C2C  A4D8               	btfss	status,2,c
  4564                           
  4565                           ; BSR set to: 0
  4566   001C2E  AE22               	btfss	(___xxtofl@val+3)^0,7,c
  4567   001C30  D01A               	goto	l1258
  4568                           
  4569                           ; BSR set to: 0
  4570   001C32  C01F  F0C8         	movff	___xxtofl@val,??___xxtofl
  4571   001C36  C020  F0C9         	movff	___xxtofl@val+1,??___xxtofl+1
  4572   001C3A  C021  F0CA         	movff	___xxtofl@val+2,??___xxtofl+2
  4573   001C3E  C022  F0CB         	movff	___xxtofl@val+3,??___xxtofl+3
  4574   001C42  1FC8               	comf	??___xxtofl& (0+255),f,b
  4575   001C44  1FC9               	comf	(??___xxtofl+1)& (0+255),f,b
  4576   001C46  1FCA               	comf	(??___xxtofl+2)& (0+255),f,b
  4577   001C48  1FCB               	comf	(??___xxtofl+3)& (0+255),f,b
  4578   001C4A  2BC8               	incf	??___xxtofl& (0+255),f,b
  4579   001C4C  0E00               	movlw	0
  4580   001C4E  23C9               	addwfc	(??___xxtofl+1)& (0+255),f,b
  4581   001C50  23CA               	addwfc	(??___xxtofl+2)& (0+255),f,b
  4582   001C52  23CB               	addwfc	(??___xxtofl+3)& (0+255),f,b
  4583   001C54  C0C8  F0CE         	movff	??___xxtofl,___xxtofl@arg
  4584   001C58  C0C9  F0CF         	movff	??___xxtofl+1,___xxtofl@arg+1
  4585   001C5C  C0CA  F0D0         	movff	??___xxtofl+2,___xxtofl@arg+2
  4586   001C60  C0CB  F0D1         	movff	??___xxtofl+3,___xxtofl@arg+3
  4587   001C64  D008               	goto	l5183
  4588   001C66                     l1258:
  4589                           
  4590                           ; BSR set to: 0
  4591   001C66  C01F  F0CE         	movff	___xxtofl@val,___xxtofl@arg
  4592   001C6A  C020  F0CF         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4593   001C6E  C021  F0D0         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4594   001C72  C022  F0D1         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4595   001C76                     l5183:
  4596                           
  4597                           ; BSR set to: 0
  4598   001C76  501F               	movf	___xxtofl@val^0,w,c
  4599   001C78  1020               	iorwf	(___xxtofl@val+1)^0,w,c
  4600   001C7A  1021               	iorwf	(___xxtofl@val+2)^0,w,c
  4601   001C7C  1022               	iorwf	(___xxtofl@val+3)^0,w,c
  4602   001C7E  A4D8               	btfss	status,2,c
  4603   001C80  D009               	goto	l5189
  4604                           
  4605                           ; BSR set to: 0
  4606   001C82  0E00               	movlw	0
  4607   001C84  6E1F               	movwf	?___xxtofl^0,c
  4608   001C86  0E00               	movlw	0
  4609   001C88  6E20               	movwf	(?___xxtofl+1)^0,c
  4610   001C8A  0E00               	movlw	0
  4611   001C8C  6E21               	movwf	(?___xxtofl+2)^0,c
  4612   001C8E  0E00               	movlw	0
  4613   001C90  6E22               	movwf	(?___xxtofl+3)^0,c
  4614   001C92  0012               	return	
  4615   001C94                     l5189:
  4616                           
  4617                           ; BSR set to: 0
  4618   001C94  0E96               	movlw	150
  4619   001C96  6FCD               	movwf	___xxtofl@exp& (0+255),b
  4620   001C98  D006               	goto	l5193
  4621   001C9A                     l5191:
  4622                           
  4623                           ; BSR set to: 0
  4624   001C9A  2BCD               	incf	___xxtofl@exp& (0+255),f,b
  4625   001C9C  90D8               	bcf	status,0,c
  4626   001C9E  33D1               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  4627   001CA0  33D0               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  4628   001CA2  33CF               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  4629   001CA4  33CE               	rrcf	___xxtofl@arg& (0+255),f,b
  4630   001CA6                     l5193:
  4631                           
  4632                           ; BSR set to: 0
  4633   001CA6  0E00               	movlw	0
  4634   001CA8  15CE               	andwf	___xxtofl@arg& (0+255),w,b
  4635   001CAA  6FC8               	movwf	??___xxtofl& (0+255),b
  4636   001CAC  0E00               	movlw	0
  4637   001CAE  15CF               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  4638   001CB0  6FC9               	movwf	(??___xxtofl+1)& (0+255),b
  4639   001CB2  0E00               	movlw	0
  4640   001CB4  15D0               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  4641   001CB6  6FCA               	movwf	(??___xxtofl+2)& (0+255),b
  4642   001CB8  0EFE               	movlw	254
  4643   001CBA  15D1               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  4644   001CBC  6FCB               	movwf	(??___xxtofl+3)& (0+255),b
  4645   001CBE  51C8               	movf	??___xxtofl& (0+255),w,b
  4646   001CC0  11C9               	iorwf	(??___xxtofl+1)& (0+255),w,b
  4647   001CC2  11CA               	iorwf	(??___xxtofl+2)& (0+255),w,b
  4648   001CC4  11CB               	iorwf	(??___xxtofl+3)& (0+255),w,b
  4649   001CC6  B4D8               	btfsc	status,2,c
  4650   001CC8  D00D               	goto	l1265
  4651   001CCA  D7E7               	goto	l5191
  4652   001CCC                     l5195:
  4653                           
  4654                           ; BSR set to: 0
  4655   001CCC  2BCD               	incf	___xxtofl@exp& (0+255),f,b
  4656                           
  4657                           ; BSR set to: 0
  4658   001CCE  0E01               	movlw	1
  4659   001CD0  27CE               	addwf	___xxtofl@arg& (0+255),f,b
  4660   001CD2  0E00               	movlw	0
  4661   001CD4  23CF               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  4662   001CD6  23D0               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  4663   001CD8  23D1               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  4664                           
  4665                           ; BSR set to: 0
  4666   001CDA  90D8               	bcf	status,0,c
  4667   001CDC  33D1               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  4668   001CDE  33D0               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  4669   001CE0  33CF               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  4670   001CE2  33CE               	rrcf	___xxtofl@arg& (0+255),f,b
  4671   001CE4                     l1265:
  4672                           
  4673                           ; BSR set to: 0
  4674   001CE4  0E00               	movlw	0
  4675   001CE6  15CE               	andwf	___xxtofl@arg& (0+255),w,b
  4676   001CE8  6FC8               	movwf	??___xxtofl& (0+255),b
  4677   001CEA  0E00               	movlw	0
  4678   001CEC  15CF               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  4679   001CEE  6FC9               	movwf	(??___xxtofl+1)& (0+255),b
  4680   001CF0  0E00               	movlw	0
  4681   001CF2  15D0               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  4682   001CF4  6FCA               	movwf	(??___xxtofl+2)& (0+255),b
  4683   001CF6  0EFF               	movlw	255
  4684   001CF8  15D1               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  4685   001CFA  6FCB               	movwf	(??___xxtofl+3)& (0+255),b
  4686   001CFC  51C8               	movf	??___xxtofl& (0+255),w,b
  4687   001CFE  11C9               	iorwf	(??___xxtofl+1)& (0+255),w,b
  4688   001D00  11CA               	iorwf	(??___xxtofl+2)& (0+255),w,b
  4689   001D02  11CB               	iorwf	(??___xxtofl+3)& (0+255),w,b
  4690   001D04  B4D8               	btfsc	status,2,c
  4691   001D06  D007               	goto	l5203
  4692   001D08  D7E1               	goto	l5195
  4693   001D0A                     l5201:
  4694                           
  4695                           ; BSR set to: 0
  4696   001D0A  07CD               	decf	___xxtofl@exp& (0+255),f,b
  4697   001D0C  90D8               	bcf	status,0,c
  4698   001D0E  37CE               	rlcf	___xxtofl@arg& (0+255),f,b
  4699   001D10  37CF               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  4700   001D12  37D0               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  4701   001D14  37D1               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  4702   001D16                     l5203:
  4703                           
  4704                           ; BSR set to: 0
  4705   001D16  BFD0               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  4706   001D18  D003               	goto	u5400
  4707                           
  4708                           ; BSR set to: 0
  4709   001D1A  0E02               	movlw	2
  4710   001D1C  61CD               	cpfslt	___xxtofl@exp& (0+255),b
  4711   001D1E  D7F5               	goto	l5201
  4712   001D20                     u5400:
  4713                           
  4714                           ; BSR set to: 0
  4715   001D20  A1CD               	btfss	___xxtofl@exp& (0+255),0,b
  4716                           
  4717                           ; BSR set to: 0
  4718   001D22  9FD0               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  4719                           
  4720                           ; BSR set to: 0
  4721   001D24  90D8               	bcf	status,0,c
  4722   001D26  33CD               	rrcf	___xxtofl@exp& (0+255),f,b
  4723                           
  4724                           ; BSR set to: 0
  4725   001D28  C0CD  F0C8         	movff	___xxtofl@exp,??___xxtofl
  4726   001D2C  6BC9               	clrf	(??___xxtofl+1)& (0+255),b
  4727   001D2E  6BCA               	clrf	(??___xxtofl+2)& (0+255),b
  4728   001D30  6BCB               	clrf	(??___xxtofl+3)& (0+255),b
  4729   001D32  C0C8  F0CB         	movff	??___xxtofl,??___xxtofl+3
  4730   001D36  6BCA               	clrf	(??___xxtofl+2)& (0+255),b
  4731   001D38  6BC9               	clrf	(??___xxtofl+1)& (0+255),b
  4732   001D3A  6BC8               	clrf	??___xxtofl& (0+255),b
  4733   001D3C  51C8               	movf	??___xxtofl& (0+255),w,b
  4734   001D3E  13CE               	iorwf	___xxtofl@arg& (0+255),f,b
  4735   001D40  51C9               	movf	(??___xxtofl+1)& (0+255),w,b
  4736   001D42  13CF               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  4737   001D44  51CA               	movf	(??___xxtofl+2)& (0+255),w,b
  4738   001D46  13D0               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  4739   001D48  51CB               	movf	(??___xxtofl+3)& (0+255),w,b
  4740   001D4A  13D1               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  4741                           
  4742                           ; BSR set to: 0
  4743   001D4C  51CC               	movf	___xxtofl@sign& (0+255),w,b
  4744   001D4E  A4D8               	btfss	status,2,c
  4745                           
  4746                           ; BSR set to: 0
  4747   001D50  AE22               	btfss	(___xxtofl@val+3)^0,7,c
  4748   001D52  D001               	goto	l5219
  4749                           
  4750                           ; BSR set to: 0
  4751   001D54  8FD1               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  4752   001D56                     l5219:
  4753                           
  4754                           ; BSR set to: 0
  4755   001D56  C0CE  F01F         	movff	___xxtofl@arg,?___xxtofl
  4756   001D5A  C0CF  F020         	movff	___xxtofl@arg+1,?___xxtofl+1
  4757   001D5E  C0D0  F021         	movff	___xxtofl@arg+2,?___xxtofl+2
  4758   001D62  C0D1  F022         	movff	___xxtofl@arg+3,?___xxtofl+3
  4759                           
  4760                           ; BSR set to: 0
  4761   001D66  0012               	return		;funcret
  4762   001D68                     __end_of___xxtofl:
  4763                           	callstack 0
  4764                           
  4765 ;; *************** function ___lldiv *****************
  4766 ;; Defined at:
  4767 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__lldiv.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;  dividend        4    0[BANK0 ] unsigned long 
  4770 ;;  divisor         4    4[BANK0 ] unsigned long 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;  quotient        4   30[COMRAM] unsigned long 
  4773 ;;  counter         1   34[COMRAM] unsigned char 
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  4    0[BANK0 ] unsigned long 
  4776 ;; Registers used:
  4777 ;;		wreg, status,2, status,0
  4778 ;; Tracked objects:
  4779 ;;		On entry : 3F/0
  4780 ;;		On exit  : 3F/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4783 ;;      Params:         0       8       0       0       0       0       0       0       0
  4784 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4785 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4786 ;;      Totals:         5       8       0       0       0       0       0       0       0
  4787 ;;Total ram usage:       13 bytes
  4788 ;; Hardware stack levels used: 1
  4789 ;; Hardware stack levels required when called: 4
  4790 ;; This function calls:
  4791 ;;		Nothing
  4792 ;; This function is called by:
  4793 ;;		_main
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           	psect	text18
  4798   002222                     __ptext18:
  4799                           	callstack 0
  4800   002222                     ___lldiv:
  4801                           	callstack 26
  4802                           
  4803                           ; BSR set to: 0
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;incstack = 0
  4807   002222  0E00               	movlw	0
  4808   002224  6E1F               	movwf	___lldiv@quotient^0,c
  4809   002226  0E00               	movlw	0
  4810   002228  6E20               	movwf	(___lldiv@quotient+1)^0,c
  4811   00222A  0E00               	movlw	0
  4812   00222C  6E21               	movwf	(___lldiv@quotient+2)^0,c
  4813   00222E  0E00               	movlw	0
  4814   002230  6E22               	movwf	(___lldiv@quotient+3)^0,c
  4815                           
  4816                           ; BSR set to: 0
  4817   002232  51CC               	movf	___lldiv@divisor& (0+255),w,b
  4818   002234  11CD               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  4819   002236  11CE               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  4820   002238  11CF               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  4821   00223A  B4D8               	btfsc	status,2,c
  4822   00223C  D02A               	goto	l630
  4823                           
  4824                           ; BSR set to: 0
  4825   00223E  0E01               	movlw	1
  4826   002240  6E23               	movwf	___lldiv@counter^0,c
  4827   002242  D006               	goto	l4851
  4828   002244                     l4849:
  4829                           
  4830                           ; BSR set to: 0
  4831   002244  90D8               	bcf	status,0,c
  4832   002246  37CC               	rlcf	___lldiv@divisor& (0+255),f,b
  4833   002248  37CD               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  4834   00224A  37CE               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  4835   00224C  37CF               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  4836   00224E  2A23               	incf	___lldiv@counter^0,f,c
  4837   002250                     l4851:
  4838                           
  4839                           ; BSR set to: 0
  4840   002250  AFCF               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  4841   002252  D7F8               	goto	l4849
  4842   002254                     u4840:
  4843                           
  4844                           ; BSR set to: 0
  4845   002254  90D8               	bcf	status,0,c
  4846   002256  361F               	rlcf	___lldiv@quotient^0,f,c
  4847   002258  3620               	rlcf	(___lldiv@quotient+1)^0,f,c
  4848   00225A  3621               	rlcf	(___lldiv@quotient+2)^0,f,c
  4849   00225C  3622               	rlcf	(___lldiv@quotient+3)^0,f,c
  4850                           
  4851                           ; BSR set to: 0
  4852   00225E  51CC               	movf	___lldiv@divisor& (0+255),w,b
  4853   002260  5DC8               	subwf	___lldiv@dividend& (0+255),w,b
  4854   002262  51CD               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4855   002264  59C9               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  4856   002266  51CE               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4857   002268  59CA               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  4858   00226A  51CF               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4859   00226C  59CB               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  4860   00226E  A0D8               	btfss	status,0,c
  4861   002270  D009               	goto	l4861
  4862                           
  4863                           ; BSR set to: 0
  4864   002272  51CC               	movf	___lldiv@divisor& (0+255),w,b
  4865   002274  5FC8               	subwf	___lldiv@dividend& (0+255),f,b
  4866   002276  51CD               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4867   002278  5BC9               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  4868   00227A  51CE               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4869   00227C  5BCA               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  4870   00227E  51CF               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4871   002280  5BCB               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  4872                           
  4873                           ; BSR set to: 0
  4874   002282  801F               	bsf	___lldiv@quotient^0,0,c
  4875   002284                     l4861:
  4876                           
  4877                           ; BSR set to: 0
  4878   002284  90D8               	bcf	status,0,c
  4879   002286  33CF               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  4880   002288  33CE               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  4881   00228A  33CD               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  4882   00228C  33CC               	rrcf	___lldiv@divisor& (0+255),f,b
  4883                           
  4884                           ; BSR set to: 0
  4885   00228E  2E23               	decfsz	___lldiv@counter^0,f,c
  4886   002290  D7E1               	goto	u4840
  4887   002292                     l630:
  4888                           
  4889                           ; BSR set to: 0
  4890   002292  C01F  F0C8         	movff	___lldiv@quotient,?___lldiv
  4891   002296  C020  F0C9         	movff	___lldiv@quotient+1,?___lldiv+1
  4892   00229A  C021  F0CA         	movff	___lldiv@quotient+2,?___lldiv+2
  4893   00229E  C022  F0CB         	movff	___lldiv@quotient+3,?___lldiv+3
  4894                           
  4895                           ; BSR set to: 0
  4896   0022A2  0012               	return		;funcret
  4897   0022A4                     __end_of___lldiv:
  4898                           	callstack 0
  4899                           
  4900 ;; *************** function ___fltol *****************
  4901 ;; Defined at:
  4902 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;  f1              4   47[BANK0 ] unsigned long 
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;  exp1            1   52[BANK0 ] unsigned char 
  4907 ;;  sign1           1   51[BANK0 ] unsigned char 
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  4   47[BANK0 ] long 
  4910 ;; Registers used:
  4911 ;;		wreg, status,2, status,0
  4912 ;; Tracked objects:
  4913 ;;		On entry : 3F/0
  4914 ;;		On exit  : 3F/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4917 ;;      Params:         0       4       0       0       0       0       0       0       0
  4918 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4919 ;;      Temps:          0       0       4       0       0       0       0       0       0
  4920 ;;      Totals:         0       6       4       0       0       0       0       0       0
  4921 ;;Total ram usage:       10 bytes
  4922 ;; Hardware stack levels used: 1
  4923 ;; Hardware stack levels required when called: 4
  4924 ;; This function calls:
  4925 ;;		Nothing
  4926 ;; This function is called by:
  4927 ;;		_main
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           	psect	text19
  4932   001E42                     __ptext19:
  4933                           	callstack 0
  4934   001E42                     ___fltol:
  4935                           	callstack 26
  4936                           
  4937                           ; BSR set to: 0
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;incstack = 0
  4941   001E42  35F9               	rlcf	(___fltol@f1+2)& (0+255),w,b
  4942   001E44  35FA               	rlcf	(___fltol@f1+3)& (0+255),w,b
  4943   001E46  6FFC               	movwf	___fltol@exp1& (0+255),b
  4944   001E48  51FC               	movf	___fltol@exp1& (0+255),w,b
  4945   001E4A  A4D8               	btfss	status,2,c
  4946   001E4C  D009               	goto	l5139
  4947   001E4E                     u5270:
  4948                           
  4949                           ; BSR set to: 0
  4950   001E4E  0E00               	movlw	0
  4951   001E50  6FF7               	movwf	?___fltol& (0+255),b
  4952   001E52  0E00               	movlw	0
  4953   001E54  6FF8               	movwf	(?___fltol+1)& (0+255),b
  4954   001E56  0E00               	movlw	0
  4955   001E58  6FF9               	movwf	(?___fltol+2)& (0+255),b
  4956   001E5A  0E00               	movlw	0
  4957   001E5C  6FFA               	movwf	(?___fltol+3)& (0+255),b
  4958   001E5E  0012               	return	
  4959   001E60                     l5139:
  4960                           
  4961                           ; BSR set to: 0
  4962   001E60  C0F7  F1AE         	movff	___fltol@f1,??___fltol
  4963   001E64  C0F8  F1AF         	movff	___fltol@f1+1,??___fltol+1
  4964   001E68  C0F9  F1B0         	movff	___fltol@f1+2,??___fltol+2
  4965   001E6C  C0FA  F1B1         	movff	___fltol@f1+3,??___fltol+3
  4966   001E70  0E20               	movlw	32
  4967   001E72  D006               	goto	u5280
  4968   001E74                     u5285:
  4969   001E74  0101               	movlb	1	; () banked
  4970   001E76  90D8               	bcf	status,0,c
  4971   001E78  33B1               	rrcf	(??___fltol+3)& (0+255),f,b
  4972   001E7A  33B0               	rrcf	(??___fltol+2)& (0+255),f,b
  4973   001E7C  33AF               	rrcf	(??___fltol+1)& (0+255),f,b
  4974   001E7E  33AE               	rrcf	??___fltol& (0+255),f,b
  4975   001E80                     u5280:
  4976   001E80  2EE8               	decfsz	wreg,f,c
  4977   001E82  D7F8               	goto	u5285
  4978   001E84  51AE               	movf	??___fltol& (0+255),w,b
  4979   001E86  0100               	movlb	0	; () banked
  4980   001E88  6FFB               	movwf	___fltol@sign1& (0+255),b
  4981                           
  4982                           ; BSR set to: 0
  4983   001E8A  8FF9               	bsf	(___fltol@f1+2)& (0+255),7,b
  4984                           
  4985                           ; BSR set to: 0
  4986   001E8C  0EFF               	movlw	255
  4987   001E8E  17F7               	andwf	___fltol@f1& (0+255),f,b
  4988   001E90  0EFF               	movlw	255
  4989   001E92  17F8               	andwf	(___fltol@f1+1)& (0+255),f,b
  4990   001E94  0EFF               	movlw	255
  4991   001E96  17F9               	andwf	(___fltol@f1+2)& (0+255),f,b
  4992   001E98  0E00               	movlw	0
  4993   001E9A  17FA               	andwf	(___fltol@f1+3)& (0+255),f,b
  4994                           
  4995                           ; BSR set to: 0
  4996   001E9C  0E96               	movlw	150
  4997   001E9E  5FFC               	subwf	___fltol@exp1& (0+255),f,b
  4998                           
  4999                           ; BSR set to: 0
  5000   001EA0  AFFC               	btfss	___fltol@exp1& (0+255),7,b
  5001   001EA2  D00D               	goto	l5159
  5002                           
  5003                           ; BSR set to: 0
  5004   001EA4  51FC               	movf	___fltol@exp1& (0+255),w,b
  5005   001EA6  0A80               	xorlw	128
  5006   001EA8  0F97               	addlw	151
  5007   001EAA  A0D8               	btfss	status,0,c
  5008   001EAC  D7D0               	goto	u5270
  5009   001EAE                     l5155:
  5010                           
  5011                           ; BSR set to: 0
  5012   001EAE  90D8               	bcf	status,0,c
  5013   001EB0  33FA               	rrcf	(___fltol@f1+3)& (0+255),f,b
  5014   001EB2  33F9               	rrcf	(___fltol@f1+2)& (0+255),f,b
  5015   001EB4  33F8               	rrcf	(___fltol@f1+1)& (0+255),f,b
  5016   001EB6  33F7               	rrcf	___fltol@f1& (0+255),f,b
  5017                           
  5018                           ; BSR set to: 0
  5019   001EB8  3FFC               	incfsz	___fltol@exp1& (0+255),f,b
  5020   001EBA  D7F9               	goto	l5155
  5021   001EBC  D00D               	goto	u5320
  5022   001EBE                     l5159:
  5023                           
  5024                           ; BSR set to: 0
  5025   001EBE  0E1F               	movlw	31
  5026   001EC0  65FC               	cpfsgt	___fltol@exp1& (0+255),b
  5027   001EC2  D007               	goto	l5167
  5028   001EC4  D7C4               	goto	u5270
  5029   001EC6                     l5165:
  5030                           
  5031                           ; BSR set to: 0
  5032   001EC6  90D8               	bcf	status,0,c
  5033   001EC8  37F7               	rlcf	___fltol@f1& (0+255),f,b
  5034   001ECA  37F8               	rlcf	(___fltol@f1+1)& (0+255),f,b
  5035   001ECC  37F9               	rlcf	(___fltol@f1+2)& (0+255),f,b
  5036   001ECE  37FA               	rlcf	(___fltol@f1+3)& (0+255),f,b
  5037   001ED0  07FC               	decf	___fltol@exp1& (0+255),f,b
  5038   001ED2                     l5167:
  5039                           
  5040                           ; BSR set to: 0
  5041   001ED2  51FC               	movf	___fltol@exp1& (0+255),w,b
  5042   001ED4  A4D8               	btfss	status,2,c
  5043   001ED6  D7F7               	goto	l5165
  5044   001ED8                     u5320:
  5045                           
  5046                           ; BSR set to: 0
  5047   001ED8  51FB               	movf	___fltol@sign1& (0+255),w,b
  5048   001EDA  B4D8               	btfsc	status,2,c
  5049   001EDC  D008               	goto	l5173
  5050                           
  5051                           ; BSR set to: 0
  5052   001EDE  1FFA               	comf	(___fltol@f1+3)& (0+255),f,b
  5053   001EE0  1FF9               	comf	(___fltol@f1+2)& (0+255),f,b
  5054   001EE2  1FF8               	comf	(___fltol@f1+1)& (0+255),f,b
  5055   001EE4  6DF7               	negf	___fltol@f1& (0+255),b
  5056   001EE6  0E00               	movlw	0
  5057   001EE8  23F8               	addwfc	(___fltol@f1+1)& (0+255),f,b
  5058   001EEA  23F9               	addwfc	(___fltol@f1+2)& (0+255),f,b
  5059   001EEC  23FA               	addwfc	(___fltol@f1+3)& (0+255),f,b
  5060   001EEE                     l5173:
  5061                           
  5062                           ; BSR set to: 0
  5063   001EEE  C0F7  F0F7         	movff	___fltol@f1,?___fltol
  5064   001EF2  C0F8  F0F8         	movff	___fltol@f1+1,?___fltol+1
  5065   001EF6  C0F9  F0F9         	movff	___fltol@f1+2,?___fltol+2
  5066   001EFA  C0FA  F0FA         	movff	___fltol@f1+3,?___fltol+3
  5067                           
  5068                           ; BSR set to: 0
  5069   001EFE  0012               	return		;funcret
  5070   001F00                     __end_of___fltol:
  5071                           	callstack 0
  5072                           
  5073 ;; *************** function ___flmul *****************
  5074 ;; Defined at:
  5075 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;  b               4   10[BANK0 ] long 
  5078 ;;  a               4   14[BANK0 ] long 
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;  prod            4   29[BANK0 ] struct .
  5081 ;;  grs             4   25[BANK0 ] unsigned long 
  5082 ;;  temp            2   33[BANK0 ] struct .
  5083 ;;  bexp            1   24[BANK0 ] unsigned char 
  5084 ;;  aexp            1   23[BANK0 ] unsigned char 
  5085 ;;  sign            1   22[BANK0 ] unsigned char 
  5086 ;; Return value:  Size  Location     Type
  5087 ;;                  4   10[BANK0 ] unsigned char 
  5088 ;; Registers used:
  5089 ;;		wreg, status,2, status,0, prodl, prodh
  5090 ;; Tracked objects:
  5091 ;;		On entry : 3F/0
  5092 ;;		On exit  : 3F/0
  5093 ;;		Unchanged: 0/0
  5094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5095 ;;      Params:         0       8       0       0       0       0       0       0       0
  5096 ;;      Locals:         0      13       0       0       0       0       0       0       0
  5097 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5098 ;;      Totals:         0      25       0       0       0       0       0       0       0
  5099 ;;Total ram usage:       25 bytes
  5100 ;; Hardware stack levels used: 1
  5101 ;; Hardware stack levels required when called: 4
  5102 ;; This function calls:
  5103 ;;		Nothing
  5104 ;; This function is called by:
  5105 ;;		_main
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           	psect	text20
  5110   000FA0                     __ptext20:
  5111                           	callstack 0
  5112   000FA0                     ___flmul:
  5113                           	callstack 26
  5114                           
  5115                           ; BSR set to: 0
  5116                           
  5117                           ; BSR set to: 0
  5118                           ;incstack = 0
  5119   000FA0  51D5               	movf	(___flmul@b+3)& (0+255),w,b
  5120   000FA2  0B80               	andlw	128
  5121   000FA4  6FDE               	movwf	___flmul@sign& (0+255),b
  5122   000FA6  51D5               	movf	(___flmul@b+3)& (0+255),w,b
  5123   000FA8  25D5               	addwf	(___flmul@b+3)& (0+255),w,b
  5124   000FAA  6FE0               	movwf	___flmul@bexp& (0+255),b
  5125                           
  5126                           ; BSR set to: 0
  5127   000FAC  BFD4               	btfsc	(___flmul@b+2)& (0+255),7,b
  5128                           
  5129                           ; BSR set to: 0
  5130   000FAE  81E0               	bsf	___flmul@bexp& (0+255),0,b
  5131                           
  5132                           ; BSR set to: 0
  5133   000FB0  51E0               	movf	___flmul@bexp& (0+255),w,b
  5134   000FB2  B4D8               	btfsc	status,2,c
  5135   000FB4  D00D               	goto	l5017
  5136                           
  5137                           ; BSR set to: 0
  5138   000FB6  29E0               	incf	___flmul@bexp& (0+255),w,b
  5139   000FB8  A4D8               	btfss	status,2,c
  5140   000FBA  D008               	goto	l5015
  5141                           
  5142                           ; BSR set to: 0
  5143   000FBC  0E00               	movlw	0
  5144   000FBE  6FD2               	movwf	___flmul@b& (0+255),b
  5145   000FC0  0E00               	movlw	0
  5146   000FC2  6FD3               	movwf	(___flmul@b+1)& (0+255),b
  5147   000FC4  0E00               	movlw	0
  5148   000FC6  6FD4               	movwf	(___flmul@b+2)& (0+255),b
  5149   000FC8  0E00               	movlw	0
  5150   000FCA  6FD5               	movwf	(___flmul@b+3)& (0+255),b
  5151   000FCC                     l5015:
  5152                           
  5153                           ; BSR set to: 0
  5154   000FCC  8FD4               	bsf	(___flmul@b+2)& (0+255),7,b
  5155   000FCE  D008               	goto	l5019
  5156   000FD0                     l5017:
  5157                           
  5158                           ; BSR set to: 0
  5159   000FD0  0E00               	movlw	0
  5160   000FD2  6FD2               	movwf	___flmul@b& (0+255),b
  5161   000FD4  0E00               	movlw	0
  5162   000FD6  6FD3               	movwf	(___flmul@b+1)& (0+255),b
  5163   000FD8  0E00               	movlw	0
  5164   000FDA  6FD4               	movwf	(___flmul@b+2)& (0+255),b
  5165   000FDC  0E00               	movlw	0
  5166   000FDE  6FD5               	movwf	(___flmul@b+3)& (0+255),b
  5167   000FE0                     l5019:
  5168                           
  5169                           ; BSR set to: 0
  5170   000FE0  51D9               	movf	(___flmul@a+3)& (0+255),w,b
  5171   000FE2  0B80               	andlw	128
  5172   000FE4  1BDE               	xorwf	___flmul@sign& (0+255),f,b
  5173                           
  5174                           ; BSR set to: 0
  5175   000FE6  51D9               	movf	(___flmul@a+3)& (0+255),w,b
  5176   000FE8  25D9               	addwf	(___flmul@a+3)& (0+255),w,b
  5177   000FEA  6FDF               	movwf	___flmul@aexp& (0+255),b
  5178                           
  5179                           ; BSR set to: 0
  5180   000FEC  BFD8               	btfsc	(___flmul@a+2)& (0+255),7,b
  5181                           
  5182                           ; BSR set to: 0
  5183   000FEE  81DF               	bsf	___flmul@aexp& (0+255),0,b
  5184                           
  5185                           ; BSR set to: 0
  5186   000FF0  51DF               	movf	___flmul@aexp& (0+255),w,b
  5187   000FF2  B4D8               	btfsc	status,2,c
  5188   000FF4  D00D               	goto	l5035
  5189                           
  5190                           ; BSR set to: 0
  5191   000FF6  29DF               	incf	___flmul@aexp& (0+255),w,b
  5192   000FF8  A4D8               	btfss	status,2,c
  5193   000FFA  D008               	goto	l5033
  5194                           
  5195                           ; BSR set to: 0
  5196   000FFC  0E00               	movlw	0
  5197   000FFE  6FD6               	movwf	___flmul@a& (0+255),b
  5198   001000  0E00               	movlw	0
  5199   001002  6FD7               	movwf	(___flmul@a+1)& (0+255),b
  5200   001004  0E00               	movlw	0
  5201   001006  6FD8               	movwf	(___flmul@a+2)& (0+255),b
  5202   001008  0E00               	movlw	0
  5203   00100A  6FD9               	movwf	(___flmul@a+3)& (0+255),b
  5204   00100C                     l5033:
  5205                           
  5206                           ; BSR set to: 0
  5207   00100C  8FD8               	bsf	(___flmul@a+2)& (0+255),7,b
  5208   00100E  D008               	goto	l1217
  5209   001010                     l5035:
  5210                           
  5211                           ; BSR set to: 0
  5212   001010  0E00               	movlw	0
  5213   001012  6FD6               	movwf	___flmul@a& (0+255),b
  5214   001014  0E00               	movlw	0
  5215   001016  6FD7               	movwf	(___flmul@a+1)& (0+255),b
  5216   001018  0E00               	movlw	0
  5217   00101A  6FD8               	movwf	(___flmul@a+2)& (0+255),b
  5218   00101C  0E00               	movlw	0
  5219   00101E  6FD9               	movwf	(___flmul@a+3)& (0+255),b
  5220   001020                     l1217:
  5221                           
  5222                           ; BSR set to: 0
  5223   001020  51DF               	movf	___flmul@aexp& (0+255),w,b
  5224   001022  B4D8               	btfsc	status,2,c
  5225   001024  D003               	goto	u5160
  5226                           
  5227                           ; BSR set to: 0
  5228   001026  51E0               	movf	___flmul@bexp& (0+255),w,b
  5229   001028  A4D8               	btfss	status,2,c
  5230   00102A  D009               	goto	l5043
  5231   00102C                     u5160:
  5232                           
  5233                           ; BSR set to: 0
  5234   00102C  0E00               	movlw	0
  5235   00102E  6FD2               	movwf	?___flmul& (0+255),b
  5236   001030  0E00               	movlw	0
  5237   001032  6FD3               	movwf	(?___flmul+1)& (0+255),b
  5238   001034  0E00               	movlw	0
  5239   001036  6FD4               	movwf	(?___flmul+2)& (0+255),b
  5240   001038  0E00               	movlw	0
  5241   00103A  6FD5               	movwf	(?___flmul+3)& (0+255),b
  5242   00103C  0012               	return	
  5243   00103E                     l5043:
  5244                           
  5245                           ; BSR set to: 0
  5246   00103E  51D8               	movf	(___flmul@a+2)& (0+255),w,b
  5247   001040  03D2               	mulwf	___flmul@b& (0+255),b
  5248   001042  CFF3 F0E9          	movff	prodl,___flmul@temp
  5249   001046  CFF4 F0EA          	movff	prodh,___flmul@temp+1
  5250                           
  5251                           ; BSR set to: 0
  5252   00104A  51E9               	movf	___flmul@temp& (0+255),w,b
  5253   00104C  6FE1               	movwf	___flmul@grs& (0+255),b
  5254   00104E  6BE2               	clrf	(___flmul@grs+1)& (0+255),b
  5255   001050  6BE3               	clrf	(___flmul@grs+2)& (0+255),b
  5256   001052  6BE4               	clrf	(___flmul@grs+3)& (0+255),b
  5257                           
  5258                           ; BSR set to: 0
  5259   001054  51EA               	movf	(___flmul@temp+1)& (0+255),w,b
  5260   001056  6FE5               	movwf	___flmul@prod& (0+255),b
  5261   001058  6BE6               	clrf	(___flmul@prod+1)& (0+255),b
  5262   00105A  6BE7               	clrf	(___flmul@prod+2)& (0+255),b
  5263   00105C  6BE8               	clrf	(___flmul@prod+3)& (0+255),b
  5264   00105E  51D7               	movf	(___flmul@a+1)& (0+255),w,b
  5265   001060  03D3               	mulwf	(___flmul@b+1)& (0+255),b
  5266   001062  CFF3 F0E9          	movff	prodl,___flmul@temp
  5267   001066  CFF4 F0EA          	movff	prodh,___flmul@temp+1
  5268                           
  5269                           ; BSR set to: 0
  5270   00106A  51E9               	movf	___flmul@temp& (0+255),w,b
  5271   00106C  27E1               	addwf	___flmul@grs& (0+255),f,b
  5272   00106E  0E00               	movlw	0
  5273   001070  23E2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5274   001072  23E3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5275   001074  23E4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5276                           
  5277                           ; BSR set to: 0
  5278   001076  51EA               	movf	(___flmul@temp+1)& (0+255),w,b
  5279   001078  27E5               	addwf	___flmul@prod& (0+255),f,b
  5280   00107A  0E00               	movlw	0
  5281   00107C  23E6               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5282   00107E  23E7               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5283   001080  23E8               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5284   001082  51D6               	movf	___flmul@a& (0+255),w,b
  5285   001084  03D4               	mulwf	(___flmul@b+2)& (0+255),b
  5286   001086  CFF3 F0E9          	movff	prodl,___flmul@temp
  5287   00108A  CFF4 F0EA          	movff	prodh,___flmul@temp+1
  5288                           
  5289                           ; BSR set to: 0
  5290   00108E  51E9               	movf	___flmul@temp& (0+255),w,b
  5291   001090  27E1               	addwf	___flmul@grs& (0+255),f,b
  5292   001092  0E00               	movlw	0
  5293   001094  23E2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5294   001096  23E3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5295   001098  23E4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5296                           
  5297                           ; BSR set to: 0
  5298   00109A  51EA               	movf	(___flmul@temp+1)& (0+255),w,b
  5299   00109C  27E5               	addwf	___flmul@prod& (0+255),f,b
  5300   00109E  0E00               	movlw	0
  5301   0010A0  23E6               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5302   0010A2  23E7               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5303   0010A4  23E8               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5304                           
  5305                           ; BSR set to: 0
  5306   0010A6  C0E3  F0E4         	movff	___flmul@grs+2,___flmul@grs+3
  5307   0010AA  C0E2  F0E3         	movff	___flmul@grs+1,___flmul@grs+2
  5308   0010AE  C0E1  F0E2         	movff	___flmul@grs,___flmul@grs+1
  5309   0010B2  6BE1               	clrf	___flmul@grs& (0+255),b
  5310                           
  5311                           ; BSR set to: 0
  5312   0010B4  51D6               	movf	___flmul@a& (0+255),w,b
  5313   0010B6  03D3               	mulwf	(___flmul@b+1)& (0+255),b
  5314   0010B8  CFF3 F0E9          	movff	prodl,___flmul@temp
  5315   0010BC  CFF4 F0EA          	movff	prodh,___flmul@temp+1
  5316                           
  5317                           ; BSR set to: 0
  5318   0010C0  51E9               	movf	___flmul@temp& (0+255),w,b
  5319   0010C2  27E1               	addwf	___flmul@grs& (0+255),f,b
  5320   0010C4  51EA               	movf	(___flmul@temp+1)& (0+255),w,b
  5321   0010C6  23E2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5322   0010C8  0E00               	movlw	0
  5323   0010CA  23E3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5324   0010CC  0E00               	movlw	0
  5325   0010CE  23E4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5326                           
  5327                           ; BSR set to: 0
  5328   0010D0  51D7               	movf	(___flmul@a+1)& (0+255),w,b
  5329   0010D2  03D2               	mulwf	___flmul@b& (0+255),b
  5330   0010D4  CFF3 F0E9          	movff	prodl,___flmul@temp
  5331   0010D8  CFF4 F0EA          	movff	prodh,___flmul@temp+1
  5332                           
  5333                           ; BSR set to: 0
  5334   0010DC  51E9               	movf	___flmul@temp& (0+255),w,b
  5335   0010DE  27E1               	addwf	___flmul@grs& (0+255),f,b
  5336   0010E0  51EA               	movf	(___flmul@temp+1)& (0+255),w,b
  5337   0010E2  23E2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5338   0010E4  0E00               	movlw	0
  5339   0010E6  23E3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5340   0010E8  0E00               	movlw	0
  5341   0010EA  23E4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5342                           
  5343                           ; BSR set to: 0
  5344   0010EC  C0E3  F0E4         	movff	___flmul@grs+2,___flmul@grs+3
  5345   0010F0  C0E2  F0E3         	movff	___flmul@grs+1,___flmul@grs+2
  5346   0010F4  C0E1  F0E2         	movff	___flmul@grs,___flmul@grs+1
  5347   0010F8  6BE1               	clrf	___flmul@grs& (0+255),b
  5348   0010FA  51D6               	movf	___flmul@a& (0+255),w,b
  5349   0010FC  03D2               	mulwf	___flmul@b& (0+255),b
  5350   0010FE  CFF3 F0E9          	movff	prodl,___flmul@temp
  5351   001102  CFF4 F0EA          	movff	prodh,___flmul@temp+1
  5352                           
  5353                           ; BSR set to: 0
  5354   001106  51E9               	movf	___flmul@temp& (0+255),w,b
  5355   001108  27E1               	addwf	___flmul@grs& (0+255),f,b
  5356   00110A  51EA               	movf	(___flmul@temp+1)& (0+255),w,b
  5357   00110C  23E2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5358   00110E  0E00               	movlw	0
  5359   001110  23E3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5360   001112  0E00               	movlw	0
  5361   001114  23E4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5362                           
  5363                           ; BSR set to: 0
  5364   001116  51D8               	movf	(___flmul@a+2)& (0+255),w,b
  5365   001118  03D3               	mulwf	(___flmul@b+1)& (0+255),b
  5366   00111A  CFF3 F0E9          	movff	prodl,___flmul@temp
  5367   00111E  CFF4 F0EA          	movff	prodh,___flmul@temp+1
  5368   001122  51E9               	movf	___flmul@temp& (0+255),w,b
  5369   001124  27E5               	addwf	___flmul@prod& (0+255),f,b
  5370   001126  51EA               	movf	(___flmul@temp+1)& (0+255),w,b
  5371   001128  23E6               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5372   00112A  0E00               	movlw	0
  5373   00112C  23E7               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5374   00112E  0E00               	movlw	0
  5375   001130  23E8               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5376                           
  5377                           ; BSR set to: 0
  5378   001132  51D7               	movf	(___flmul@a+1)& (0+255),w,b
  5379   001134  03D4               	mulwf	(___flmul@b+2)& (0+255),b
  5380   001136  CFF3 F0E9          	movff	prodl,___flmul@temp
  5381   00113A  CFF4 F0EA          	movff	prodh,___flmul@temp+1
  5382                           
  5383                           ; BSR set to: 0
  5384   00113E  51E9               	movf	___flmul@temp& (0+255),w,b
  5385   001140  27E5               	addwf	___flmul@prod& (0+255),f,b
  5386   001142  51EA               	movf	(___flmul@temp+1)& (0+255),w,b
  5387   001144  23E6               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5388   001146  0E00               	movlw	0
  5389   001148  23E7               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5390   00114A  0E00               	movlw	0
  5391   00114C  23E8               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5392   00114E  51D8               	movf	(___flmul@a+2)& (0+255),w,b
  5393   001150  03D4               	mulwf	(___flmul@b+2)& (0+255),b
  5394   001152  CFF3 F0E9          	movff	prodl,___flmul@temp
  5395   001156  CFF4 F0EA          	movff	prodh,___flmul@temp+1
  5396                           
  5397                           ; BSR set to: 0
  5398   00115A  51E9               	movf	___flmul@temp& (0+255),w,b
  5399   00115C  6FDA               	movwf	??___flmul& (0+255),b
  5400   00115E  51EA               	movf	(___flmul@temp+1)& (0+255),w,b
  5401   001160  6FDB               	movwf	(??___flmul+1)& (0+255),b
  5402   001162  6BDC               	clrf	(??___flmul+2)& (0+255),b
  5403   001164  6BDD               	clrf	(??___flmul+3)& (0+255),b
  5404   001166  C0DC  F0DD         	movff	??___flmul+2,??___flmul+3
  5405   00116A  C0DB  F0DC         	movff	??___flmul+1,??___flmul+2
  5406   00116E  C0DA  F0DB         	movff	??___flmul,??___flmul+1
  5407   001172  6BDA               	clrf	??___flmul& (0+255),b
  5408   001174  51DA               	movf	??___flmul& (0+255),w,b
  5409   001176  27E5               	addwf	___flmul@prod& (0+255),f,b
  5410   001178  51DB               	movf	(??___flmul+1)& (0+255),w,b
  5411   00117A  23E6               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5412   00117C  51DC               	movf	(??___flmul+2)& (0+255),w,b
  5413   00117E  23E7               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5414   001180  51DD               	movf	(??___flmul+3)& (0+255),w,b
  5415   001182  23E8               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5416                           
  5417                           ; BSR set to: 0
  5418   001184  51E4               	movf	(___flmul@grs+3)& (0+255),w,b
  5419   001186  27E5               	addwf	___flmul@prod& (0+255),f,b
  5420   001188  0E00               	movlw	0
  5421   00118A  23E6               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5422   00118C  23E7               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5423   00118E  23E8               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5424                           
  5425                           ; BSR set to: 0
  5426   001190  C0E3  F0E4         	movff	___flmul@grs+2,___flmul@grs+3
  5427   001194  C0E2  F0E3         	movff	___flmul@grs+1,___flmul@grs+2
  5428   001198  C0E1  F0E2         	movff	___flmul@grs,___flmul@grs+1
  5429   00119C  6BE1               	clrf	___flmul@grs& (0+255),b
  5430                           
  5431                           ; BSR set to: 0
  5432   00119E  51DF               	movf	___flmul@aexp& (0+255),w,b
  5433   0011A0  C0E0  F0DA         	movff	___flmul@bexp,??___flmul
  5434   0011A4  6BDB               	clrf	(??___flmul+1)& (0+255),b
  5435   0011A6  27DA               	addwf	??___flmul& (0+255),f,b
  5436   0011A8  0E00               	movlw	0
  5437   0011AA  23DB               	addwfc	(??___flmul+1)& (0+255),f,b
  5438   0011AC  0E82               	movlw	130
  5439   0011AE  25DA               	addwf	??___flmul& (0+255),w,b
  5440   0011B0  6FE9               	movwf	___flmul@temp& (0+255),b
  5441   0011B2  0EFF               	movlw	255
  5442   0011B4  21DB               	addwfc	(??___flmul+1)& (0+255),w,b
  5443   0011B6  6FEA               	movwf	(___flmul@temp+1)& (0+255),b
  5444   0011B8  D00F               	goto	l5091
  5445   0011BA                     l5085:
  5446                           
  5447                           ; BSR set to: 0
  5448   0011BA  90D8               	bcf	status,0,c
  5449   0011BC  37E5               	rlcf	___flmul@prod& (0+255),f,b
  5450   0011BE  37E6               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5451   0011C0  37E7               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5452   0011C2  37E8               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5453                           
  5454                           ; BSR set to: 0
  5455   0011C4  BFE4               	btfsc	(___flmul@grs+3)& (0+255),7,b
  5456                           
  5457                           ; BSR set to: 0
  5458   0011C6  81E5               	bsf	___flmul@prod& (0+255),0,b
  5459                           
  5460                           ; BSR set to: 0
  5461   0011C8  90D8               	bcf	status,0,c
  5462   0011CA  37E1               	rlcf	___flmul@grs& (0+255),f,b
  5463   0011CC  37E2               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5464   0011CE  37E3               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5465   0011D0  37E4               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5466   0011D2  07E9               	decf	___flmul@temp& (0+255),f,b
  5467   0011D4  A0D8               	btfss	status,0,c
  5468   0011D6  07EA               	decf	(___flmul@temp+1)& (0+255),f,b
  5469   0011D8                     l5091:
  5470                           
  5471                           ; BSR set to: 0
  5472   0011D8  AFE7               	btfss	(___flmul@prod+2)& (0+255),7,b
  5473   0011DA  D7EF               	goto	l5085
  5474                           
  5475                           ; BSR set to: 0
  5476   0011DC  0E00               	movlw	0
  5477   0011DE  6FDF               	movwf	___flmul@aexp& (0+255),b
  5478                           
  5479                           ; BSR set to: 0
  5480   0011E0  AFE4               	btfss	(___flmul@grs+3)& (0+255),7,b
  5481   0011E2  D017               	goto	l1226
  5482                           
  5483                           ; BSR set to: 0
  5484   0011E4  0EFF               	movlw	255
  5485   0011E6  15E1               	andwf	___flmul@grs& (0+255),w,b
  5486   0011E8  6FDA               	movwf	??___flmul& (0+255),b
  5487   0011EA  0EFF               	movlw	255
  5488   0011EC  15E2               	andwf	(___flmul@grs+1)& (0+255),w,b
  5489   0011EE  6FDB               	movwf	(??___flmul+1)& (0+255),b
  5490   0011F0  0EFF               	movlw	255
  5491   0011F2  15E3               	andwf	(___flmul@grs+2)& (0+255),w,b
  5492   0011F4  6FDC               	movwf	(??___flmul+2)& (0+255),b
  5493   0011F6  0E7F               	movlw	127
  5494   0011F8  15E4               	andwf	(___flmul@grs+3)& (0+255),w,b
  5495   0011FA  6FDD               	movwf	(??___flmul+3)& (0+255),b
  5496   0011FC  51DA               	movf	??___flmul& (0+255),w,b
  5497   0011FE  11DB               	iorwf	(??___flmul+1)& (0+255),w,b
  5498   001200  11DC               	iorwf	(??___flmul+2)& (0+255),w,b
  5499   001202  11DD               	iorwf	(??___flmul+3)& (0+255),w,b
  5500   001204  B4D8               	btfsc	status,2,c
  5501   001206  D003               	goto	l1227
  5502   001208                     u5200:
  5503                           
  5504                           ; BSR set to: 0
  5505   001208  0E01               	movlw	1
  5506   00120A  6FDF               	movwf	___flmul@aexp& (0+255),b
  5507   00120C  D002               	goto	l1226
  5508   00120E                     l1227:
  5509                           
  5510                           ; BSR set to: 0
  5511   00120E  B1E5               	btfsc	___flmul@prod& (0+255),0,b
  5512   001210  D7FB               	goto	u5200
  5513   001212                     l1226:
  5514                           
  5515                           ; BSR set to: 0
  5516   001212  51DF               	movf	___flmul@aexp& (0+255),w,b
  5517   001214  B4D8               	btfsc	status,2,c
  5518   001216  D01F               	goto	l5111
  5519                           
  5520                           ; BSR set to: 0
  5521   001218  0E01               	movlw	1
  5522   00121A  27E5               	addwf	___flmul@prod& (0+255),f,b
  5523   00121C  0E00               	movlw	0
  5524   00121E  23E6               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5525   001220  23E7               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5526   001222  23E8               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5527                           
  5528                           ; BSR set to: 0
  5529   001224  A1E8               	btfss	(___flmul@prod+3)& (0+255),0,b
  5530   001226  D017               	goto	l5111
  5531                           
  5532                           ; BSR set to: 0
  5533   001228  C0E5  F0DA         	movff	___flmul@prod,??___flmul
  5534   00122C  C0E6  F0DB         	movff	___flmul@prod+1,??___flmul+1
  5535   001230  C0E7  F0DC         	movff	___flmul@prod+2,??___flmul+2
  5536   001234  C0E8  F0DD         	movff	___flmul@prod+3,??___flmul+3
  5537   001238  35DD               	rlcf	(??___flmul+3)& (0+255),w,b
  5538   00123A  33DD               	rrcf	(??___flmul+3)& (0+255),f,b
  5539   00123C  33DC               	rrcf	(??___flmul+2)& (0+255),f,b
  5540   00123E  33DB               	rrcf	(??___flmul+1)& (0+255),f,b
  5541   001240  33DA               	rrcf	??___flmul& (0+255),f,b
  5542   001242  C0DA  F0E5         	movff	??___flmul,___flmul@prod
  5543   001246  C0DB  F0E6         	movff	??___flmul+1,___flmul@prod+1
  5544   00124A  C0DC  F0E7         	movff	??___flmul+2,___flmul@prod+2
  5545   00124E  C0DD  F0E8         	movff	??___flmul+3,___flmul@prod+3
  5546                           
  5547                           ; BSR set to: 0
  5548   001252  4BE9               	infsnz	___flmul@temp& (0+255),f,b
  5549   001254  2BEA               	incf	(___flmul@temp+1)& (0+255),f,b
  5550   001256                     l5111:
  5551                           
  5552                           ; BSR set to: 0
  5553   001256  BFEA               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5554   001258  D00D               	goto	l5115
  5555   00125A  51EA               	movf	(___flmul@temp+1)& (0+255),w,b
  5556   00125C  E103               	bnz	u5240
  5557   00125E  29E9               	incf	___flmul@temp& (0+255),w,b
  5558   001260  A0D8               	btfss	status,0,c
  5559   001262  D008               	goto	l5115
  5560   001264                     u5240:
  5561                           
  5562                           ; BSR set to: 0
  5563   001264  0E00               	movlw	0
  5564   001266  6FE5               	movwf	___flmul@prod& (0+255),b
  5565   001268  0E00               	movlw	0
  5566   00126A  6FE6               	movwf	(___flmul@prod+1)& (0+255),b
  5567   00126C  0E80               	movlw	128
  5568   00126E  6FE7               	movwf	(___flmul@prod+2)& (0+255),b
  5569   001270  0E7F               	movlw	127
  5570   001272  D020               	goto	L7
  5571   001274                     l5115:
  5572                           
  5573                           ; BSR set to: 0
  5574   001274  BFEA               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5575   001276  D005               	goto	u5250
  5576   001278  51EA               	movf	(___flmul@temp+1)& (0+255),w,b
  5577   00127A  E10E               	bnz	l1234
  5578   00127C  05E9               	decf	___flmul@temp& (0+255),w,b
  5579   00127E  B0D8               	btfsc	status,0,c
  5580   001280  D00B               	goto	l1234
  5581   001282                     u5250:
  5582                           
  5583                           ; BSR set to: 0
  5584   001282  0E00               	movlw	0
  5585   001284  6FE5               	movwf	___flmul@prod& (0+255),b
  5586   001286  0E00               	movlw	0
  5587   001288  6FE6               	movwf	(___flmul@prod+1)& (0+255),b
  5588   00128A  0E00               	movlw	0
  5589   00128C  6FE7               	movwf	(___flmul@prod+2)& (0+255),b
  5590   00128E  0E00               	movlw	0
  5591   001290  6FE8               	movwf	(___flmul@prod+3)& (0+255),b
  5592   001292  0E00               	movlw	0
  5593   001294  6FDE               	movwf	___flmul@sign& (0+255),b
  5594   001296  D00F               	goto	l5127
  5595   001298                     l1234:
  5596                           
  5597                           ; BSR set to: 0
  5598   001298  C0E9  F0E0         	movff	___flmul@temp,___flmul@bexp
  5599                           
  5600                           ; BSR set to: 0
  5601   00129C  0EFF               	movlw	255
  5602   00129E  17E5               	andwf	___flmul@prod& (0+255),f,b
  5603   0012A0  0EFF               	movlw	255
  5604   0012A2  17E6               	andwf	(___flmul@prod+1)& (0+255),f,b
  5605   0012A4  0E7F               	movlw	127
  5606   0012A6  17E7               	andwf	(___flmul@prod+2)& (0+255),f,b
  5607   0012A8  0E00               	movlw	0
  5608   0012AA  17E8               	andwf	(___flmul@prod+3)& (0+255),f,b
  5609                           
  5610                           ; BSR set to: 0
  5611   0012AC  B1E0               	btfsc	___flmul@bexp& (0+255),0,b
  5612                           
  5613                           ; BSR set to: 0
  5614   0012AE  8FE7               	bsf	(___flmul@prod+2)& (0+255),7,b
  5615                           
  5616                           ; BSR set to: 0
  5617   0012B0  90D8               	bcf	status,0,c
  5618   0012B2  31E0               	rrcf	___flmul@bexp& (0+255),w,b
  5619   0012B4                     L7:
  5620   0012B4  6FE8               	movwf	(___flmul@prod+3)& (0+255),b
  5621   0012B6                     l5127:
  5622                           
  5623                           ; BSR set to: 0
  5624   0012B6  51DE               	movf	___flmul@sign& (0+255),w,b
  5625   0012B8  13E8               	iorwf	(___flmul@prod+3)& (0+255),f,b
  5626                           
  5627                           ; BSR set to: 0
  5628   0012BA  C0E5  F0D2         	movff	___flmul@prod,?___flmul
  5629   0012BE  C0E6  F0D3         	movff	___flmul@prod+1,?___flmul+1
  5630   0012C2  C0E7  F0D4         	movff	___flmul@prod+2,?___flmul+2
  5631   0012C6  C0E8  F0D5         	movff	___flmul@prod+3,?___flmul+3
  5632                           
  5633                           ; BSR set to: 0
  5634   0012CA  0012               	return		;funcret
  5635   0012CC                     __end_of___flmul:
  5636                           	callstack 0
  5637                           
  5638 ;; *************** function ___fldiv *****************
  5639 ;; Defined at:
  5640 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;  b               4   35[BANK0 ] unsigned char 
  5643 ;;  a               4   39[BANK0 ] unsigned char 
  5644 ;; Auto vars:     Size  Location     Type
  5645 ;;  grs             4    7[BANK1 ] unsigned long 
  5646 ;;  rem             4    0[BANK1 ] unsigned long 
  5647 ;;  new_exp         2    5[BANK1 ] short 
  5648 ;;  aexp            1   12[BANK1 ] unsigned char 
  5649 ;;  bexp            1   11[BANK1 ] unsigned char 
  5650 ;;  sign            1    4[BANK1 ] unsigned char 
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  4   35[BANK0 ] unsigned char 
  5653 ;; Registers used:
  5654 ;;		wreg, status,2, status,0
  5655 ;; Tracked objects:
  5656 ;;		On entry : 3F/0
  5657 ;;		On exit  : 3F/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5660 ;;      Params:         0       8       0       0       0       0       0       0       0
  5661 ;;      Locals:         0       0      13       0       0       0       0       0       0
  5662 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5663 ;;      Totals:         0      12      13       0       0       0       0       0       0
  5664 ;;Total ram usage:       25 bytes
  5665 ;; Hardware stack levels used: 1
  5666 ;; Hardware stack levels required when called: 4
  5667 ;; This function calls:
  5668 ;;		Nothing
  5669 ;; This function is called by:
  5670 ;;		_main
  5671 ;; This function uses a non-reentrant model
  5672 ;;
  5673                           
  5674                           	psect	text21
  5675   0015F8                     __ptext21:
  5676                           	callstack 0
  5677   0015F8                     ___fldiv:
  5678                           	callstack 26
  5679                           
  5680                           ; BSR set to: 0
  5681                           
  5682                           ; BSR set to: 0
  5683                           ;incstack = 0
  5684   0015F8  51EE               	movf	(___fldiv@b+3)& (0+255),w,b
  5685   0015FA  0B80               	andlw	128
  5686   0015FC  0101               	movlb	1	; () banked
  5687   0015FE  6FA5               	movwf	___fldiv@sign& (0+255),b
  5688   001600  0100               	movlb	0	; () banked
  5689   001602  51EE               	movf	(___fldiv@b+3)& (0+255),w,b
  5690   001604  25EE               	addwf	(___fldiv@b+3)& (0+255),w,b
  5691   001606  0101               	movlb	1	; () banked
  5692   001608  6FAC               	movwf	___fldiv@bexp& (0+255),b
  5693                           
  5694                           ; BSR set to: 1
  5695   00160A  0100               	movlb	0	; () banked
  5696   00160C  AFED               	btfss	(___fldiv@b+2)& (0+255),7,b
  5697   00160E  D002               	goto	l4871
  5698                           
  5699                           ; BSR set to: 0
  5700   001610  0101               	movlb	1	; () banked
  5701   001612  81AC               	bsf	___fldiv@bexp& (0+255),0,b
  5702   001614                     l4871:
  5703   001614  0101               	movlb	1	; () banked
  5704   001616  51AC               	movf	___fldiv@bexp& (0+255),w,b
  5705   001618  B4D8               	btfsc	status,2,c
  5706   00161A  D00F               	goto	l4881
  5707                           
  5708                           ; BSR set to: 1
  5709   00161C  29AC               	incf	___fldiv@bexp& (0+255),w,b
  5710   00161E  A4D8               	btfss	status,2,c
  5711   001620  D009               	goto	l4877
  5712                           
  5713                           ; BSR set to: 1
  5714   001622  0E00               	movlw	0
  5715   001624  0100               	movlb	0	; () banked
  5716   001626  6FEB               	movwf	___fldiv@b& (0+255),b
  5717   001628  0E00               	movlw	0
  5718   00162A  6FEC               	movwf	(___fldiv@b+1)& (0+255),b
  5719   00162C  0E00               	movlw	0
  5720   00162E  6FED               	movwf	(___fldiv@b+2)& (0+255),b
  5721   001630  0E00               	movlw	0
  5722   001632  6FEE               	movwf	(___fldiv@b+3)& (0+255),b
  5723   001634                     l4877:
  5724   001634  0100               	movlb	0	; () banked
  5725   001636  8FED               	bsf	(___fldiv@b+2)& (0+255),7,b
  5726   001638  D007               	goto	L8
  5727   00163A                     l4881:
  5728                           
  5729                           ; BSR set to: 1
  5730   00163A  0E00               	movlw	0
  5731   00163C  0100               	movlb	0	; () banked
  5732   00163E  6FEB               	movwf	___fldiv@b& (0+255),b
  5733   001640  0E00               	movlw	0
  5734   001642  6FEC               	movwf	(___fldiv@b+1)& (0+255),b
  5735   001644  0E00               	movlw	0
  5736   001646  6FED               	movwf	(___fldiv@b+2)& (0+255),b
  5737   001648                     L8:
  5738   001648  0E00               	movlw	0
  5739   00164A  6FEE               	movwf	(___fldiv@b+3)& (0+255),b
  5740                           
  5741                           ; BSR set to: 0
  5742   00164C  51F2               	movf	(___fldiv@a+3)& (0+255),w,b
  5743   00164E  0B80               	andlw	128
  5744   001650  0101               	movlb	1	; () banked
  5745   001652  1BA5               	xorwf	___fldiv@sign& (0+255),f,b
  5746                           
  5747                           ; BSR set to: 1
  5748   001654  0100               	movlb	0	; () banked
  5749   001656  51F2               	movf	(___fldiv@a+3)& (0+255),w,b
  5750   001658  25F2               	addwf	(___fldiv@a+3)& (0+255),w,b
  5751   00165A  0101               	movlb	1	; () banked
  5752   00165C  6FAD               	movwf	___fldiv@aexp& (0+255),b
  5753                           
  5754                           ; BSR set to: 1
  5755   00165E  0100               	movlb	0	; () banked
  5756   001660  AFF1               	btfss	(___fldiv@a+2)& (0+255),7,b
  5757   001662  D002               	goto	l4891
  5758                           
  5759                           ; BSR set to: 0
  5760   001664  0101               	movlb	1	; () banked
  5761   001666  81AD               	bsf	___fldiv@aexp& (0+255),0,b
  5762   001668                     l4891:
  5763   001668  0101               	movlb	1	; () banked
  5764   00166A  51AD               	movf	___fldiv@aexp& (0+255),w,b
  5765   00166C  B4D8               	btfsc	status,2,c
  5766   00166E  D00F               	goto	l4901
  5767                           
  5768                           ; BSR set to: 1
  5769   001670  29AD               	incf	___fldiv@aexp& (0+255),w,b
  5770   001672  A4D8               	btfss	status,2,c
  5771   001674  D009               	goto	l4897
  5772                           
  5773                           ; BSR set to: 1
  5774   001676  0E00               	movlw	0
  5775   001678  0100               	movlb	0	; () banked
  5776   00167A  6FEF               	movwf	___fldiv@a& (0+255),b
  5777   00167C  0E00               	movlw	0
  5778   00167E  6FF0               	movwf	(___fldiv@a+1)& (0+255),b
  5779   001680  0E00               	movlw	0
  5780   001682  6FF1               	movwf	(___fldiv@a+2)& (0+255),b
  5781   001684  0E00               	movlw	0
  5782   001686  6FF2               	movwf	(___fldiv@a+3)& (0+255),b
  5783   001688                     l4897:
  5784   001688  0100               	movlb	0	; () banked
  5785   00168A  8FF1               	bsf	(___fldiv@a+2)& (0+255),7,b
  5786   00168C  D007               	goto	L9
  5787   00168E                     l4901:
  5788                           
  5789                           ; BSR set to: 1
  5790   00168E  0E00               	movlw	0
  5791   001690  0100               	movlb	0	; () banked
  5792   001692  6FEF               	movwf	___fldiv@a& (0+255),b
  5793   001694  0E00               	movlw	0
  5794   001696  6FF0               	movwf	(___fldiv@a+1)& (0+255),b
  5795   001698  0E00               	movlw	0
  5796   00169A  6FF1               	movwf	(___fldiv@a+2)& (0+255),b
  5797   00169C                     L9:
  5798   00169C  0E00               	movlw	0
  5799   00169E  6FF2               	movwf	(___fldiv@a+3)& (0+255),b
  5800                           
  5801                           ; BSR set to: 0
  5802   0016A0  51EF               	movf	___fldiv@a& (0+255),w,b
  5803   0016A2  11F0               	iorwf	(___fldiv@a+1)& (0+255),w,b
  5804   0016A4  11F1               	iorwf	(___fldiv@a+2)& (0+255),w,b
  5805   0016A6  11F2               	iorwf	(___fldiv@a+3)& (0+255),w,b
  5806   0016A8  A4D8               	btfss	status,2,c
  5807   0016AA  D019               	goto	l4915
  5808                           
  5809                           ; BSR set to: 0
  5810   0016AC  0E00               	movlw	0
  5811   0016AE  6FEB               	movwf	___fldiv@b& (0+255),b
  5812   0016B0  0E00               	movlw	0
  5813   0016B2  6FEC               	movwf	(___fldiv@b+1)& (0+255),b
  5814   0016B4  0E00               	movlw	0
  5815   0016B6  6FED               	movwf	(___fldiv@b+2)& (0+255),b
  5816   0016B8  0E00               	movlw	0
  5817   0016BA  6FEE               	movwf	(___fldiv@b+3)& (0+255),b
  5818                           
  5819                           ; BSR set to: 0
  5820   0016BC  0E80               	movlw	128
  5821   0016BE  13ED               	iorwf	(___fldiv@b+2)& (0+255),f,b
  5822   0016C0  0E7F               	movlw	127
  5823   0016C2  13EE               	iorwf	(___fldiv@b+3)& (0+255),f,b
  5824   0016C4                     l4909:
  5825                           
  5826                           ; BSR set to: 0
  5827   0016C4  0101               	movlb	1	; () banked
  5828   0016C6  51A5               	movf	___fldiv@sign& (0+255),w,b
  5829   0016C8  0100               	movlb	0	; () banked
  5830   0016CA  13EE               	iorwf	(___fldiv@b+3)& (0+255),f,b
  5831                           
  5832                           ; BSR set to: 0
  5833   0016CC  C0EB  F0EB         	movff	___fldiv@b,?___fldiv
  5834   0016D0  C0EC  F0EC         	movff	___fldiv@b+1,?___fldiv+1
  5835   0016D4  C0ED  F0ED         	movff	___fldiv@b+2,?___fldiv+2
  5836   0016D8  C0EE  F0EE         	movff	___fldiv@b+3,?___fldiv+3
  5837   0016DC  0012               	return	
  5838   0016DE                     l4915:
  5839                           
  5840                           ; BSR set to: 0
  5841   0016DE  0101               	movlb	1	; () banked
  5842   0016E0  51AC               	movf	___fldiv@bexp& (0+255),w,b
  5843   0016E2  A4D8               	btfss	status,2,c
  5844   0016E4  D00A               	goto	l4923
  5845                           
  5846                           ; BSR set to: 1
  5847                           
  5848                           ; BSR set to: 1
  5849   0016E6  0E00               	movlw	0
  5850   0016E8  0100               	movlb	0	; () banked
  5851   0016EA  6FEB               	movwf	?___fldiv& (0+255),b
  5852   0016EC  0E00               	movlw	0
  5853   0016EE  6FEC               	movwf	(?___fldiv+1)& (0+255),b
  5854   0016F0  0E00               	movlw	0
  5855   0016F2  6FED               	movwf	(?___fldiv+2)& (0+255),b
  5856   0016F4  0E00               	movlw	0
  5857   0016F6  6FEE               	movwf	(?___fldiv+3)& (0+255),b
  5858   0016F8  0012               	return	
  5859   0016FA                     l4923:
  5860                           
  5861                           ; BSR set to: 1
  5862   0016FA  51AD               	movf	___fldiv@aexp& (0+255),w,b
  5863   0016FC  C1AC  F0F3         	movff	___fldiv@bexp,??___fldiv
  5864   001700  0100               	movlb	0	; () banked
  5865   001702  6BF4               	clrf	(??___fldiv+1)& (0+255),b
  5866   001704  5FF3               	subwf	??___fldiv& (0+255),f,b
  5867   001706  0E00               	movlw	0
  5868   001708  5BF4               	subwfb	(??___fldiv+1)& (0+255),f,b
  5869   00170A  0E7F               	movlw	127
  5870   00170C  25F3               	addwf	??___fldiv& (0+255),w,b
  5871   00170E  0101               	movlb	1	; () banked
  5872   001710  6FA6               	movwf	___fldiv@new_exp& (0+255),b
  5873   001712  0E00               	movlw	0
  5874   001714  0100               	movlb	0	; () banked
  5875   001716  21F4               	addwfc	(??___fldiv+1)& (0+255),w,b
  5876   001718  0101               	movlb	1	; () banked
  5877   00171A  6FA7               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5878                           
  5879                           ; BSR set to: 1
  5880   00171C  C0EB  F1A1         	movff	___fldiv@b,___fldiv@rem
  5881   001720  C0EC  F1A2         	movff	___fldiv@b+1,___fldiv@rem+1
  5882   001724  C0ED  F1A3         	movff	___fldiv@b+2,___fldiv@rem+2
  5883   001728  C0EE  F1A4         	movff	___fldiv@b+3,___fldiv@rem+3
  5884                           
  5885                           ; BSR set to: 1
  5886   00172C  0E00               	movlw	0
  5887   00172E  0100               	movlb	0	; () banked
  5888   001730  6FEB               	movwf	___fldiv@b& (0+255),b
  5889   001732  0E00               	movlw	0
  5890   001734  6FEC               	movwf	(___fldiv@b+1)& (0+255),b
  5891   001736  0E00               	movlw	0
  5892   001738  6FED               	movwf	(___fldiv@b+2)& (0+255),b
  5893   00173A  0E00               	movlw	0
  5894   00173C  6FEE               	movwf	(___fldiv@b+3)& (0+255),b
  5895                           
  5896                           ; BSR set to: 0
  5897   00173E  0E00               	movlw	0
  5898   001740  0101               	movlb	1	; () banked
  5899   001742  6FA8               	movwf	___fldiv@grs& (0+255),b
  5900   001744  0E00               	movlw	0
  5901   001746  6FA9               	movwf	(___fldiv@grs+1)& (0+255),b
  5902   001748  0E00               	movlw	0
  5903   00174A  6FAA               	movwf	(___fldiv@grs+2)& (0+255),b
  5904   00174C  0E00               	movlw	0
  5905   00174E  6FAB               	movwf	(___fldiv@grs+3)& (0+255),b
  5906                           
  5907                           ; BSR set to: 1
  5908   001750  0E00               	movlw	0
  5909   001752  6FAD               	movwf	___fldiv@aexp& (0+255),b
  5910   001754  D03D               	goto	l1187
  5911   001756                     l4933:
  5912                           
  5913                           ; BSR set to: 1
  5914   001756  51AD               	movf	___fldiv@aexp& (0+255),w,b
  5915   001758  B4D8               	btfsc	status,2,c
  5916   00175A  D016               	goto	l4941
  5917                           
  5918                           ; BSR set to: 1
  5919   00175C  90D8               	bcf	status,0,c
  5920   00175E  37A1               	rlcf	___fldiv@rem& (0+255),f,b
  5921   001760  37A2               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  5922   001762  37A3               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  5923   001764  37A4               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  5924   001766  0100               	movlb	0	; () banked
  5925   001768  90D8               	bcf	status,0,c
  5926   00176A  37EB               	rlcf	___fldiv@b& (0+255),f,b
  5927   00176C  37EC               	rlcf	(___fldiv@b+1)& (0+255),f,b
  5928   00176E  37ED               	rlcf	(___fldiv@b+2)& (0+255),f,b
  5929   001770  37EE               	rlcf	(___fldiv@b+3)& (0+255),f,b
  5930                           
  5931                           ; BSR set to: 0
  5932   001772  0101               	movlb	1	; () banked
  5933   001774  AFAB               	btfss	(___fldiv@grs+3)& (0+255),7,b
  5934   001776  D002               	goto	l1190
  5935                           
  5936                           ; BSR set to: 1
  5937   001778  0100               	movlb	0	; () banked
  5938   00177A  81EB               	bsf	___fldiv@b& (0+255),0,b
  5939   00177C                     l1190:
  5940   00177C  0101               	movlb	1	; () banked
  5941   00177E  90D8               	bcf	status,0,c
  5942   001780  37A8               	rlcf	___fldiv@grs& (0+255),f,b
  5943   001782  37A9               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  5944   001784  37AA               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  5945   001786  37AB               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  5946   001788                     l4941:
  5947                           
  5948                           ; BSR set to: 1
  5949   001788  0100               	movlb	0	; () banked
  5950   00178A  51EF               	movf	___fldiv@a& (0+255),w,b
  5951   00178C  0101               	movlb	1	; () banked
  5952   00178E  5DA1               	subwf	___fldiv@rem& (0+255),w,b
  5953   001790  0100               	movlb	0	; () banked
  5954   001792  51F0               	movf	(___fldiv@a+1)& (0+255),w,b
  5955   001794  0101               	movlb	1	; () banked
  5956   001796  59A2               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  5957   001798  0100               	movlb	0	; () banked
  5958   00179A  51F1               	movf	(___fldiv@a+2)& (0+255),w,b
  5959   00179C  0101               	movlb	1	; () banked
  5960   00179E  59A3               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  5961   0017A0  0100               	movlb	0	; () banked
  5962   0017A2  51F2               	movf	(___fldiv@a+3)& (0+255),w,b
  5963   0017A4  0101               	movlb	1	; () banked
  5964   0017A6  59A4               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  5965   0017A8  A0D8               	btfss	status,0,c
  5966   0017AA  D011               	goto	l4947
  5967                           
  5968                           ; BSR set to: 1
  5969   0017AC  8DAB               	bsf	(___fldiv@grs+3)& (0+255),6,b
  5970                           
  5971                           ; BSR set to: 1
  5972   0017AE  0100               	movlb	0	; () banked
  5973   0017B0  51EF               	movf	___fldiv@a& (0+255),w,b
  5974   0017B2  0101               	movlb	1	; () banked
  5975   0017B4  5FA1               	subwf	___fldiv@rem& (0+255),f,b
  5976   0017B6  0100               	movlb	0	; () banked
  5977   0017B8  51F0               	movf	(___fldiv@a+1)& (0+255),w,b
  5978   0017BA  0101               	movlb	1	; () banked
  5979   0017BC  5BA2               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  5980   0017BE  0100               	movlb	0	; () banked
  5981   0017C0  51F1               	movf	(___fldiv@a+2)& (0+255),w,b
  5982   0017C2  0101               	movlb	1	; () banked
  5983   0017C4  5BA3               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  5984   0017C6  0100               	movlb	0	; () banked
  5985   0017C8  51F2               	movf	(___fldiv@a+3)& (0+255),w,b
  5986   0017CA  0101               	movlb	1	; () banked
  5987   0017CC  5BA4               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  5988   0017CE                     l4947:
  5989                           
  5990                           ; BSR set to: 1
  5991   0017CE  2BAD               	incf	___fldiv@aexp& (0+255),f,b
  5992   0017D0                     l1187:
  5993                           
  5994                           ; BSR set to: 1
  5995   0017D0  0E19               	movlw	25
  5996   0017D2  65AD               	cpfsgt	___fldiv@aexp& (0+255),b
  5997   0017D4  D7C0               	goto	l4933
  5998                           
  5999                           ; BSR set to: 1
  6000   0017D6  51A1               	movf	___fldiv@rem& (0+255),w,b
  6001   0017D8  11A2               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  6002   0017DA  11A3               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  6003   0017DC  11A4               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  6004   0017DE  B4D8               	btfsc	status,2,c
  6005   0017E0  D015               	goto	l4959
  6006                           
  6007                           ; BSR set to: 1
  6008   0017E2  81A8               	bsf	___fldiv@grs& (0+255),0,b
  6009   0017E4  D013               	goto	l4959
  6010   0017E6                     l4953:
  6011                           
  6012                           ; BSR set to: 0
  6013   0017E6  90D8               	bcf	status,0,c
  6014   0017E8  37EB               	rlcf	___fldiv@b& (0+255),f,b
  6015   0017EA  37EC               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6016   0017EC  37ED               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6017   0017EE  37EE               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6018                           
  6019                           ; BSR set to: 0
  6020   0017F0  0101               	movlb	1	; () banked
  6021   0017F2  AFAB               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6022   0017F4  D002               	goto	l1196
  6023                           
  6024                           ; BSR set to: 1
  6025   0017F6  0100               	movlb	0	; () banked
  6026   0017F8  81EB               	bsf	___fldiv@b& (0+255),0,b
  6027   0017FA                     l1196:
  6028   0017FA  0101               	movlb	1	; () banked
  6029   0017FC  90D8               	bcf	status,0,c
  6030   0017FE  37A8               	rlcf	___fldiv@grs& (0+255),f,b
  6031   001800  37A9               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6032   001802  37AA               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6033   001804  37AB               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6034   001806  07A6               	decf	___fldiv@new_exp& (0+255),f,b
  6035   001808  A0D8               	btfss	status,0,c
  6036   00180A  07A7               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  6037   00180C                     l4959:
  6038                           
  6039                           ; BSR set to: 1
  6040   00180C  0100               	movlb	0	; () banked
  6041   00180E  AFED               	btfss	(___fldiv@b+2)& (0+255),7,b
  6042   001810  D7EA               	goto	l4953
  6043                           
  6044                           ; BSR set to: 0
  6045   001812  0E00               	movlw	0
  6046   001814  0101               	movlb	1	; () banked
  6047   001816  6FAD               	movwf	___fldiv@aexp& (0+255),b
  6048                           
  6049                           ; BSR set to: 1
  6050   001818  AFAB               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6051   00181A  D01F               	goto	l1198
  6052                           
  6053                           ; BSR set to: 1
  6054   00181C  0EFF               	movlw	255
  6055   00181E  15A8               	andwf	___fldiv@grs& (0+255),w,b
  6056   001820  0100               	movlb	0	; () banked
  6057   001822  6FF3               	movwf	??___fldiv& (0+255),b
  6058   001824  0EFF               	movlw	255
  6059   001826  0101               	movlb	1	; () banked
  6060   001828  15A9               	andwf	(___fldiv@grs+1)& (0+255),w,b
  6061   00182A  0100               	movlb	0	; () banked
  6062   00182C  6FF4               	movwf	(??___fldiv+1)& (0+255),b
  6063   00182E  0EFF               	movlw	255
  6064   001830  0101               	movlb	1	; () banked
  6065   001832  15AA               	andwf	(___fldiv@grs+2)& (0+255),w,b
  6066   001834  0100               	movlb	0	; () banked
  6067   001836  6FF5               	movwf	(??___fldiv+2)& (0+255),b
  6068   001838  0E7F               	movlw	127
  6069   00183A  0101               	movlb	1	; () banked
  6070   00183C  15AB               	andwf	(___fldiv@grs+3)& (0+255),w,b
  6071   00183E  0100               	movlb	0	; () banked
  6072   001840  6FF6               	movwf	(??___fldiv+3)& (0+255),b
  6073   001842  51F3               	movf	??___fldiv& (0+255),w,b
  6074   001844  11F4               	iorwf	(??___fldiv+1)& (0+255),w,b
  6075   001846  11F5               	iorwf	(??___fldiv+2)& (0+255),w,b
  6076   001848  11F6               	iorwf	(??___fldiv+3)& (0+255),w,b
  6077   00184A  B4D8               	btfsc	status,2,c
  6078   00184C  D004               	goto	l1199
  6079   00184E                     u5020:
  6080                           
  6081                           ; BSR set to: 0
  6082   00184E  0E01               	movlw	1
  6083   001850  0101               	movlb	1	; () banked
  6084   001852  6FAD               	movwf	___fldiv@aexp& (0+255),b
  6085   001854  D002               	goto	l1198
  6086   001856                     l1199:
  6087                           
  6088                           ; BSR set to: 0
  6089   001856  B1EB               	btfsc	___fldiv@b& (0+255),0,b
  6090   001858  D7FA               	goto	u5020
  6091   00185A                     l1198:
  6092   00185A  0101               	movlb	1	; () banked
  6093   00185C  51AD               	movf	___fldiv@aexp& (0+255),w,b
  6094   00185E  B4D8               	btfsc	status,2,c
  6095   001860  D021               	goto	l4979
  6096                           
  6097                           ; BSR set to: 1
  6098   001862  0E01               	movlw	1
  6099   001864  0100               	movlb	0	; () banked
  6100   001866  27EB               	addwf	___fldiv@b& (0+255),f,b
  6101   001868  0E00               	movlw	0
  6102   00186A  23EC               	addwfc	(___fldiv@b+1)& (0+255),f,b
  6103   00186C  23ED               	addwfc	(___fldiv@b+2)& (0+255),f,b
  6104   00186E  23EE               	addwfc	(___fldiv@b+3)& (0+255),f,b
  6105                           
  6106                           ; BSR set to: 0
  6107   001870  A1EE               	btfss	(___fldiv@b+3)& (0+255),0,b
  6108   001872  D018               	goto	l4979
  6109                           
  6110                           ; BSR set to: 0
  6111   001874  C0EB  F0F3         	movff	___fldiv@b,??___fldiv
  6112   001878  C0EC  F0F4         	movff	___fldiv@b+1,??___fldiv+1
  6113   00187C  C0ED  F0F5         	movff	___fldiv@b+2,??___fldiv+2
  6114   001880  C0EE  F0F6         	movff	___fldiv@b+3,??___fldiv+3
  6115   001884  35F6               	rlcf	(??___fldiv+3)& (0+255),w,b
  6116   001886  33F6               	rrcf	(??___fldiv+3)& (0+255),f,b
  6117   001888  33F5               	rrcf	(??___fldiv+2)& (0+255),f,b
  6118   00188A  33F4               	rrcf	(??___fldiv+1)& (0+255),f,b
  6119   00188C  33F3               	rrcf	??___fldiv& (0+255),f,b
  6120   00188E  C0F3  F0EB         	movff	??___fldiv,___fldiv@b
  6121   001892  C0F4  F0EC         	movff	??___fldiv+1,___fldiv@b+1
  6122   001896  C0F5  F0ED         	movff	??___fldiv+2,___fldiv@b+2
  6123   00189A  C0F6  F0EE         	movff	??___fldiv+3,___fldiv@b+3
  6124                           
  6125                           ; BSR set to: 0
  6126   00189E  0101               	movlb	1	; () banked
  6127   0018A0  4BA6               	infsnz	___fldiv@new_exp& (0+255),f,b
  6128   0018A2  2BA7               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  6129   0018A4                     l4979:
  6130   0018A4  0101               	movlb	1	; () banked
  6131   0018A6  BFA7               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6132   0018A8  D011               	goto	l4983
  6133   0018AA  51A7               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6134   0018AC  E103               	bnz	u5060
  6135   0018AE  29A6               	incf	___fldiv@new_exp& (0+255),w,b
  6136   0018B0  A0D8               	btfss	status,0,c
  6137   0018B2  D00C               	goto	l4983
  6138   0018B4                     u5060:
  6139                           
  6140                           ; BSR set to: 1
  6141   0018B4  0E00               	movlw	0
  6142   0018B6  6FA7               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6143   0018B8  69A6               	setf	___fldiv@new_exp& (0+255),b
  6144   0018BA  0E00               	movlw	0
  6145   0018BC  0100               	movlb	0	; () banked
  6146   0018BE  6FEB               	movwf	___fldiv@b& (0+255),b
  6147   0018C0  0E00               	movlw	0
  6148   0018C2  6FEC               	movwf	(___fldiv@b+1)& (0+255),b
  6149   0018C4  0E00               	movlw	0
  6150   0018C6  6FED               	movwf	(___fldiv@b+2)& (0+255),b
  6151   0018C8  0E00               	movlw	0
  6152   0018CA  6FEE               	movwf	(___fldiv@b+3)& (0+255),b
  6153   0018CC                     l4983:
  6154   0018CC  0101               	movlb	1	; () banked
  6155   0018CE  BFA7               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6156   0018D0  D005               	goto	u5070
  6157   0018D2  51A7               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6158   0018D4  E113               	bnz	l4987
  6159   0018D6  05A6               	decf	___fldiv@new_exp& (0+255),w,b
  6160   0018D8  B0D8               	btfsc	status,0,c
  6161   0018DA  D010               	goto	l4987
  6162   0018DC                     u5070:
  6163                           
  6164                           ; BSR set to: 1
  6165   0018DC  0E00               	movlw	0
  6166   0018DE  6FA7               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6167   0018E0  0E00               	movlw	0
  6168   0018E2  6FA6               	movwf	___fldiv@new_exp& (0+255),b
  6169   0018E4  0E00               	movlw	0
  6170   0018E6  0100               	movlb	0	; () banked
  6171   0018E8  6FEB               	movwf	___fldiv@b& (0+255),b
  6172   0018EA  0E00               	movlw	0
  6173   0018EC  6FEC               	movwf	(___fldiv@b+1)& (0+255),b
  6174   0018EE  0E00               	movlw	0
  6175   0018F0  6FED               	movwf	(___fldiv@b+2)& (0+255),b
  6176   0018F2  0E00               	movlw	0
  6177   0018F4  6FEE               	movwf	(___fldiv@b+3)& (0+255),b
  6178   0018F6  0E00               	movlw	0
  6179   0018F8  0101               	movlb	1	; () banked
  6180   0018FA  6FA5               	movwf	___fldiv@sign& (0+255),b
  6181   0018FC                     l4987:
  6182                           
  6183                           ; BSR set to: 1
  6184   0018FC  C1A6  F1AC         	movff	___fldiv@new_exp,___fldiv@bexp
  6185                           
  6186                           ; BSR set to: 1
  6187   001900  A1AC               	btfss	___fldiv@bexp& (0+255),0,b
  6188   001902  D003               	goto	l4993
  6189                           
  6190                           ; BSR set to: 1
  6191   001904  0100               	movlb	0	; () banked
  6192   001906  8FED               	bsf	(___fldiv@b+2)& (0+255),7,b
  6193   001908  D002               	goto	l4995
  6194   00190A                     l4993:
  6195                           
  6196                           ; BSR set to: 1
  6197   00190A  0100               	movlb	0	; () banked
  6198   00190C  9FED               	bcf	(___fldiv@b+2)& (0+255),7,b
  6199   00190E                     l4995:
  6200                           
  6201                           ; BSR set to: 0
  6202   00190E  0101               	movlb	1	; () banked
  6203   001910  90D8               	bcf	status,0,c
  6204   001912  31AC               	rrcf	___fldiv@bexp& (0+255),w,b
  6205   001914  0100               	movlb	0	; () banked
  6206   001916  6FEE               	movwf	(___fldiv@b+3)& (0+255),b
  6207   001918  D6D5               	goto	l4909
  6208   00191A                     __end_of___fldiv:
  6209                           	callstack 0
  6210                           
  6211 ;; *************** function _UART_Enviar_Cadena *****************
  6212 ;; Defined at:
  6213 ;;		line 36 in file "serial.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;  cadena          2   31[COMRAM] PTR const unsigned char 
  6216 ;;		 -> STR_3(2), datos_sensores_afm_pc(60), STR_2(2), STR_1(2), 
  6217 ;; Auto vars:     Size  Location     Type
  6218 ;;		None
  6219 ;; Return value:  Size  Location     Type
  6220 ;;                  1    wreg      void 
  6221 ;; Registers used:
  6222 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6223 ;; Tracked objects:
  6224 ;;		On entry : 0/1
  6225 ;;		On exit  : 0/0
  6226 ;;		Unchanged: 0/0
  6227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6228 ;;      Params:         2       0       0       0       0       0       0       0       0
  6229 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6230 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6231 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6232 ;;Total ram usage:        2 bytes
  6233 ;; Hardware stack levels used: 1
  6234 ;; Hardware stack levels required when called: 5
  6235 ;; This function calls:
  6236 ;;		_UART_Enviar_Caracter
  6237 ;; This function is called by:
  6238 ;;		_main
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           	psect	text22
  6243   002454                     __ptext22:
  6244                           	callstack 0
  6245   002454                     _UART_Enviar_Cadena:
  6246                           	callstack 25
  6247                           
  6248                           ;serial.c: 38:     while (*cadena) {
  6249                           
  6250                           ; BSR set to: 0
  6251                           ;incstack = 0
  6252   002454  D014               	goto	l4809
  6253   002456                     l4805:
  6254                           
  6255                           ;serial.c: 40:         UART_Enviar_Caracter(*cadena);
  6256   002456  C020  FFF6         	movff	UART_Enviar_Cadena@cadena,tblptrl
  6257   00245A  C021  FFF7         	movff	UART_Enviar_Cadena@cadena+1,tblptrh
  6258   00245E  6AF8               	clrf	tblptru,c
  6259   002460  0E07               	movlw	(high __ramtop+-1)
  6260   002462  64F7               	cpfsgt	tblptrh,c
  6261   002464  D003               	bra	u4707
  6262   002466  0008               	tblrd		*
  6263   002468  50F5               	movf	tablat,w,c
  6264   00246A  D005               	bra	u4700
  6265   00246C                     u4707:
  6266   00246C  CFF6 FFE1          	movff	tblptrl,fsr1l
  6267   002470  CFF7 FFE2          	movff	tblptrh,fsr1h
  6268   002474  50E7               	movf	indf1,w,c
  6269   002476                     u4700:
  6270   002476  ECFD  F013         	call	_UART_Enviar_Caracter
  6271                           
  6272                           ;serial.c: 42:         cadena++;
  6273   00247A  4A20               	infsnz	UART_Enviar_Cadena@cadena^0,f,c
  6274   00247C  2A21               	incf	(UART_Enviar_Cadena@cadena+1)^0,f,c
  6275   00247E                     l4809:
  6276                           
  6277                           ;serial.c: 38:     while (*cadena) {
  6278   00247E  C020  FFF6         	movff	UART_Enviar_Cadena@cadena,tblptrl
  6279   002482  C021  FFF7         	movff	UART_Enviar_Cadena@cadena+1,tblptrh
  6280   002486  6AF8               	clrf	tblptru,c
  6281   002488  0E07               	movlw	(high __ramtop+-1)
  6282   00248A  64F7               	cpfsgt	tblptrh,c
  6283   00248C  D003               	bra	u4717
  6284   00248E  0008               	tblrd		*
  6285   002490  50F5               	movf	tablat,w,c
  6286   002492  D005               	bra	u4710
  6287   002494                     u4717:
  6288   002494  CFF6 FFE1          	movff	tblptrl,fsr1l
  6289   002498  CFF7 FFE2          	movff	tblptrh,fsr1h
  6290   00249C  50E7               	movf	indf1,w,c
  6291   00249E                     u4710:
  6292   00249E  0900               	iorlw	0
  6293   0024A0  B4D8               	btfsc	status,2,c
  6294   0024A2  0012               	return	
  6295   0024A4  D7D8               	goto	l4805
  6296   0024A6                     __end_of_UART_Enviar_Cadena:
  6297                           	callstack 0
  6298                           
  6299 ;; *************** function _UART_Enviar_Caracter *****************
  6300 ;; Defined at:
  6301 ;;		line 27 in file "serial.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;  dato            1    wreg     unsigned char 
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;  dato            1   30[COMRAM] unsigned char 
  6306 ;; Return value:  Size  Location     Type
  6307 ;;                  1    wreg      void 
  6308 ;; Registers used:
  6309 ;;		wreg
  6310 ;; Tracked objects:
  6311 ;;		On entry : 0/1
  6312 ;;		On exit  : 0/0
  6313 ;;		Unchanged: 0/0
  6314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6315 ;;      Params:         0       0       0       0       0       0       0       0       0
  6316 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6317 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6318 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6319 ;;Total ram usage:        1 bytes
  6320 ;; Hardware stack levels used: 1
  6321 ;; Hardware stack levels required when called: 4
  6322 ;; This function calls:
  6323 ;;		Nothing
  6324 ;; This function is called by:
  6325 ;;		_main
  6326 ;;		_UART_Enviar_Cadena
  6327 ;; This function uses a non-reentrant model
  6328 ;;
  6329                           
  6330                           	psect	text23
  6331   0027FA                     __ptext23:
  6332                           	callstack 0
  6333   0027FA                     _UART_Enviar_Caracter:
  6334                           	callstack 26
  6335                           
  6336                           ;incstack = 0
  6337                           ;UART_Enviar_Caracter@dato stored from wreg
  6338   0027FA  6E1F               	movwf	UART_Enviar_Caracter@dato^0,c
  6339   0027FC                     
  6340                           ;serial.c: 30:     while (!PIR1bits.TXIF);
  6341   0027FC  A89E               	btfss	158,4,c	;volatile
  6342   0027FE  D7FE               	goto	l4683
  6343                           
  6344                           ;serial.c: 32:     TXREG = dato;
  6345   002800  C01F  FFAD         	movff	UART_Enviar_Caracter@dato,4013	;volatile
  6346   002804  0012               	return		;funcret
  6347   002806                     __end_of_UART_Enviar_Caracter:
  6348                           	callstack 0
  6349                           
  6350 ;; *************** function _SPI_Recibir_Caracter *****************
  6351 ;; Defined at:
  6352 ;;		line 50 in file "spi.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;		None
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;		None
  6357 ;; Return value:  Size  Location     Type
  6358 ;;                  1    wreg      unsigned char 
  6359 ;; Registers used:
  6360 ;;		wreg, status,2
  6361 ;; Tracked objects:
  6362 ;;		On entry : 3F/0
  6363 ;;		On exit  : 3F/0
  6364 ;;		Unchanged: 3F/0
  6365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6366 ;;      Params:         0       0       0       0       0       0       0       0       0
  6367 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6368 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6369 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6370 ;;Total ram usage:        0 bytes
  6371 ;; Hardware stack levels used: 1
  6372 ;; Hardware stack levels required when called: 4
  6373 ;; This function calls:
  6374 ;;		Nothing
  6375 ;; This function is called by:
  6376 ;;		_main
  6377 ;; This function uses a non-reentrant model
  6378 ;;
  6379                           
  6380                           	psect	text24
  6381   002806                     __ptext24:
  6382                           	callstack 0
  6383   002806                     _SPI_Recibir_Caracter:
  6384                           	callstack 26
  6385                           
  6386                           ; BSR set to: 0
  6387                           ;spi.c: 51:     SSPBUF = 0xFF;
  6388                           
  6389                           ;incstack = 0
  6390   002806  68C9               	setf	201,c	;volatile
  6391   002808                     l578:
  6392                           
  6393                           ; BSR set to: 0
  6394   002808  A0C7               	btfss	199,0,c	;volatile
  6395   00280A  D7FE               	goto	l578
  6396                           
  6397                           ; BSR set to: 0
  6398                           ;spi.c: 53:     return SSPBUF;
  6399   00280C  50C9               	movf	201,w,c	;volatile
  6400                           
  6401                           ; BSR set to: 0
  6402   00280E  0012               	return		;funcret
  6403   002810                     __end_of_SPI_Recibir_Caracter:
  6404                           	callstack 0
  6405                           
  6406 ;; *************** function _SPI_Enviar_Caracter *****************
  6407 ;; Defined at:
  6408 ;;		line 43 in file "spi.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;  spi_tx          1    wreg     unsigned char 
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;  spi_tx          1   30[COMRAM] unsigned char 
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  1    wreg      unsigned char 
  6415 ;; Registers used:
  6416 ;;		wreg
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6422 ;;      Params:         0       0       0       0       0       0       0       0       0
  6423 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6424 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6425 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6426 ;;Total ram usage:        1 bytes
  6427 ;; Hardware stack levels used: 1
  6428 ;; Hardware stack levels required when called: 4
  6429 ;; This function calls:
  6430 ;;		Nothing
  6431 ;; This function is called by:
  6432 ;;		_main
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text25
  6437   0027EC                     __ptext25:
  6438                           	callstack 0
  6439   0027EC                     _SPI_Enviar_Caracter:
  6440                           	callstack 26
  6441                           
  6442                           ; BSR set to: 0
  6443                           ;incstack = 0
  6444                           ;SPI_Enviar_Caracter@spi_tx stored from wreg
  6445   0027EC  6E1F               	movwf	SPI_Enviar_Caracter@spi_tx^0,c
  6446                           
  6447                           ;spi.c: 44:     SSPBUF = spi_tx;
  6448   0027EE  C01F  FFC9         	movff	SPI_Enviar_Caracter@spi_tx,4041	;volatile
  6449   0027F2                     l572:
  6450   0027F2  A0C7               	btfss	199,0,c	;volatile
  6451   0027F4  D7FE               	goto	l572
  6452                           
  6453                           ;spi.c: 46:     return SSPBUF;;	Return value of _SPI_Enviar_Caracter is never used
  6454   0027F6  50C9               	movf	201,w,c	;volatile
  6455   0027F8  0012               	return		;funcret
  6456   0027FA                     __end_of_SPI_Enviar_Caracter:
  6457                           	callstack 0
  6458                           
  6459 ;; *************** function _Leer_ADC *****************
  6460 ;; Defined at:
  6461 ;;		line 35 in file "adc.c"
  6462 ;; Parameters:    Size  Location     Type
  6463 ;;		None
  6464 ;; Auto vars:     Size  Location     Type
  6465 ;;		None
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  2   30[COMRAM] unsigned short 
  6468 ;; Registers used:
  6469 ;;		wreg, status,2
  6470 ;; Tracked objects:
  6471 ;;		On entry : 3F/0
  6472 ;;		On exit  : 3F/0
  6473 ;;		Unchanged: 3F/0
  6474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6475 ;;      Params:         2       0       0       0       0       0       0       0       0
  6476 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6477 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6478 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6479 ;;Total ram usage:        4 bytes
  6480 ;; Hardware stack levels used: 1
  6481 ;; Hardware stack levels required when called: 4
  6482 ;; This function calls:
  6483 ;;		Nothing
  6484 ;; This function is called by:
  6485 ;;		_main
  6486 ;; This function uses a non-reentrant model
  6487 ;;
  6488                           
  6489                           	psect	text26
  6490   0027B2                     __ptext26:
  6491                           	callstack 0
  6492   0027B2                     _Leer_ADC:
  6493                           	callstack 26
  6494                           
  6495                           ; BSR set to: 0
  6496                           ;adc.c: 36:     ADCON0bits.GO_DONE = 1;
  6497                           
  6498                           ;incstack = 0
  6499   0027B2  82C2               	bsf	194,1,c	;volatile
  6500   0027B4                     l597:
  6501                           
  6502                           ; BSR set to: 0
  6503   0027B4  B2C2               	btfsc	194,1,c	;volatile
  6504   0027B6  D7FE               	goto	l597
  6505                           
  6506                           ; BSR set to: 0
  6507                           ;adc.c: 38:     return (uint16_t)(ADRESH << 8) | ADRESL;
  6508   0027B8  50C4               	movf	196,w,c	;volatile
  6509   0027BA  6E21               	movwf	??_Leer_ADC^0,c
  6510   0027BC  50C3               	movf	195,w,c	;volatile
  6511   0027BE  6E1F               	movwf	?_Leer_ADC^0,c
  6512   0027C0  C021  F020         	movff	??_Leer_ADC,?_Leer_ADC+1
  6513                           
  6514                           ; BSR set to: 0
  6515   0027C4  0012               	return		;funcret
  6516   0027C6                     __end_of_Leer_ADC:
  6517                           	callstack 0
  6518                           
  6519 ;; *************** function _Lectura_Numero_Est *****************
  6520 ;; Defined at:
  6521 ;;		line 13 in file "pin_manager.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;		None
  6524 ;; Auto vars:     Size  Location     Type
  6525 ;;		None
  6526 ;; Return value:  Size  Location     Type
  6527 ;;                  1    wreg      unsigned char 
  6528 ;; Registers used:
  6529 ;;		wreg, status,2, status,0, prodl, prodh
  6530 ;; Tracked objects:
  6531 ;;		On entry : 3F/0
  6532 ;;		On exit  : 0/0
  6533 ;;		Unchanged: 0/0
  6534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6535 ;;      Params:         0       0       0       0       0       0       0       0       0
  6536 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6537 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6538 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6539 ;;Total ram usage:        3 bytes
  6540 ;; Hardware stack levels used: 1
  6541 ;; Hardware stack levels required when called: 4
  6542 ;; This function calls:
  6543 ;;		Nothing
  6544 ;; This function is called by:
  6545 ;;		_main
  6546 ;; This function uses a non-reentrant model
  6547 ;;
  6548                           
  6549                           	psect	text27
  6550   00257A                     __ptext27:
  6551                           	callstack 0
  6552   00257A                     _Lectura_Numero_Est:
  6553                           	callstack 26
  6554                           
  6555                           ; BSR set to: 0
  6556                           ;pin_manager.c: 14:     return (PORTCbits.RC0*1 + PORTCbits.RC1*2 + PORTCbits.RC2*4 + PO
      +                          RTCbits.RC5*8);
  6557                           
  6558                           ; BSR set to: 0
  6559                           ;incstack = 0
  6560   00257A  A082               	btfss	130,0,c	;volatile
  6561   00257C  D003               	goto	u4750
  6562   00257E  6A1F               	clrf	??_Lectura_Numero_Est^0,c
  6563   002580  2A1F               	incf	??_Lectura_Numero_Est^0,f,c
  6564   002582  D001               	goto	u4758
  6565   002584                     u4750:
  6566   002584  6A1F               	clrf	??_Lectura_Numero_Est^0,c
  6567   002586                     u4758:
  6568   002586  A282               	btfss	130,1,c	;volatile
  6569   002588  D002               	goto	u4760
  6570   00258A  0E01               	movlw	1
  6571   00258C  D001               	goto	u4766
  6572   00258E                     u4760:
  6573   00258E  0E00               	movlw	0
  6574   002590                     u4766:
  6575   002590  0D02               	mullw	2
  6576   002592  CFF3 F020          	movff	prodl,??_Lectura_Numero_Est+1
  6577   002596  A482               	btfss	130,2,c	;volatile
  6578   002598  D002               	goto	u4770
  6579   00259A  0E01               	movlw	1
  6580   00259C  D001               	goto	u4776
  6581   00259E                     u4770:
  6582   00259E  0E00               	movlw	0
  6583   0025A0                     u4776:
  6584   0025A0  0D04               	mullw	4
  6585   0025A2  CFF3 F021          	movff	prodl,??_Lectura_Numero_Est+2
  6586   0025A6  AA82               	btfss	130,5,c	;volatile
  6587   0025A8  D002               	goto	u4780
  6588   0025AA  0E01               	movlw	1
  6589   0025AC  D001               	goto	u4786
  6590   0025AE                     u4780:
  6591   0025AE  0E00               	movlw	0
  6592   0025B0                     u4786:
  6593   0025B0  0D08               	mullw	8
  6594   0025B2  50F3               	movf	243,w,c
  6595   0025B4  2421               	addwf	(??_Lectura_Numero_Est+2)^0,w,c
  6596   0025B6  2420               	addwf	(??_Lectura_Numero_Est+1)^0,w,c
  6597   0025B8  241F               	addwf	??_Lectura_Numero_Est^0,w,c
  6598   0025BA  0012               	return		;funcret
  6599   0025BC                     __end_of_Lectura_Numero_Est:
  6600                           	callstack 0
  6601                           
  6602 ;; *************** function _Lectura_Frecuencia_tx *****************
  6603 ;; Defined at:
  6604 ;;		line 8 in file "pin_manager.c"
  6605 ;; Parameters:    Size  Location     Type
  6606 ;;		None
  6607 ;; Auto vars:     Size  Location     Type
  6608 ;;		None
  6609 ;; Return value:  Size  Location     Type
  6610 ;;                  1    wreg      unsigned char 
  6611 ;; Registers used:
  6612 ;;		wreg, status,2, status,0, prodl, prodh
  6613 ;; Tracked objects:
  6614 ;;		On entry : 3F/0
  6615 ;;		On exit  : 0/0
  6616 ;;		Unchanged: 0/0
  6617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6618 ;;      Params:         0       0       0       0       0       0       0       0       0
  6619 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6620 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6621 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6622 ;;Total ram usage:        3 bytes
  6623 ;; Hardware stack levels used: 1
  6624 ;; Hardware stack levels required when called: 4
  6625 ;; This function calls:
  6626 ;;		Nothing
  6627 ;; This function is called by:
  6628 ;;		_main
  6629 ;; This function uses a non-reentrant model
  6630 ;;
  6631                           
  6632                           	psect	text28
  6633   0025BC                     __ptext28:
  6634                           	callstack 0
  6635   0025BC                     _Lectura_Frecuencia_tx:
  6636                           	callstack 26
  6637                           
  6638                           ; BSR set to: 0
  6639                           ;pin_manager.c: 9:     return (PORTCbits.RC4*1 + PORTAbits.RA1*2 + PORTAbits.RA4*4 + POR
      +                          TAbits.RA5*8);
  6640                           
  6641                           ;incstack = 0
  6642   0025BC  A882               	btfss	130,4,c	;volatile
  6643   0025BE  D003               	goto	u4790
  6644   0025C0  6A1F               	clrf	??_Lectura_Frecuencia_tx^0,c
  6645   0025C2  2A1F               	incf	??_Lectura_Frecuencia_tx^0,f,c
  6646   0025C4  D001               	goto	u4798
  6647   0025C6                     u4790:
  6648   0025C6  6A1F               	clrf	??_Lectura_Frecuencia_tx^0,c
  6649   0025C8                     u4798:
  6650   0025C8  A280               	btfss	128,1,c	;volatile
  6651   0025CA  D002               	goto	u4800
  6652   0025CC  0E01               	movlw	1
  6653   0025CE  D001               	goto	u4806
  6654   0025D0                     u4800:
  6655   0025D0  0E00               	movlw	0
  6656   0025D2                     u4806:
  6657   0025D2  0D02               	mullw	2
  6658   0025D4  CFF3 F020          	movff	prodl,??_Lectura_Frecuencia_tx+1
  6659   0025D8  A880               	btfss	128,4,c	;volatile
  6660   0025DA  D002               	goto	u4810
  6661   0025DC  0E01               	movlw	1
  6662   0025DE  D001               	goto	u4816
  6663   0025E0                     u4810:
  6664   0025E0  0E00               	movlw	0
  6665   0025E2                     u4816:
  6666   0025E2  0D04               	mullw	4
  6667   0025E4  CFF3 F021          	movff	prodl,??_Lectura_Frecuencia_tx+2
  6668   0025E8  AA80               	btfss	128,5,c	;volatile
  6669   0025EA  D002               	goto	u4820
  6670   0025EC  0E01               	movlw	1
  6671   0025EE  D001               	goto	u4826
  6672   0025F0                     u4820:
  6673   0025F0  0E00               	movlw	0
  6674   0025F2                     u4826:
  6675   0025F2  0D08               	mullw	8
  6676   0025F4  50F3               	movf	243,w,c
  6677   0025F6  2421               	addwf	(??_Lectura_Frecuencia_tx+2)^0,w,c
  6678   0025F8  2420               	addwf	(??_Lectura_Frecuencia_tx+1)^0,w,c
  6679   0025FA  241F               	addwf	??_Lectura_Frecuencia_tx^0,w,c
  6680   0025FC  0012               	return		;funcret
  6681   0025FE                     __end_of_Lectura_Frecuencia_tx:
  6682                           	callstack 0
  6683                           
  6684 ;; *************** function _Inicializar_Sistema *****************
  6685 ;; Defined at:
  6686 ;;		line 7 in file "mcc.c"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;		None
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;		None
  6691 ;; Return value:  Size  Location     Type
  6692 ;;                  1    wreg      void 
  6693 ;; Registers used:
  6694 ;;		wreg, status,2, cstack
  6695 ;; Tracked objects:
  6696 ;;		On entry : 0/0
  6697 ;;		On exit  : 3F/0
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6700 ;;      Params:         0       0       0       0       0       0       0       0       0
  6701 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6702 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6703 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6704 ;;Total ram usage:        0 bytes
  6705 ;; Hardware stack levels used: 1
  6706 ;; Hardware stack levels required when called: 5
  6707 ;; This function calls:
  6708 ;;		_Asignar_Minutos_Timer0
  6709 ;;		_Configurar_ADC
  6710 ;;		_Configurar_SPI
  6711 ;;		_Configurar_Timer0
  6712 ;;		_Configurar_Timer2
  6713 ;;		_Inicializar_Administrador_PIN
  6714 ;;		_Inicializar_Oscilador
  6715 ;;		_Inicializar_UART
  6716 ;; This function is called by:
  6717 ;;		_main
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721                           	psect	text29
  6722   00263C                     __ptext29:
  6723                           	callstack 0
  6724   00263C                     _Inicializar_Sistema:
  6725                           	callstack 25
  6726                           
  6727                           ;mcc.c: 10:     Inicializar_Administrador_PIN();
  6728                           
  6729                           ;incstack = 0
  6730   00263C  EC86  F013         	call	_Inicializar_Administrador_PIN	;wreg free
  6731                           
  6732                           ;mcc.c: 13:     Inicializar_Oscilador();
  6733   002640  EC08  F014         	call	_Inicializar_Oscilador	;wreg free
  6734                           
  6735                           ;mcc.c: 20:     Configurar_Timer0();
  6736   002644  ECAD  F013         	call	_Configurar_Timer0	;wreg free
  6737                           
  6738                           ;mcc.c: 23:     Asignar_Minutos_Timer0(1);
  6739   002648  0E00               	movlw	0
  6740   00264A  0100               	movlb	0	; () banked
  6741   00264C  6FD2               	movwf	Asignar_Minutos_Timer0@minutos& (0+255),b
  6742   00264E  0E00               	movlw	0
  6743   002650  6FD3               	movwf	(Asignar_Minutos_Timer0@minutos+1)& (0+255),b
  6744   002652  0E80               	movlw	128
  6745   002654  6FD4               	movwf	(Asignar_Minutos_Timer0@minutos+2)& (0+255),b
  6746   002656  0E3F               	movlw	63
  6747   002658  6FD5               	movwf	(Asignar_Minutos_Timer0@minutos+3)& (0+255),b
  6748   00265A  ECED  F013         	call	_Asignar_Minutos_Timer0	;wreg free
  6749                           
  6750                           ; BSR set to: 0
  6751                           ;mcc.c: 26:     Configurar_Timer2();
  6752   00265E  ECBD  F013         	call	_Configurar_Timer2	;wreg free
  6753                           
  6754                           ; BSR set to: 0
  6755                           ;mcc.c: 29:     Inicializar_UART();
  6756   002662  ECE3  F013         	call	_Inicializar_UART	;wreg free
  6757                           
  6758                           ; BSR set to: 0
  6759                           ;mcc.c: 32:     Configurar_ADC();
  6760   002666  EC70  F013         	call	_Configurar_ADC	;wreg free
  6761                           
  6762                           ; BSR set to: 0
  6763                           ;mcc.c: 35:     Configurar_SPI();
  6764   00266A  ECCC  F013         	call	_Configurar_SPI	;wreg free
  6765                           
  6766                           ; BSR set to: 0
  6767                           ;mcc.c: 38:     RCONbits.IPEN = 1;
  6768   00266E  8ED0               	bsf	208,7,c	;volatile
  6769                           
  6770                           ; BSR set to: 0
  6771                           ;mcc.c: 39:     INTCONbits.GIEH = 1;
  6772   002670  8EF2               	bsf	242,7,c	;volatile
  6773                           
  6774                           ; BSR set to: 0
  6775                           ;mcc.c: 40:     INTCONbits.GIEL = 1;
  6776   002672  8CF2               	bsf	242,6,c	;volatile
  6777                           
  6778                           ; BSR set to: 0
  6779   002674  0012               	return		;funcret
  6780   002676                     __end_of_Inicializar_Sistema:
  6781                           	callstack 0
  6782                           
  6783 ;; *************** function _Inicializar_UART *****************
  6784 ;; Defined at:
  6785 ;;		line 5 in file "serial.c"
  6786 ;; Parameters:    Size  Location     Type
  6787 ;;		None
  6788 ;; Auto vars:     Size  Location     Type
  6789 ;;		None
  6790 ;; Return value:  Size  Location     Type
  6791 ;;                  1    wreg      void 
  6792 ;; Registers used:
  6793 ;;		wreg, status,2
  6794 ;; Tracked objects:
  6795 ;;		On entry : 3F/0
  6796 ;;		On exit  : 3F/0
  6797 ;;		Unchanged: 3F/0
  6798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6799 ;;      Params:         0       0       0       0       0       0       0       0       0
  6800 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6801 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6802 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6803 ;;Total ram usage:        0 bytes
  6804 ;; Hardware stack levels used: 1
  6805 ;; Hardware stack levels required when called: 4
  6806 ;; This function calls:
  6807 ;;		Nothing
  6808 ;; This function is called by:
  6809 ;;		_Inicializar_Sistema
  6810 ;; This function uses a non-reentrant model
  6811 ;;
  6812                           
  6813                           	psect	text30
  6814   0027C6                     __ptext30:
  6815                           	callstack 0
  6816   0027C6                     _Inicializar_UART:
  6817                           	callstack 25
  6818                           
  6819                           ; BSR set to: 0
  6820                           ;serial.c: 13:     BAUDCONbits.BRG16 = 1;
  6821                           
  6822                           ; BSR set to: 0
  6823                           ;incstack = 0
  6824   0027C6  86B8               	bsf	184,3,c	;volatile
  6825                           
  6826                           ; BSR set to: 0
  6827                           ;serial.c: 14:     SPBRGH = 0x3F;
  6828   0027C8  0E3F               	movlw	63
  6829   0027CA  6EB0               	movwf	176,c	;volatile
  6830                           
  6831                           ; BSR set to: 0
  6832                           ;serial.c: 15:     SPBRG = 0xFF;
  6833   0027CC  68AF               	setf	175,c	;volatile
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;serial.c: 18:     TXSTAbits.BRGH = 1;
  6837   0027CE  84AC               	bsf	172,2,c	;volatile
  6838                           
  6839                           ; BSR set to: 0
  6840                           ;serial.c: 19:     TXSTAbits.TXEN = 1;
  6841   0027D0  8AAC               	bsf	172,5,c	;volatile
  6842                           
  6843                           ; BSR set to: 0
  6844                           ;serial.c: 20:     RCSTAbits.SPEN = 1;
  6845   0027D2  8EAB               	bsf	171,7,c	;volatile
  6846                           
  6847                           ; BSR set to: 0
  6848                           ;serial.c: 22:     IPR1bits.RCIP = 0;
  6849   0027D4  9A9F               	bcf	159,5,c	;volatile
  6850                           
  6851                           ; BSR set to: 0
  6852                           ;serial.c: 23:     PIE1bits.RCIE = 1;
  6853   0027D6  8A9D               	bsf	157,5,c	;volatile
  6854                           
  6855                           ; BSR set to: 0
  6856   0027D8  0012               	return		;funcret
  6857   0027DA                     __end_of_Inicializar_UART:
  6858                           	callstack 0
  6859                           
  6860 ;; *************** function _Inicializar_Oscilador *****************
  6861 ;; Defined at:
  6862 ;;		line 6 in file "device_config.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;		None
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;		None
  6867 ;; Return value:  Size  Location     Type
  6868 ;;                  1    wreg      void 
  6869 ;; Registers used:
  6870 ;;		wreg, status,2
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/0
  6873 ;;		On exit  : 0/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6876 ;;      Params:         0       0       0       0       0       0       0       0       0
  6877 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6878 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6879 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6880 ;;Total ram usage:        0 bytes
  6881 ;; Hardware stack levels used: 1
  6882 ;; Hardware stack levels required when called: 4
  6883 ;; This function calls:
  6884 ;;		Nothing
  6885 ;; This function is called by:
  6886 ;;		_Inicializar_Sistema
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890                           	psect	text31
  6891   002810                     __ptext31:
  6892                           	callstack 0
  6893   002810                     _Inicializar_Oscilador:
  6894                           	callstack 25
  6895                           
  6896                           ;device_config.c: 8:     OSCCONbits.IRCF = 0b000;
  6897                           
  6898                           ; BSR set to: 0
  6899                           ;incstack = 0
  6900   002810  0E8F               	movlw	-113
  6901   002812  16D3               	andwf	211,f,c	;volatile
  6902                           
  6903                           ;device_config.c: 9:     UCFGbits.UTRDIS = 1;
  6904   002814  866F               	bsf	111,3,c	;volatile
  6905                           
  6906                           ;device_config.c: 10:     UCONbits.USBEN = 0;
  6907   002816  966D               	bcf	109,3,c	;volatile
  6908   002818  0012               	return		;funcret
  6909   00281A                     __end_of_Inicializar_Oscilador:
  6910                           	callstack 0
  6911                           
  6912 ;; *************** function _Inicializar_Administrador_PIN *****************
  6913 ;; Defined at:
  6914 ;;		line 17 in file "pin_manager.c"
  6915 ;; Parameters:    Size  Location     Type
  6916 ;;		None
  6917 ;; Auto vars:     Size  Location     Type
  6918 ;;		None
  6919 ;; Return value:  Size  Location     Type
  6920 ;;                  1    wreg      void 
  6921 ;; Registers used:
  6922 ;;		None
  6923 ;; Tracked objects:
  6924 ;;		On entry : 0/0
  6925 ;;		On exit  : 0/0
  6926 ;;		Unchanged: 0/0
  6927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6928 ;;      Params:         0       0       0       0       0       0       0       0       0
  6929 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6930 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6931 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6932 ;;Total ram usage:        0 bytes
  6933 ;; Hardware stack levels used: 1
  6934 ;; Hardware stack levels required when called: 4
  6935 ;; This function calls:
  6936 ;;		Nothing
  6937 ;; This function is called by:
  6938 ;;		_Inicializar_Sistema
  6939 ;; This function uses a non-reentrant model
  6940 ;;
  6941                           
  6942                           	psect	text32
  6943   00270C                     __ptext32:
  6944                           	callstack 0
  6945   00270C                     _Inicializar_Administrador_PIN:
  6946                           	callstack 25
  6947                           
  6948                           ;pin_manager.c: 22:     TRISBbits.TRISB0 = 1;
  6949                           
  6950                           ;incstack = 0
  6951   00270C  8093               	bsf	147,0,c	;volatile
  6952                           
  6953                           ;pin_manager.c: 23:     TRISBbits.TRISB1 = 0;
  6954   00270E  9293               	bcf	147,1,c	;volatile
  6955                           
  6956                           ;pin_manager.c: 24:     TRISBbits.TRISB2 = 1;
  6957   002710  8493               	bsf	147,2,c	;volatile
  6958                           
  6959                           ;pin_manager.c: 26:     TRISBbits.TRISB3 = 0;
  6960   002712  9693               	bcf	147,3,c	;volatile
  6961                           
  6962                           ;pin_manager.c: 28:     TRISBbits.TRISB4 = 0;
  6963   002714  9893               	bcf	147,4,c	;volatile
  6964                           
  6965                           ;pin_manager.c: 29:     TRISBbits.TRISB5 = 1;
  6966   002716  8A93               	bsf	147,5,c	;volatile
  6967                           
  6968                           ;pin_manager.c: 33:     TRISCbits.TRISC0 = 1;
  6969   002718  8094               	bsf	148,0,c	;volatile
  6970                           
  6971                           ;pin_manager.c: 34:     TRISCbits.TRISC1 = 1;
  6972   00271A  8294               	bsf	148,1,c	;volatile
  6973                           
  6974                           ;pin_manager.c: 35:     TRISCbits.TRISC2 = 1;
  6975   00271C  8494               	bsf	148,2,c	;volatile
  6976                           
  6977                           ;pin_manager.c: 38:     UCFGbits.UTRDIS = 1;
  6978   00271E  866F               	bsf	111,3,c	;volatile
  6979                           
  6980                           ;pin_manager.c: 42:     TRISCbits.TRISC6 = 1;
  6981   002720  8C94               	bsf	148,6,c	;volatile
  6982                           
  6983                           ;pin_manager.c: 43:     TRISCbits.TRISC7 = 1;
  6984   002722  8E94               	bsf	148,7,c	;volatile
  6985                           
  6986                           ;pin_manager.c: 47:     TRISAbits.TRISA0 = 1;
  6987   002724  8092               	bsf	146,0,c	;volatile
  6988                           
  6989                           ;pin_manager.c: 48:     TRISAbits.TRISA1 = 1;
  6990   002726  8292               	bsf	146,1,c	;volatile
  6991                           
  6992                           ;pin_manager.c: 49:     TRISAbits.TRISA2 = 1;
  6993   002728  8492               	bsf	146,2,c	;volatile
  6994                           
  6995                           ;pin_manager.c: 50:     TRISAbits.TRISA3 = 1;
  6996   00272A  8692               	bsf	146,3,c	;volatile
  6997                           
  6998                           ;pin_manager.c: 51:     TRISAbits.TRISA4 = 1;
  6999   00272C  8892               	bsf	146,4,c	;volatile
  7000                           
  7001                           ;pin_manager.c: 52:     TRISAbits.TRISA5 = 1;
  7002   00272E  8A92               	bsf	146,5,c	;volatile
  7003                           
  7004                           ;pin_manager.c: 54:     TRISAbits.TRISA6 = 0;
  7005   002730  9C92               	bcf	146,6,c	;volatile
  7006   002732  0012               	return		;funcret
  7007   002734                     __end_of_Inicializar_Administrador_PIN:
  7008                           	callstack 0
  7009                           
  7010 ;; *************** function _Configurar_Timer2 *****************
  7011 ;; Defined at:
  7012 ;;		line 31 in file "timers.c"
  7013 ;; Parameters:    Size  Location     Type
  7014 ;;		None
  7015 ;; Auto vars:     Size  Location     Type
  7016 ;;		None
  7017 ;; Return value:  Size  Location     Type
  7018 ;;                  1    wreg      void 
  7019 ;; Registers used:
  7020 ;;		wreg, status,2
  7021 ;; Tracked objects:
  7022 ;;		On entry : 3F/0
  7023 ;;		On exit  : 3F/0
  7024 ;;		Unchanged: 3F/0
  7025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7026 ;;      Params:         0       0       0       0       0       0       0       0       0
  7027 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7029 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7030 ;;Total ram usage:        0 bytes
  7031 ;; Hardware stack levels used: 1
  7032 ;; Hardware stack levels required when called: 4
  7033 ;; This function calls:
  7034 ;;		Nothing
  7035 ;; This function is called by:
  7036 ;;		_Inicializar_Sistema
  7037 ;; This function uses a non-reentrant model
  7038 ;;
  7039                           
  7040                           	psect	text33
  7041   00277A                     __ptext33:
  7042                           	callstack 0
  7043   00277A                     _Configurar_Timer2:
  7044                           	callstack 25
  7045                           
  7046                           ; BSR set to: 0
  7047                           ;timers.c: 32:     T2CON = 0;
  7048                           
  7049                           ;incstack = 0
  7050   00277A  0E00               	movlw	0
  7051   00277C  6ECA               	movwf	202,c	;volatile
  7052                           
  7053                           ; BSR set to: 0
  7054                           ;timers.c: 33:     T2CONbits.TMR2ON = 0;
  7055   00277E  94CA               	bcf	202,2,c	;volatile
  7056                           
  7057                           ;timers.c: 34:     T2CONbits.T2CKPS = 0b11;
  7058   002780  0E03               	movlw	3
  7059   002782  12CA               	iorwf	202,f,c	;volatile
  7060                           
  7061                           ; BSR set to: 0
  7062                           ;timers.c: 35:     PR2 = 255;
  7063   002784  68CB               	setf	203,c	;volatile
  7064                           
  7065                           ;timers.c: 36:     T2CONbits.TOUTPS = 0b1111;
  7066   002786  0E78               	movlw	120
  7067   002788  12CA               	iorwf	202,f,c	;volatile
  7068                           
  7069                           ; BSR set to: 0
  7070                           ;timers.c: 37:     PIR1bits.TMR2IF = 0;
  7071   00278A  929E               	bcf	158,1,c	;volatile
  7072                           
  7073                           ; BSR set to: 0
  7074                           ;timers.c: 38:     PIE1bits.TMR2IE = 1;
  7075   00278C  829D               	bsf	157,1,c	;volatile
  7076                           
  7077                           ; BSR set to: 0
  7078                           ;timers.c: 39:     T2CONbits.TMR2ON = 1;
  7079   00278E  84CA               	bsf	202,2,c	;volatile
  7080                           
  7081                           ; BSR set to: 0
  7082                           ;timers.c: 40:     IPR1bits.TMR2IP = 0;
  7083   002790  929F               	bcf	159,1,c	;volatile
  7084                           
  7085                           ;timers.c: 41:     TMR2 = 0;
  7086   002792  0E00               	movlw	0
  7087   002794  6ECC               	movwf	204,c	;volatile
  7088                           
  7089                           ; BSR set to: 0
  7090   002796  0012               	return		;funcret
  7091   002798                     __end_of_Configurar_Timer2:
  7092                           	callstack 0
  7093                           
  7094 ;; *************** function _Configurar_Timer0 *****************
  7095 ;; Defined at:
  7096 ;;		line 5 in file "timers.c"
  7097 ;; Parameters:    Size  Location     Type
  7098 ;;		None
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;		None
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  1    wreg      void 
  7103 ;; Registers used:
  7104 ;;		wreg, status,2
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7110 ;;      Params:         0       0       0       0       0       0       0       0       0
  7111 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7112 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7113 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7114 ;;Total ram usage:        0 bytes
  7115 ;; Hardware stack levels used: 1
  7116 ;; Hardware stack levels required when called: 4
  7117 ;; This function calls:
  7118 ;;		Nothing
  7119 ;; This function is called by:
  7120 ;;		_Inicializar_Sistema
  7121 ;; This function uses a non-reentrant model
  7122 ;;
  7123                           
  7124                           	psect	text34
  7125   00275A                     __ptext34:
  7126                           	callstack 0
  7127   00275A                     _Configurar_Timer0:
  7128                           	callstack 25
  7129                           
  7130                           ;timers.c: 6:     T0CONbits.T08BIT = 0;
  7131                           
  7132                           ; BSR set to: 0
  7133                           ;incstack = 0
  7134   00275A  9CD5               	bcf	213,6,c	;volatile
  7135                           
  7136                           ;timers.c: 7:     T0CONbits.T0CS = 0;
  7137   00275C  9AD5               	bcf	213,5,c	;volatile
  7138                           
  7139                           ;timers.c: 8:     T0CONbits.PSA = 0;
  7140   00275E  96D5               	bcf	213,3,c	;volatile
  7141                           
  7142                           ;timers.c: 9:     T0CONbits.T0PS = 0b010;
  7143   002760  50D5               	movf	213,w,c	;volatile
  7144   002762  0BF8               	andlw	-8
  7145   002764  0902               	iorlw	2
  7146   002766  6ED5               	movwf	213,c	;volatile
  7147                           
  7148                           ;timers.c: 10:     TMR0H = 0x00;
  7149   002768  0E00               	movlw	0
  7150   00276A  6ED7               	movwf	215,c	;volatile
  7151                           
  7152                           ;timers.c: 11:     TMR0L = 0x00;
  7153   00276C  0E00               	movlw	0
  7154   00276E  6ED6               	movwf	214,c	;volatile
  7155                           
  7156                           ;timers.c: 12:     T0CONbits.TMR0ON = 1;
  7157   002770  8ED5               	bsf	213,7,c	;volatile
  7158                           
  7159                           ;timers.c: 13:     INTCONbits.TMR0IF =0;
  7160   002772  94F2               	bcf	242,2,c	;volatile
  7161                           
  7162                           ;timers.c: 15:     INTCONbits.T0IE = 1;
  7163   002774  8AF2               	bsf	242,5,c	;volatile
  7164                           
  7165                           ;timers.c: 16:     INTCON2bits.TMR0IP = 0;
  7166   002776  94F1               	bcf	241,2,c	;volatile
  7167   002778  0012               	return		;funcret
  7168   00277A                     __end_of_Configurar_Timer0:
  7169                           	callstack 0
  7170                           
  7171 ;; *************** function _Configurar_SPI *****************
  7172 ;; Defined at:
  7173 ;;		line 6 in file "spi.c"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;		None
  7176 ;; Auto vars:     Size  Location     Type
  7177 ;;		None
  7178 ;; Return value:  Size  Location     Type
  7179 ;;                  1    wreg      void 
  7180 ;; Registers used:
  7181 ;;		wreg, status,2
  7182 ;; Tracked objects:
  7183 ;;		On entry : 3F/0
  7184 ;;		On exit  : 3F/0
  7185 ;;		Unchanged: 3F/0
  7186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7187 ;;      Params:         0       0       0       0       0       0       0       0       0
  7188 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7189 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7190 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7191 ;;Total ram usage:        0 bytes
  7192 ;; Hardware stack levels used: 1
  7193 ;; Hardware stack levels required when called: 4
  7194 ;; This function calls:
  7195 ;;		Nothing
  7196 ;; This function is called by:
  7197 ;;		_Inicializar_Sistema
  7198 ;; This function uses a non-reentrant model
  7199 ;;
  7200                           
  7201                           	psect	text35
  7202   002798                     __ptext35:
  7203                           	callstack 0
  7204   002798                     _Configurar_SPI:
  7205                           	callstack 25
  7206                           
  7207                           ; BSR set to: 0
  7208                           ;spi.c: 9:     SSPSTAT = 0x3F;
  7209                           
  7210                           ;incstack = 0
  7211   002798  0E3F               	movlw	63
  7212   00279A  6EC7               	movwf	199,c	;volatile
  7213                           
  7214                           ;spi.c: 12:     SSPCON1 = 0x00;
  7215   00279C  0E00               	movlw	0
  7216   00279E  6EC6               	movwf	198,c	;volatile
  7217                           
  7218                           ; BSR set to: 0
  7219                           ;spi.c: 13:     SSPCON1bits.CKP = 1;
  7220   0027A0  88C6               	bsf	198,4,c	;volatile
  7221                           
  7222                           ; BSR set to: 0
  7223                           ;spi.c: 14:     SSPSTATbits.SMP = 0;
  7224   0027A2  9EC7               	bcf	199,7,c	;volatile
  7225                           
  7226                           ; BSR set to: 0
  7227                           ;spi.c: 15:     SSPSTATbits.CKE = 0;
  7228   0027A4  9CC7               	bcf	199,6,c	;volatile
  7229                           
  7230                           ; BSR set to: 0
  7231                           ;spi.c: 16:     SSPCON1bits.WCOL = 0;
  7232   0027A6  9EC6               	bcf	198,7,c	;volatile
  7233                           
  7234                           ; BSR set to: 0
  7235                           ;spi.c: 21:     SSPCON1bits.SSPM0 = 1;
  7236   0027A8  80C6               	bsf	198,0,c	;volatile
  7237                           
  7238                           ; BSR set to: 0
  7239                           ;spi.c: 22:     SSPCON1bits.SSPM1 = 0;
  7240   0027AA  92C6               	bcf	198,1,c	;volatile
  7241                           
  7242                           ; BSR set to: 0
  7243                           ;spi.c: 23:     SSPCON1bits.SSPM2 = 0;
  7244   0027AC  94C6               	bcf	198,2,c	;volatile
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;spi.c: 24:     SSPCON1bits.SSPM3 = 0;
  7248   0027AE  96C6               	bcf	198,3,c	;volatile
  7249                           
  7250                           ; BSR set to: 0
  7251   0027B0  0012               	return		;funcret
  7252   0027B2                     __end_of_Configurar_SPI:
  7253                           	callstack 0
  7254                           
  7255 ;; *************** function _Configurar_ADC *****************
  7256 ;; Defined at:
  7257 ;;		line 5 in file "adc.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;		None
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;		None
  7262 ;; Return value:  Size  Location     Type
  7263 ;;                  1    wreg      void 
  7264 ;; Registers used:
  7265 ;;		wreg, status,2
  7266 ;; Tracked objects:
  7267 ;;		On entry : 3F/0
  7268 ;;		On exit  : 3F/0
  7269 ;;		Unchanged: 3F/0
  7270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7271 ;;      Params:         0       0       0       0       0       0       0       0       0
  7272 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7273 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7274 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7275 ;;Total ram usage:        0 bytes
  7276 ;; Hardware stack levels used: 1
  7277 ;; Hardware stack levels required when called: 4
  7278 ;; This function calls:
  7279 ;;		Nothing
  7280 ;; This function is called by:
  7281 ;;		_Inicializar_Sistema
  7282 ;; This function uses a non-reentrant model
  7283 ;;
  7284                           
  7285                           	psect	text36
  7286   0026E0                     __ptext36:
  7287                           	callstack 0
  7288   0026E0                     _Configurar_ADC:
  7289                           	callstack 25
  7290                           
  7291                           ; BSR set to: 0
  7292                           ;adc.c: 8:     ADCON1bits.VCFG0 = 1;
  7293                           
  7294                           ; BSR set to: 0
  7295                           ;incstack = 0
  7296   0026E0  88C1               	bsf	193,4,c	;volatile
  7297                           
  7298                           ;adc.c: 9:     ADCON1bits.VCFG1 = 1;
  7299   0026E2  8AC1               	bsf	193,5,c	;volatile
  7300                           
  7301                           ; BSR set to: 0
  7302                           ;adc.c: 10:     ADCON1bits.PCFG = 0b1110;
  7303   0026E4  50C1               	movf	193,w,c	;volatile
  7304   0026E6  0BF0               	andlw	-16
  7305   0026E8  090E               	iorlw	14
  7306   0026EA  6EC1               	movwf	193,c	;volatile
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;adc.c: 13:     ADCON2bits.ADFM = 1;
  7310   0026EC  8EC0               	bsf	192,7,c	;volatile
  7311                           
  7312                           ;adc.c: 17:     ADCON2bits.ACQT = 0b110;
  7313   0026EE  50C0               	movf	192,w,c	;volatile
  7314   0026F0  0BC7               	andlw	-57
  7315   0026F2  0930               	iorlw	48
  7316   0026F4  6EC0               	movwf	192,c	;volatile
  7317                           
  7318                           ;adc.c: 18:     ADCON2bits.ADCS = 0b101;
  7319   0026F6  50C0               	movf	192,w,c	;volatile
  7320   0026F8  0BF8               	andlw	-8
  7321   0026FA  0905               	iorlw	5
  7322   0026FC  6EC0               	movwf	192,c	;volatile
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;adc.c: 20:     ADCON0bits.CHS0 = 0;
  7326   0026FE  94C2               	bcf	194,2,c	;volatile
  7327                           
  7328                           ; BSR set to: 0
  7329                           ;adc.c: 21:     ADCON0bits.CHS1 = 0;
  7330   002700  96C2               	bcf	194,3,c	;volatile
  7331                           
  7332                           ; BSR set to: 0
  7333                           ;adc.c: 22:     ADCON0bits.CHS2 = 0;
  7334   002702  98C2               	bcf	194,4,c	;volatile
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;adc.c: 23:     ADCON0bits.CHS3 = 0;
  7338   002704  9AC2               	bcf	194,5,c	;volatile
  7339                           
  7340                           ; BSR set to: 0
  7341                           ;adc.c: 30:     ADCON0bits.ADON = 1;
  7342   002706  80C2               	bsf	194,0,c	;volatile
  7343                           
  7344                           ; BSR set to: 0
  7345                           ;adc.c: 31:     ADCON0bits.GO = 1;
  7346   002708  82C2               	bsf	194,1,c	;volatile
  7347                           
  7348                           ; BSR set to: 0
  7349   00270A  0012               	return		;funcret
  7350   00270C                     __end_of_Configurar_ADC:
  7351                           	callstack 0
  7352                           
  7353 ;; *************** function _Asignar_Minutos_Timer0 *****************
  7354 ;; Defined at:
  7355 ;;		line 23 in file "timers.c"
  7356 ;; Parameters:    Size  Location     Type
  7357 ;;  minutos         4   10[BANK0 ] void 
  7358 ;; Auto vars:     Size  Location     Type
  7359 ;;		None
  7360 ;; Return value:  Size  Location     Type
  7361 ;;                  1    wreg      void 
  7362 ;; Registers used:
  7363 ;;		None
  7364 ;; Tracked objects:
  7365 ;;		On entry : 3F/0
  7366 ;;		On exit  : 3F/0
  7367 ;;		Unchanged: 3F/0
  7368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7369 ;;      Params:         0       4       0       0       0       0       0       0       0
  7370 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7371 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7372 ;;      Totals:         0       4       0       0       0       0       0       0       0
  7373 ;;Total ram usage:        4 bytes
  7374 ;; Hardware stack levels used: 1
  7375 ;; Hardware stack levels required when called: 4
  7376 ;; This function calls:
  7377 ;;		Nothing
  7378 ;; This function is called by:
  7379 ;;		_main
  7380 ;;		_Inicializar_Sistema
  7381 ;; This function uses a non-reentrant model
  7382 ;;
  7383                           
  7384                           	psect	text37
  7385   0027DA                     __ptext37:
  7386                           	callstack 0
  7387   0027DA                     _Asignar_Minutos_Timer0:
  7388                           	callstack 25
  7389                           
  7390                           ; BSR set to: 0
  7391                           ;timers.c: 25:     NUM_MINUTOS_T0 = minutos;
  7392                           
  7393                           ; BSR set to: 0
  7394                           ;incstack = 0
  7395   0027DA  C0D2  F0C4         	movff	Asignar_Minutos_Timer0@minutos,_NUM_MINUTOS_T0	;volatile
  7396   0027DE  C0D3  F0C5         	movff	Asignar_Minutos_Timer0@minutos+1,_NUM_MINUTOS_T0+1	;volatile
  7397   0027E2  C0D4  F0C6         	movff	Asignar_Minutos_Timer0@minutos+2,_NUM_MINUTOS_T0+2	;volatile
  7398   0027E6  C0D5  F0C7         	movff	Asignar_Minutos_Timer0@minutos+3,_NUM_MINUTOS_T0+3	;volatile
  7399                           
  7400                           ; BSR set to: 0
  7401   0027EA  0012               	return		;funcret
  7402   0027EC                     __end_of_Asignar_Minutos_Timer0:
  7403                           	callstack 0
  7404                           
  7405 ;; *************** function _low_isr *****************
  7406 ;; Defined at:
  7407 ;;		line 10 in file "interrupt_manager.c"
  7408 ;; Parameters:    Size  Location     Type
  7409 ;;		None
  7410 ;; Auto vars:     Size  Location     Type
  7411 ;;		None
  7412 ;; Return value:  Size  Location     Type
  7413 ;;                  1    wreg      void 
  7414 ;; Registers used:
  7415 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7416 ;; Tracked objects:
  7417 ;;		On entry : 0/0
  7418 ;;		On exit  : 0/0
  7419 ;;		Unchanged: 0/0
  7420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7421 ;;      Params:         0       0       0       0       0       0       0       0       0
  7422 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7423 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7424 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7425 ;;Total ram usage:        5 bytes
  7426 ;; Hardware stack levels used: 1
  7427 ;; Hardware stack levels required when called: 3
  7428 ;; This function calls:
  7429 ;;		_Atencion_Int_Timer_0
  7430 ;;		_Atencion_Int_Timer_2
  7431 ;; This function is called by:
  7432 ;;		Interrupt level 1
  7433 ;; This function uses a non-reentrant model
  7434 ;;
  7435                           
  7436                           	psect	intcodelo
  7437   000018                     __pintcodelo:
  7438                           	callstack 0
  7439   000018                     _low_isr:
  7440                           	callstack 19
  7441                           
  7442                           ; BSR set to: 0
  7443                           ;incstack = 0
  7444   000018  8041               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7445   00001A  CFD8 F01A          	movff	status,??_low_isr
  7446   00001E  CFE8 F01B          	movff	wreg,??_low_isr+1
  7447   000022  CFE0 F01C          	movff	bsr,??_low_isr+2
  7448   000026  CFF3 F01D          	movff	prodl,??_low_isr+3
  7449   00002A  CFF4 F01E          	movff	prodh,??_low_isr+4
  7450                           
  7451                           ;interrupt_manager.c: 11:     (INTCONbits.GIE = 0);
  7452   00002E  9EF2               	bcf	242,7,c	;volatile
  7453                           
  7454                           ;interrupt_manager.c: 14:     if (INTCONbits.TMR0IF) {
  7455   000030  B4F2               	btfsc	242,2,c	;volatile
  7456                           
  7457                           ;interrupt_manager.c: 15:         Atencion_Int_Timer_0();
  7458   000032  ECC9  F011         	call	_Atencion_Int_Timer_0	;wreg free
  7459                           
  7460                           ;interrupt_manager.c: 19:     if (PIR1bits.TMR2IF) {
  7461   000036  B29E               	btfsc	158,1,c	;volatile
  7462                           
  7463                           ;interrupt_manager.c: 20:         Atencion_Int_Timer_2();
  7464   000038  ECDD  F00F         	call	_Atencion_Int_Timer_2	;wreg free
  7465                           
  7466                           ;interrupt_manager.c: 24:     if (PIR1bits.RCIF && PIE1bits.RCIE) {
  7467   00003C  BA9E               	btfsc	158,5,c	;volatile
  7468   00003E  AA9D               	btfss	157,5,c	;volatile
  7469   000040  D003               	goto	i1l107
  7470                           
  7471                           ;interrupt_manager.c: 26:         dato_recibido = RCREG;
  7472   000042  CFAE F039          	movff	4014,_dato_recibido	;volatile
  7473                           
  7474                           ;interrupt_manager.c: 29:         PIR1bits.RCIF = 0;
  7475   000046  9A9E               	bcf	158,5,c	;volatile
  7476   000048                     i1l107:
  7477                           
  7478                           ;interrupt_manager.c: 31:     (INTCONbits.GIE = 1);
  7479   000048  8EF2               	bsf	242,7,c	;volatile
  7480   00004A  C01E  FFF4         	movff	??_low_isr+4,prodh
  7481   00004E  C01D  FFF3         	movff	??_low_isr+3,prodl
  7482   000052  C01C  FFE0         	movff	??_low_isr+2,bsr
  7483   000056  C01B  FFE8         	movff	??_low_isr+1,wreg
  7484   00005A  C01A  FFD8         	movff	??_low_isr,status
  7485   00005E  9041               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7486   000060  0010               	retfie	
  7487   000062                     __end_of_low_isr:
  7488                           	callstack 0
  7489                           
  7490 ;; *************** function _Atencion_Int_Timer_2 *****************
  7491 ;; Defined at:
  7492 ;;		line 51 in file "interrupt_manager.c"
  7493 ;; Parameters:    Size  Location     Type
  7494 ;;		None
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;		None
  7497 ;; Return value:  Size  Location     Type
  7498 ;;                  1    wreg      void 
  7499 ;; Registers used:
  7500 ;;		wreg, status,2, status,0
  7501 ;; Tracked objects:
  7502 ;;		On entry : 0/0
  7503 ;;		On exit  : 0/0
  7504 ;;		Unchanged: 0/0
  7505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7506 ;;      Params:         0       0       0       0       0       0       0       0       0
  7507 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7508 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7509 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7510 ;;Total ram usage:        0 bytes
  7511 ;; Hardware stack levels used: 1
  7512 ;; Hardware stack levels required when called: 1
  7513 ;; This function calls:
  7514 ;;		Nothing
  7515 ;; This function is called by:
  7516 ;;		_low_isr
  7517 ;; This function uses a non-reentrant model
  7518 ;;
  7519                           
  7520                           	psect	text39
  7521   001FBA                     __ptext39:
  7522                           	callstack 0
  7523   001FBA                     _Atencion_Int_Timer_2:
  7524                           	callstack 20
  7525                           
  7526                           ;interrupt_manager.c: 52:      PIR1bits.TMR2IF = 0;
  7527                           
  7528                           ;incstack = 0
  7529   001FBA  929E               	bcf	158,1,c	;volatile
  7530                           
  7531                           ;interrupt_manager.c: 56:     if( cont_task0 >= 3 ) {
  7532   001FBC  5033               	movf	(_cont_task0+1)^0,w,c	;volatile
  7533   001FBE  E104               	bnz	i1u290_20
  7534   001FC0  0E03               	movlw	3
  7535   001FC2  5C32               	subwf	_cont_task0^0,w,c	;volatile
  7536   001FC4  A0D8               	btfss	status,0,c
  7537   001FC6  D008               	goto	i1l3519
  7538   001FC8                     i1u290_20:
  7539                           
  7540                           ;interrupt_manager.c: 57:         cont_task0 = 0;
  7541   001FC8  0E00               	movlw	0
  7542   001FCA  6E33               	movwf	(_cont_task0+1)^0,c	;volatile
  7543   001FCC  0E00               	movlw	0
  7544   001FCE  6E32               	movwf	_cont_task0^0,c	;volatile
  7545                           
  7546                           ;interrupt_manager.c: 58:         HABILITAR_TASK0 = 1;
  7547   001FD0  0E01               	movlw	1
  7548   001FD2  0100               	movlb	0	; () banked
  7549   001FD4  6FC0               	movwf	_HABILITAR_TASK0& (0+255),b	;volatile
  7550                           
  7551                           ;interrupt_manager.c: 59:     }
  7552   001FD6  D002               	goto	i1l3521
  7553   001FD8                     i1l3519:
  7554   001FD8  4A32               	infsnz	_cont_task0^0,f,c	;volatile
  7555   001FDA  2A33               	incf	(_cont_task0+1)^0,f,c	;volatile
  7556   001FDC                     i1l3521:
  7557                           
  7558                           ;interrupt_manager.c: 63:     if( cont_task1 >= 8 ) {
  7559   001FDC  5031               	movf	(_cont_task1+1)^0,w,c	;volatile
  7560   001FDE  E104               	bnz	i1u291_20
  7561   001FE0  0E08               	movlw	8
  7562   001FE2  5C30               	subwf	_cont_task1^0,w,c	;volatile
  7563   001FE4  A0D8               	btfss	status,0,c
  7564   001FE6  D008               	goto	i1l3525
  7565   001FE8                     i1u291_20:
  7566                           
  7567                           ;interrupt_manager.c: 64:         cont_task1 = 0;
  7568   001FE8  0E00               	movlw	0
  7569   001FEA  6E31               	movwf	(_cont_task1+1)^0,c	;volatile
  7570   001FEC  0E00               	movlw	0
  7571   001FEE  6E30               	movwf	_cont_task1^0,c	;volatile
  7572                           
  7573                           ;interrupt_manager.c: 65:         HABILITAR_TASK1 = 1;
  7574   001FF0  0E01               	movlw	1
  7575   001FF2  0100               	movlb	0	; () banked
  7576   001FF4  6FBF               	movwf	_HABILITAR_TASK1& (0+255),b	;volatile
  7577                           
  7578                           ;interrupt_manager.c: 66:     }
  7579   001FF6  D002               	goto	i1l3527
  7580   001FF8                     i1l3525:
  7581   001FF8  4A30               	infsnz	_cont_task1^0,f,c	;volatile
  7582   001FFA  2A31               	incf	(_cont_task1+1)^0,f,c	;volatile
  7583   001FFC                     i1l3527:
  7584                           
  7585                           ;interrupt_manager.c: 70:     if( cont_task2 >= 15 ) {
  7586   001FFC  502F               	movf	(_cont_task2+1)^0,w,c	;volatile
  7587   001FFE  E104               	bnz	i1u292_20
  7588   002000  0E0F               	movlw	15
  7589   002002  5C2E               	subwf	_cont_task2^0,w,c	;volatile
  7590   002004  A0D8               	btfss	status,0,c
  7591   002006  D008               	goto	i1l3531
  7592   002008                     i1u292_20:
  7593                           
  7594                           ;interrupt_manager.c: 71:         cont_task2 = 0;
  7595   002008  0E00               	movlw	0
  7596   00200A  6E2F               	movwf	(_cont_task2+1)^0,c	;volatile
  7597   00200C  0E00               	movlw	0
  7598   00200E  6E2E               	movwf	_cont_task2^0,c	;volatile
  7599                           
  7600                           ;interrupt_manager.c: 72:         HABILITAR_TASK2 = 1;
  7601   002010  0E01               	movlw	1
  7602   002012  0100               	movlb	0	; () banked
  7603   002014  6FBE               	movwf	_HABILITAR_TASK2& (0+255),b	;volatile
  7604                           
  7605                           ;interrupt_manager.c: 73:     }
  7606   002016  D002               	goto	i1l3533
  7607   002018                     i1l3531:
  7608   002018  4A2E               	infsnz	_cont_task2^0,f,c	;volatile
  7609   00201A  2A2F               	incf	(_cont_task2+1)^0,f,c	;volatile
  7610   00201C                     i1l3533:
  7611                           
  7612                           ;interrupt_manager.c: 77:     if( cont_task3 >= 30 ) {
  7613   00201C  502D               	movf	(_cont_task3+1)^0,w,c	;volatile
  7614   00201E  E104               	bnz	i1u293_20
  7615   002020  0E1E               	movlw	30
  7616   002022  5C2C               	subwf	_cont_task3^0,w,c	;volatile
  7617   002024  A0D8               	btfss	status,0,c
  7618   002026  D008               	goto	i1l3537
  7619   002028                     i1u293_20:
  7620                           
  7621                           ;interrupt_manager.c: 78:         cont_task3 = 0;
  7622   002028  0E00               	movlw	0
  7623   00202A  6E2D               	movwf	(_cont_task3+1)^0,c	;volatile
  7624   00202C  0E00               	movlw	0
  7625   00202E  6E2C               	movwf	_cont_task3^0,c	;volatile
  7626                           
  7627                           ;interrupt_manager.c: 79:         HABILITAR_TASK3 = 1;
  7628   002030  0E01               	movlw	1
  7629   002032  0100               	movlb	0	; () banked
  7630   002034  6FBD               	movwf	_HABILITAR_TASK3& (0+255),b	;volatile
  7631                           
  7632                           ;interrupt_manager.c: 80:     }
  7633   002036  D002               	goto	i1l3539
  7634   002038                     i1l3537:
  7635   002038  4A2C               	infsnz	_cont_task3^0,f,c	;volatile
  7636   00203A  2A2D               	incf	(_cont_task3+1)^0,f,c	;volatile
  7637   00203C                     i1l3539:
  7638                           
  7639                           ;interrupt_manager.c: 84:     if( cont_task4 >= 60 ) {
  7640   00203C  502B               	movf	(_cont_task4+1)^0,w,c	;volatile
  7641   00203E  E104               	bnz	i1u294_20
  7642   002040  0E3C               	movlw	60
  7643   002042  5C2A               	subwf	_cont_task4^0,w,c	;volatile
  7644   002044  A0D8               	btfss	status,0,c
  7645   002046  D008               	goto	i1l3543
  7646   002048                     i1u294_20:
  7647                           
  7648                           ;interrupt_manager.c: 85:         cont_task4 = 0;
  7649   002048  0E00               	movlw	0
  7650   00204A  6E2B               	movwf	(_cont_task4+1)^0,c	;volatile
  7651   00204C  0E00               	movlw	0
  7652   00204E  6E2A               	movwf	_cont_task4^0,c	;volatile
  7653                           
  7654                           ;interrupt_manager.c: 86:         HABILITAR_TASK4 = 1;
  7655   002050  0E01               	movlw	1
  7656   002052  0100               	movlb	0	; () banked
  7657   002054  6FBC               	movwf	_HABILITAR_TASK4& (0+255),b	;volatile
  7658                           
  7659                           ;interrupt_manager.c: 87:     }
  7660   002056  0012               	return	
  7661   002058                     i1l3543:
  7662   002058  4A2A               	infsnz	_cont_task4^0,f,c	;volatile
  7663   00205A  2A2B               	incf	(_cont_task4+1)^0,f,c	;volatile
  7664   00205C  0012               	return		;funcret
  7665   00205E                     __end_of_Atencion_Int_Timer_2:
  7666                           	callstack 0
  7667                           
  7668 ;; *************** function _Atencion_Int_Timer_0 *****************
  7669 ;; Defined at:
  7670 ;;		line 35 in file "interrupt_manager.c"
  7671 ;; Parameters:    Size  Location     Type
  7672 ;;		None
  7673 ;; Auto vars:     Size  Location     Type
  7674 ;;		None
  7675 ;; Return value:  Size  Location     Type
  7676 ;;                  1    wreg      void 
  7677 ;; Registers used:
  7678 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7679 ;; Tracked objects:
  7680 ;;		On entry : 0/0
  7681 ;;		On exit  : 0/0
  7682 ;;		Unchanged: 0/0
  7683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7684 ;;      Params:         0       0       0       0       0       0       0       0       0
  7685 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7686 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7687 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7688 ;;Total ram usage:        0 bytes
  7689 ;; Hardware stack levels used: 1
  7690 ;; Hardware stack levels required when called: 2
  7691 ;; This function calls:
  7692 ;;		i1___flmul
  7693 ;;		i1___fltol
  7694 ;; This function is called by:
  7695 ;;		_low_isr
  7696 ;; This function uses a non-reentrant model
  7697 ;;
  7698                           
  7699                           	psect	text40
  7700   002392                     __ptext40:
  7701                           	callstack 0
  7702   002392                     _Atencion_Int_Timer_0:
  7703                           	callstack 19
  7704                           
  7705                           ;interrupt_manager.c: 37:     TMR0L = 0;
  7706                           
  7707                           ;incstack = 0
  7708   002392  0E00               	movlw	0
  7709   002394  6ED6               	movwf	214,c	;volatile
  7710                           
  7711                           ;interrupt_manager.c: 38:     INTCONbits.TMR0IF =0;
  7712   002396  94F2               	bcf	242,2,c	;volatile
  7713                           
  7714                           ;interrupt_manager.c: 41:     temp_num_minutos_t0 = (double)(562*NUM_MINUTOS_T0);
  7715   002398  C0C4  F001         	movff	_NUM_MINUTOS_T0,i1___flmul@b	;volatile
  7716   00239C  C0C5  F002         	movff	_NUM_MINUTOS_T0+1,i1___flmul@b+1	;volatile
  7717   0023A0  C0C6  F003         	movff	_NUM_MINUTOS_T0+2,i1___flmul@b+2	;volatile
  7718   0023A4  C0C7  F004         	movff	_NUM_MINUTOS_T0+3,i1___flmul@b+3	;volatile
  7719   0023A8  0E00               	movlw	0
  7720   0023AA  6E05               	movwf	i1___flmul@a^0,c
  7721   0023AC  0E80               	movlw	128
  7722   0023AE  6E06               	movwf	(i1___flmul@a+1)^0,c
  7723   0023B0  0E0C               	movlw	12
  7724   0023B2  6E07               	movwf	(i1___flmul@a+2)^0,c
  7725   0023B4  0E44               	movlw	68
  7726   0023B6  6E08               	movwf	(i1___flmul@a+3)^0,c
  7727   0023B8  EC66  F009         	call	i1___flmul	;wreg free
  7728   0023BC  C001  F080         	movff	?i1___flmul,_temp_num_minutos_t0	;volatile
  7729   0023C0  C002  F081         	movff	?i1___flmul+1,_temp_num_minutos_t0+1	;volatile
  7730   0023C4  C003  F082         	movff	?i1___flmul+2,_temp_num_minutos_t0+2	;volatile
  7731   0023C8  C004  F083         	movff	?i1___flmul+3,_temp_num_minutos_t0+3	;volatile
  7732                           
  7733                           ;interrupt_manager.c: 42:     if(contador_minutos_t0 >= (uint16_t)(temp_num_minutos_t0))
      +                          {
  7734   0023CC  C080  F001         	movff	_temp_num_minutos_t0,i1___fltol@f1	;volatile
  7735   0023D0  C081  F002         	movff	_temp_num_minutos_t0+1,i1___fltol@f1+1	;volatile
  7736   0023D4  C082  F003         	movff	_temp_num_minutos_t0+2,i1___fltol@f1+2	;volatile
  7737   0023D8  C083  F004         	movff	_temp_num_minutos_t0+3,i1___fltol@f1+3	;volatile
  7738   0023DC  EC80  F00F         	call	i1___fltol	;wreg free
  7739   0023E0  5001               	movf	?i1___fltol^0,w,c
  7740   0023E2  5C34               	subwf	_contador_minutos_t0^0,w,c	;volatile
  7741   0023E4  5002               	movf	(?i1___fltol+1)^0,w,c
  7742   0023E6  5835               	subwfb	(_contador_minutos_t0+1)^0,w,c	;volatile
  7743   0023E8  A0D8               	btfss	status,0,c
  7744   0023EA  D008               	goto	i1l3511
  7745                           
  7746                           ;interrupt_manager.c: 43:         contador_minutos_t0 = 0;
  7747   0023EC  0E00               	movlw	0
  7748   0023EE  6E35               	movwf	(_contador_minutos_t0+1)^0,c	;volatile
  7749   0023F0  0E00               	movlw	0
  7750   0023F2  6E34               	movwf	_contador_minutos_t0^0,c	;volatile
  7751                           
  7752                           ;interrupt_manager.c: 44:         HABILITAR_TAREA_MINUTOS_SOL = 1;
  7753   0023F4  0E01               	movlw	1
  7754   0023F6  0100               	movlb	0	; () banked
  7755   0023F8  6FBB               	movwf	_HABILITAR_TAREA_MINUTOS_SOL& (0+255),b	;volatile
  7756                           
  7757                           ;interrupt_manager.c: 46:     }
  7758   0023FA  0012               	return	
  7759   0023FC                     i1l3511:
  7760   0023FC  4A34               	infsnz	_contador_minutos_t0^0,f,c	;volatile
  7761   0023FE  2A35               	incf	(_contador_minutos_t0+1)^0,f,c	;volatile
  7762   002400  0012               	return		;funcret
  7763   002402                     __end_of_Atencion_Int_Timer_0:
  7764                           	callstack 0
  7765                           
  7766 ;; *************** function i1___fltol *****************
  7767 ;; Defined at:
  7768 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  7769 ;; Parameters:    Size  Location     Type
  7770 ;;  f1              4    0[COMRAM] void 
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;  exp1            1    9[COMRAM] unsigned char 
  7773 ;;  sign1           1    8[COMRAM] unsigned char 
  7774 ;; Return value:  Size  Location     Type
  7775 ;;                  4    0[COMRAM] long 
  7776 ;; Registers used:
  7777 ;;		wreg, status,2, status,0
  7778 ;; Tracked objects:
  7779 ;;		On entry : 0/0
  7780 ;;		On exit  : 0/0
  7781 ;;		Unchanged: 0/0
  7782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7783 ;;      Params:         4       0       0       0       0       0       0       0       0
  7784 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7785 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7786 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7787 ;;Total ram usage:       10 bytes
  7788 ;; Hardware stack levels used: 1
  7789 ;; Hardware stack levels required when called: 1
  7790 ;; This function calls:
  7791 ;;		Nothing
  7792 ;; This function is called by:
  7793 ;;		_Atencion_Int_Timer_0
  7794 ;; This function uses a non-reentrant model
  7795 ;;
  7796                           
  7797                           	psect	text41
  7798   001F00                     __ptext41:
  7799                           	callstack 0
  7800   001F00                     i1___fltol:
  7801                           	callstack 19
  7802                           
  7803                           ;incstack = 0
  7804   001F00  3403               	rlcf	(i1___fltol@f1+2)^0,w,c
  7805   001F02  3404               	rlcf	(i1___fltol@f1+3)^0,w,c
  7806   001F04  6E0A               	movwf	i1___fltol@exp1^0,c
  7807   001F06  500A               	movf	i1___fltol@exp1^0,w,c
  7808   001F08  A4D8               	btfss	status,2,c
  7809   001F0A  D009               	goto	i1l3333
  7810   001F0C                     i1u264_20:
  7811   001F0C  0E00               	movlw	0
  7812   001F0E  6E01               	movwf	?i1___fltol^0,c
  7813   001F10  0E00               	movlw	0
  7814   001F12  6E02               	movwf	(?i1___fltol+1)^0,c
  7815   001F14  0E00               	movlw	0
  7816   001F16  6E03               	movwf	(?i1___fltol+2)^0,c
  7817   001F18  0E00               	movlw	0
  7818   001F1A  6E04               	movwf	(?i1___fltol+3)^0,c
  7819   001F1C  0012               	return	
  7820   001F1E                     i1l3333:
  7821   001F1E  C001  F005         	movff	i1___fltol@f1,??i1___fltol
  7822   001F22  C002  F006         	movff	i1___fltol@f1+1,??i1___fltol+1
  7823   001F26  C003  F007         	movff	i1___fltol@f1+2,??i1___fltol+2
  7824   001F2A  C004  F008         	movff	i1___fltol@f1+3,??i1___fltol+3
  7825   001F2E  0E20               	movlw	32
  7826   001F30  D005               	goto	i1u265_20
  7827   001F32                     i1u265_25:
  7828   001F32  90D8               	bcf	status,0,c
  7829   001F34  3208               	rrcf	(??i1___fltol+3)^0,f,c
  7830   001F36  3207               	rrcf	(??i1___fltol+2)^0,f,c
  7831   001F38  3206               	rrcf	(??i1___fltol+1)^0,f,c
  7832   001F3A  3205               	rrcf	??i1___fltol^0,f,c
  7833   001F3C                     i1u265_20:
  7834   001F3C  2EE8               	decfsz	wreg,f,c
  7835   001F3E  D7F9               	goto	i1u265_25
  7836   001F40  5005               	movf	??i1___fltol^0,w,c
  7837   001F42  6E09               	movwf	i1___fltol@sign1^0,c
  7838   001F44  8E03               	bsf	(i1___fltol@f1+2)^0,7,c
  7839   001F46  0EFF               	movlw	255
  7840   001F48  1601               	andwf	i1___fltol@f1^0,f,c
  7841   001F4A  0EFF               	movlw	255
  7842   001F4C  1602               	andwf	(i1___fltol@f1+1)^0,f,c
  7843   001F4E  0EFF               	movlw	255
  7844   001F50  1603               	andwf	(i1___fltol@f1+2)^0,f,c
  7845   001F52  0E00               	movlw	0
  7846   001F54  1604               	andwf	(i1___fltol@f1+3)^0,f,c
  7847   001F56  0E96               	movlw	150
  7848   001F58  5E0A               	subwf	i1___fltol@exp1^0,f,c
  7849   001F5A  AE0A               	btfss	i1___fltol@exp1^0,7,c
  7850   001F5C  D00D               	goto	i1l3353
  7851   001F5E  500A               	movf	i1___fltol@exp1^0,w,c
  7852   001F60  0A80               	xorlw	128
  7853   001F62  0F97               	addlw	151
  7854   001F64  A0D8               	btfss	status,0,c
  7855   001F66  D7D2               	goto	i1u264_20
  7856   001F68                     i1l3349:
  7857   001F68  90D8               	bcf	status,0,c
  7858   001F6A  3204               	rrcf	(i1___fltol@f1+3)^0,f,c
  7859   001F6C  3203               	rrcf	(i1___fltol@f1+2)^0,f,c
  7860   001F6E  3202               	rrcf	(i1___fltol@f1+1)^0,f,c
  7861   001F70  3201               	rrcf	i1___fltol@f1^0,f,c
  7862   001F72  3E0A               	incfsz	i1___fltol@exp1^0,f,c
  7863   001F74  D7F9               	goto	i1l3349
  7864   001F76  D00D               	goto	i1u269_20
  7865   001F78                     i1l3353:
  7866   001F78  0E1F               	movlw	31
  7867   001F7A  640A               	cpfsgt	i1___fltol@exp1^0,c
  7868   001F7C  D007               	goto	i1l3361
  7869   001F7E  D7C6               	goto	i1u264_20
  7870   001F80                     i1l3359:
  7871   001F80  90D8               	bcf	status,0,c
  7872   001F82  3601               	rlcf	i1___fltol@f1^0,f,c
  7873   001F84  3602               	rlcf	(i1___fltol@f1+1)^0,f,c
  7874   001F86  3603               	rlcf	(i1___fltol@f1+2)^0,f,c
  7875   001F88  3604               	rlcf	(i1___fltol@f1+3)^0,f,c
  7876   001F8A  060A               	decf	i1___fltol@exp1^0,f,c
  7877   001F8C                     i1l3361:
  7878   001F8C  500A               	movf	i1___fltol@exp1^0,w,c
  7879   001F8E  A4D8               	btfss	status,2,c
  7880   001F90  D7F7               	goto	i1l3359
  7881   001F92                     i1u269_20:
  7882   001F92  5009               	movf	i1___fltol@sign1^0,w,c
  7883   001F94  B4D8               	btfsc	status,2,c
  7884   001F96  D008               	goto	i1l3367
  7885   001F98  1E04               	comf	(i1___fltol@f1+3)^0,f,c
  7886   001F9A  1E03               	comf	(i1___fltol@f1+2)^0,f,c
  7887   001F9C  1E02               	comf	(i1___fltol@f1+1)^0,f,c
  7888   001F9E  6C01               	negf	i1___fltol@f1^0,c
  7889   001FA0  0E00               	movlw	0
  7890   001FA2  2202               	addwfc	(i1___fltol@f1+1)^0,f,c
  7891   001FA4  2203               	addwfc	(i1___fltol@f1+2)^0,f,c
  7892   001FA6  2204               	addwfc	(i1___fltol@f1+3)^0,f,c
  7893   001FA8                     i1l3367:
  7894   001FA8  C001  F001         	movff	i1___fltol@f1,?i1___fltol
  7895   001FAC  C002  F002         	movff	i1___fltol@f1+1,?i1___fltol+1
  7896   001FB0  C003  F003         	movff	i1___fltol@f1+2,?i1___fltol+2
  7897   001FB4  C004  F004         	movff	i1___fltol@f1+3,?i1___fltol+3
  7898   001FB8  0012               	return		;funcret
  7899   001FBA                     __end_ofi1___fltol:
  7900                           	callstack 0
  7901                           
  7902 ;; *************** function i1___flmul *****************
  7903 ;; Defined at:
  7904 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;  b               4    0[COMRAM] long 
  7907 ;;  a               4    4[COMRAM] long 
  7908 ;; Auto vars:     Size  Location     Type
  7909 ;;  prod            4   19[COMRAM] struct .
  7910 ;;  grs             4   14[COMRAM] unsigned long 
  7911 ;;  temp            2   23[COMRAM] struct .
  7912 ;;  bexp            1   18[COMRAM] unsigned char 
  7913 ;;  aexp            1   13[COMRAM] unsigned char 
  7914 ;;  sign            1   12[COMRAM] unsigned char 
  7915 ;; Return value:  Size  Location     Type
  7916 ;;                  4    0[COMRAM] unsigned char 
  7917 ;; Registers used:
  7918 ;;		wreg, status,2, status,0, prodl, prodh
  7919 ;; Tracked objects:
  7920 ;;		On entry : 0/0
  7921 ;;		On exit  : 0/0
  7922 ;;		Unchanged: 0/0
  7923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7924 ;;      Params:         8       0       0       0       0       0       0       0       0
  7925 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7926 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7927 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7928 ;;Total ram usage:       25 bytes
  7929 ;; Hardware stack levels used: 1
  7930 ;; Hardware stack levels required when called: 1
  7931 ;; This function calls:
  7932 ;;		Nothing
  7933 ;; This function is called by:
  7934 ;;		_Atencion_Int_Timer_0
  7935 ;; This function uses a non-reentrant model
  7936 ;;
  7937                           
  7938                           	psect	text42
  7939   0012CC                     __ptext42:
  7940                           	callstack 0
  7941   0012CC                     i1___flmul:
  7942                           	callstack 19
  7943                           
  7944                           ;incstack = 0
  7945   0012CC  5004               	movf	(i1___flmul@b+3)^0,w,c
  7946   0012CE  0B80               	andlw	128
  7947   0012D0  6E0D               	movwf	i1___flmul@sign^0,c
  7948   0012D2  5004               	movf	(i1___flmul@b+3)^0,w,c
  7949   0012D4  2404               	addwf	(i1___flmul@b+3)^0,w,c
  7950   0012D6  6E13               	movwf	i1___flmul@bexp^0,c
  7951   0012D8  BE03               	btfsc	(i1___flmul@b+2)^0,7,c
  7952   0012DA  8013               	bsf	i1___flmul@bexp^0,0,c
  7953   0012DC  5013               	movf	i1___flmul@bexp^0,w,c
  7954   0012DE  B4D8               	btfsc	status,2,c
  7955   0012E0  D00D               	goto	i1l3385
  7956   0012E2  2813               	incf	i1___flmul@bexp^0,w,c
  7957   0012E4  A4D8               	btfss	status,2,c
  7958   0012E6  D008               	goto	i1l3383
  7959   0012E8  0E00               	movlw	0
  7960   0012EA  6E01               	movwf	i1___flmul@b^0,c
  7961   0012EC  0E00               	movlw	0
  7962   0012EE  6E02               	movwf	(i1___flmul@b+1)^0,c
  7963   0012F0  0E00               	movlw	0
  7964   0012F2  6E03               	movwf	(i1___flmul@b+2)^0,c
  7965   0012F4  0E00               	movlw	0
  7966   0012F6  6E04               	movwf	(i1___flmul@b+3)^0,c
  7967   0012F8                     i1l3383:
  7968   0012F8  8E03               	bsf	(i1___flmul@b+2)^0,7,c
  7969   0012FA  D008               	goto	i1l3387
  7970   0012FC                     i1l3385:
  7971   0012FC  0E00               	movlw	0
  7972   0012FE  6E01               	movwf	i1___flmul@b^0,c
  7973   001300  0E00               	movlw	0
  7974   001302  6E02               	movwf	(i1___flmul@b+1)^0,c
  7975   001304  0E00               	movlw	0
  7976   001306  6E03               	movwf	(i1___flmul@b+2)^0,c
  7977   001308  0E00               	movlw	0
  7978   00130A  6E04               	movwf	(i1___flmul@b+3)^0,c
  7979   00130C                     i1l3387:
  7980   00130C  5008               	movf	(i1___flmul@a+3)^0,w,c
  7981   00130E  0B80               	andlw	128
  7982   001310  1A0D               	xorwf	i1___flmul@sign^0,f,c
  7983   001312  5008               	movf	(i1___flmul@a+3)^0,w,c
  7984   001314  2408               	addwf	(i1___flmul@a+3)^0,w,c
  7985   001316  6E0E               	movwf	i1___flmul@aexp^0,c
  7986   001318  BE07               	btfsc	(i1___flmul@a+2)^0,7,c
  7987   00131A  800E               	bsf	i1___flmul@aexp^0,0,c
  7988   00131C  500E               	movf	i1___flmul@aexp^0,w,c
  7989   00131E  B4D8               	btfsc	status,2,c
  7990   001320  D00D               	goto	i1l3403
  7991   001322  280E               	incf	i1___flmul@aexp^0,w,c
  7992   001324  A4D8               	btfss	status,2,c
  7993   001326  D008               	goto	i1l3401
  7994   001328  0E00               	movlw	0
  7995   00132A  6E05               	movwf	i1___flmul@a^0,c
  7996   00132C  0E00               	movlw	0
  7997   00132E  6E06               	movwf	(i1___flmul@a+1)^0,c
  7998   001330  0E00               	movlw	0
  7999   001332  6E07               	movwf	(i1___flmul@a+2)^0,c
  8000   001334  0E00               	movlw	0
  8001   001336  6E08               	movwf	(i1___flmul@a+3)^0,c
  8002   001338                     i1l3401:
  8003   001338  8E07               	bsf	(i1___flmul@a+2)^0,7,c
  8004   00133A  D008               	goto	i1l1217
  8005   00133C                     i1l3403:
  8006   00133C  0E00               	movlw	0
  8007   00133E  6E05               	movwf	i1___flmul@a^0,c
  8008   001340  0E00               	movlw	0
  8009   001342  6E06               	movwf	(i1___flmul@a+1)^0,c
  8010   001344  0E00               	movlw	0
  8011   001346  6E07               	movwf	(i1___flmul@a+2)^0,c
  8012   001348  0E00               	movlw	0
  8013   00134A  6E08               	movwf	(i1___flmul@a+3)^0,c
  8014   00134C                     i1l1217:
  8015   00134C  500E               	movf	i1___flmul@aexp^0,w,c
  8016   00134E  B4D8               	btfsc	status,2,c
  8017   001350  D003               	goto	i1u278_20
  8018   001352  5013               	movf	i1___flmul@bexp^0,w,c
  8019   001354  A4D8               	btfss	status,2,c
  8020   001356  D009               	goto	i1l3411
  8021   001358                     i1u278_20:
  8022   001358  0E00               	movlw	0
  8023   00135A  6E01               	movwf	?i1___flmul^0,c
  8024   00135C  0E00               	movlw	0
  8025   00135E  6E02               	movwf	(?i1___flmul+1)^0,c
  8026   001360  0E00               	movlw	0
  8027   001362  6E03               	movwf	(?i1___flmul+2)^0,c
  8028   001364  0E00               	movlw	0
  8029   001366  6E04               	movwf	(?i1___flmul+3)^0,c
  8030   001368  0012               	return	
  8031   00136A                     i1l3411:
  8032   00136A  5007               	movf	(i1___flmul@a+2)^0,w,c
  8033   00136C  0201               	mulwf	i1___flmul@b^0,c
  8034   00136E  CFF3 F018          	movff	prodl,i1___flmul@temp
  8035   001372  CFF4 F019          	movff	prodh,i1___flmul@temp+1
  8036   001376  5018               	movf	i1___flmul@temp^0,w,c
  8037   001378  6E0F               	movwf	i1___flmul@grs^0,c
  8038   00137A  6A10               	clrf	(i1___flmul@grs+1)^0,c
  8039   00137C  6A11               	clrf	(i1___flmul@grs+2)^0,c
  8040   00137E  6A12               	clrf	(i1___flmul@grs+3)^0,c
  8041   001380  5019               	movf	(i1___flmul@temp+1)^0,w,c
  8042   001382  6E14               	movwf	i1___flmul@prod^0,c
  8043   001384  6A15               	clrf	(i1___flmul@prod+1)^0,c
  8044   001386  6A16               	clrf	(i1___flmul@prod+2)^0,c
  8045   001388  6A17               	clrf	(i1___flmul@prod+3)^0,c
  8046   00138A  5006               	movf	(i1___flmul@a+1)^0,w,c
  8047   00138C  0202               	mulwf	(i1___flmul@b+1)^0,c
  8048   00138E  CFF3 F018          	movff	prodl,i1___flmul@temp
  8049   001392  CFF4 F019          	movff	prodh,i1___flmul@temp+1
  8050   001396  5018               	movf	i1___flmul@temp^0,w,c
  8051   001398  260F               	addwf	i1___flmul@grs^0,f,c
  8052   00139A  0E00               	movlw	0
  8053   00139C  2210               	addwfc	(i1___flmul@grs+1)^0,f,c
  8054   00139E  2211               	addwfc	(i1___flmul@grs+2)^0,f,c
  8055   0013A0  2212               	addwfc	(i1___flmul@grs+3)^0,f,c
  8056   0013A2  5019               	movf	(i1___flmul@temp+1)^0,w,c
  8057   0013A4  2614               	addwf	i1___flmul@prod^0,f,c
  8058   0013A6  0E00               	movlw	0
  8059   0013A8  2215               	addwfc	(i1___flmul@prod+1)^0,f,c
  8060   0013AA  2216               	addwfc	(i1___flmul@prod+2)^0,f,c
  8061   0013AC  2217               	addwfc	(i1___flmul@prod+3)^0,f,c
  8062   0013AE  5005               	movf	i1___flmul@a^0,w,c
  8063   0013B0  0203               	mulwf	(i1___flmul@b+2)^0,c
  8064   0013B2  CFF3 F018          	movff	prodl,i1___flmul@temp
  8065   0013B6  CFF4 F019          	movff	prodh,i1___flmul@temp+1
  8066   0013BA  5018               	movf	i1___flmul@temp^0,w,c
  8067   0013BC  260F               	addwf	i1___flmul@grs^0,f,c
  8068   0013BE  0E00               	movlw	0
  8069   0013C0  2210               	addwfc	(i1___flmul@grs+1)^0,f,c
  8070   0013C2  2211               	addwfc	(i1___flmul@grs+2)^0,f,c
  8071   0013C4  2212               	addwfc	(i1___flmul@grs+3)^0,f,c
  8072   0013C6  5019               	movf	(i1___flmul@temp+1)^0,w,c
  8073   0013C8  2614               	addwf	i1___flmul@prod^0,f,c
  8074   0013CA  0E00               	movlw	0
  8075   0013CC  2215               	addwfc	(i1___flmul@prod+1)^0,f,c
  8076   0013CE  2216               	addwfc	(i1___flmul@prod+2)^0,f,c
  8077   0013D0  2217               	addwfc	(i1___flmul@prod+3)^0,f,c
  8078   0013D2  C011  F012         	movff	i1___flmul@grs+2,i1___flmul@grs+3
  8079   0013D6  C010  F011         	movff	i1___flmul@grs+1,i1___flmul@grs+2
  8080   0013DA  C00F  F010         	movff	i1___flmul@grs,i1___flmul@grs+1
  8081   0013DE  6A0F               	clrf	i1___flmul@grs^0,c
  8082   0013E0  5005               	movf	i1___flmul@a^0,w,c
  8083   0013E2  0202               	mulwf	(i1___flmul@b+1)^0,c
  8084   0013E4  CFF3 F018          	movff	prodl,i1___flmul@temp
  8085   0013E8  CFF4 F019          	movff	prodh,i1___flmul@temp+1
  8086   0013EC  5018               	movf	i1___flmul@temp^0,w,c
  8087   0013EE  260F               	addwf	i1___flmul@grs^0,f,c
  8088   0013F0  5019               	movf	(i1___flmul@temp+1)^0,w,c
  8089   0013F2  2210               	addwfc	(i1___flmul@grs+1)^0,f,c
  8090   0013F4  0E00               	movlw	0
  8091   0013F6  2211               	addwfc	(i1___flmul@grs+2)^0,f,c
  8092   0013F8  0E00               	movlw	0
  8093   0013FA  2212               	addwfc	(i1___flmul@grs+3)^0,f,c
  8094   0013FC  5006               	movf	(i1___flmul@a+1)^0,w,c
  8095   0013FE  0201               	mulwf	i1___flmul@b^0,c
  8096   001400  CFF3 F018          	movff	prodl,i1___flmul@temp
  8097   001404  CFF4 F019          	movff	prodh,i1___flmul@temp+1
  8098   001408  5018               	movf	i1___flmul@temp^0,w,c
  8099   00140A  260F               	addwf	i1___flmul@grs^0,f,c
  8100   00140C  5019               	movf	(i1___flmul@temp+1)^0,w,c
  8101   00140E  2210               	addwfc	(i1___flmul@grs+1)^0,f,c
  8102   001410  0E00               	movlw	0
  8103   001412  2211               	addwfc	(i1___flmul@grs+2)^0,f,c
  8104   001414  0E00               	movlw	0
  8105   001416  2212               	addwfc	(i1___flmul@grs+3)^0,f,c
  8106   001418  C011  F012         	movff	i1___flmul@grs+2,i1___flmul@grs+3
  8107   00141C  C010  F011         	movff	i1___flmul@grs+1,i1___flmul@grs+2
  8108   001420  C00F  F010         	movff	i1___flmul@grs,i1___flmul@grs+1
  8109   001424  6A0F               	clrf	i1___flmul@grs^0,c
  8110   001426  5005               	movf	i1___flmul@a^0,w,c
  8111   001428  0201               	mulwf	i1___flmul@b^0,c
  8112   00142A  CFF3 F018          	movff	prodl,i1___flmul@temp
  8113   00142E  CFF4 F019          	movff	prodh,i1___flmul@temp+1
  8114   001432  5018               	movf	i1___flmul@temp^0,w,c
  8115   001434  260F               	addwf	i1___flmul@grs^0,f,c
  8116   001436  5019               	movf	(i1___flmul@temp+1)^0,w,c
  8117   001438  2210               	addwfc	(i1___flmul@grs+1)^0,f,c
  8118   00143A  0E00               	movlw	0
  8119   00143C  2211               	addwfc	(i1___flmul@grs+2)^0,f,c
  8120   00143E  0E00               	movlw	0
  8121   001440  2212               	addwfc	(i1___flmul@grs+3)^0,f,c
  8122   001442  5007               	movf	(i1___flmul@a+2)^0,w,c
  8123   001444  0202               	mulwf	(i1___flmul@b+1)^0,c
  8124   001446  CFF3 F018          	movff	prodl,i1___flmul@temp
  8125   00144A  CFF4 F019          	movff	prodh,i1___flmul@temp+1
  8126   00144E  5018               	movf	i1___flmul@temp^0,w,c
  8127   001450  2614               	addwf	i1___flmul@prod^0,f,c
  8128   001452  5019               	movf	(i1___flmul@temp+1)^0,w,c
  8129   001454  2215               	addwfc	(i1___flmul@prod+1)^0,f,c
  8130   001456  0E00               	movlw	0
  8131   001458  2216               	addwfc	(i1___flmul@prod+2)^0,f,c
  8132   00145A  0E00               	movlw	0
  8133   00145C  2217               	addwfc	(i1___flmul@prod+3)^0,f,c
  8134   00145E  5006               	movf	(i1___flmul@a+1)^0,w,c
  8135   001460  0203               	mulwf	(i1___flmul@b+2)^0,c
  8136   001462  CFF3 F018          	movff	prodl,i1___flmul@temp
  8137   001466  CFF4 F019          	movff	prodh,i1___flmul@temp+1
  8138   00146A  5018               	movf	i1___flmul@temp^0,w,c
  8139   00146C  2614               	addwf	i1___flmul@prod^0,f,c
  8140   00146E  5019               	movf	(i1___flmul@temp+1)^0,w,c
  8141   001470  2215               	addwfc	(i1___flmul@prod+1)^0,f,c
  8142   001472  0E00               	movlw	0
  8143   001474  2216               	addwfc	(i1___flmul@prod+2)^0,f,c
  8144   001476  0E00               	movlw	0
  8145   001478  2217               	addwfc	(i1___flmul@prod+3)^0,f,c
  8146   00147A  5007               	movf	(i1___flmul@a+2)^0,w,c
  8147   00147C  0203               	mulwf	(i1___flmul@b+2)^0,c
  8148   00147E  CFF3 F018          	movff	prodl,i1___flmul@temp
  8149   001482  CFF4 F019          	movff	prodh,i1___flmul@temp+1
  8150   001486  5018               	movf	i1___flmul@temp^0,w,c
  8151   001488  6E09               	movwf	??i1___flmul^0,c
  8152   00148A  5019               	movf	(i1___flmul@temp+1)^0,w,c
  8153   00148C  6E0A               	movwf	(??i1___flmul+1)^0,c
  8154   00148E  6A0B               	clrf	(??i1___flmul+2)^0,c
  8155   001490  6A0C               	clrf	(??i1___flmul+3)^0,c
  8156   001492  C00B  F00C         	movff	??i1___flmul+2,??i1___flmul+3
  8157   001496  C00A  F00B         	movff	??i1___flmul+1,??i1___flmul+2
  8158   00149A  C009  F00A         	movff	??i1___flmul,??i1___flmul+1
  8159   00149E  6A09               	clrf	??i1___flmul^0,c
  8160   0014A0  5009               	movf	??i1___flmul^0,w,c
  8161   0014A2  2614               	addwf	i1___flmul@prod^0,f,c
  8162   0014A4  500A               	movf	(??i1___flmul+1)^0,w,c
  8163   0014A6  2215               	addwfc	(i1___flmul@prod+1)^0,f,c
  8164   0014A8  500B               	movf	(??i1___flmul+2)^0,w,c
  8165   0014AA  2216               	addwfc	(i1___flmul@prod+2)^0,f,c
  8166   0014AC  500C               	movf	(??i1___flmul+3)^0,w,c
  8167   0014AE  2217               	addwfc	(i1___flmul@prod+3)^0,f,c
  8168   0014B0  5012               	movf	(i1___flmul@grs+3)^0,w,c
  8169   0014B2  2614               	addwf	i1___flmul@prod^0,f,c
  8170   0014B4  0E00               	movlw	0
  8171   0014B6  2215               	addwfc	(i1___flmul@prod+1)^0,f,c
  8172   0014B8  2216               	addwfc	(i1___flmul@prod+2)^0,f,c
  8173   0014BA  2217               	addwfc	(i1___flmul@prod+3)^0,f,c
  8174   0014BC  C011  F012         	movff	i1___flmul@grs+2,i1___flmul@grs+3
  8175   0014C0  C010  F011         	movff	i1___flmul@grs+1,i1___flmul@grs+2
  8176   0014C4  C00F  F010         	movff	i1___flmul@grs,i1___flmul@grs+1
  8177   0014C8  6A0F               	clrf	i1___flmul@grs^0,c
  8178   0014CA  500E               	movf	i1___flmul@aexp^0,w,c
  8179   0014CC  C013  F009         	movff	i1___flmul@bexp,??i1___flmul
  8180   0014D0  6A0A               	clrf	(??i1___flmul+1)^0,c
  8181   0014D2  2609               	addwf	??i1___flmul^0,f,c
  8182   0014D4  0E00               	movlw	0
  8183   0014D6  220A               	addwfc	(??i1___flmul+1)^0,f,c
  8184   0014D8  0E82               	movlw	130
  8185   0014DA  2409               	addwf	??i1___flmul^0,w,c
  8186   0014DC  6E18               	movwf	i1___flmul@temp^0,c
  8187   0014DE  0EFF               	movlw	255
  8188   0014E0  200A               	addwfc	(??i1___flmul+1)^0,w,c
  8189   0014E2  6E19               	movwf	(i1___flmul@temp+1)^0,c
  8190   0014E4  D00F               	goto	i1l3459
  8191   0014E6                     i1l3453:
  8192   0014E6  90D8               	bcf	status,0,c
  8193   0014E8  3614               	rlcf	i1___flmul@prod^0,f,c
  8194   0014EA  3615               	rlcf	(i1___flmul@prod+1)^0,f,c
  8195   0014EC  3616               	rlcf	(i1___flmul@prod+2)^0,f,c
  8196   0014EE  3617               	rlcf	(i1___flmul@prod+3)^0,f,c
  8197   0014F0  BE12               	btfsc	(i1___flmul@grs+3)^0,7,c
  8198   0014F2  8014               	bsf	i1___flmul@prod^0,0,c
  8199   0014F4  90D8               	bcf	status,0,c
  8200   0014F6  360F               	rlcf	i1___flmul@grs^0,f,c
  8201   0014F8  3610               	rlcf	(i1___flmul@grs+1)^0,f,c
  8202   0014FA  3611               	rlcf	(i1___flmul@grs+2)^0,f,c
  8203   0014FC  3612               	rlcf	(i1___flmul@grs+3)^0,f,c
  8204   0014FE  0618               	decf	i1___flmul@temp^0,f,c
  8205   001500  A0D8               	btfss	status,0,c
  8206   001502  0619               	decf	(i1___flmul@temp+1)^0,f,c
  8207   001504                     i1l3459:
  8208   001504  AE16               	btfss	(i1___flmul@prod+2)^0,7,c
  8209   001506  D7EF               	goto	i1l3453
  8210   001508  0E00               	movlw	0
  8211   00150A  6E0E               	movwf	i1___flmul@aexp^0,c
  8212   00150C  AE12               	btfss	(i1___flmul@grs+3)^0,7,c
  8213   00150E  D017               	goto	i1l1226
  8214   001510  0EFF               	movlw	255
  8215   001512  140F               	andwf	i1___flmul@grs^0,w,c
  8216   001514  6E09               	movwf	??i1___flmul^0,c
  8217   001516  0EFF               	movlw	255
  8218   001518  1410               	andwf	(i1___flmul@grs+1)^0,w,c
  8219   00151A  6E0A               	movwf	(??i1___flmul+1)^0,c
  8220   00151C  0EFF               	movlw	255
  8221   00151E  1411               	andwf	(i1___flmul@grs+2)^0,w,c
  8222   001520  6E0B               	movwf	(??i1___flmul+2)^0,c
  8223   001522  0E7F               	movlw	127
  8224   001524  1412               	andwf	(i1___flmul@grs+3)^0,w,c
  8225   001526  6E0C               	movwf	(??i1___flmul+3)^0,c
  8226   001528  5009               	movf	??i1___flmul^0,w,c
  8227   00152A  100A               	iorwf	(??i1___flmul+1)^0,w,c
  8228   00152C  100B               	iorwf	(??i1___flmul+2)^0,w,c
  8229   00152E  100C               	iorwf	(??i1___flmul+3)^0,w,c
  8230   001530  B4D8               	btfsc	status,2,c
  8231   001532  D003               	goto	i1l1227
  8232   001534                     i1u282_20:
  8233   001534  0E01               	movlw	1
  8234   001536  6E0E               	movwf	i1___flmul@aexp^0,c
  8235   001538  D002               	goto	i1l1226
  8236   00153A                     i1l1227:
  8237   00153A  B014               	btfsc	i1___flmul@prod^0,0,c
  8238   00153C  D7FB               	goto	i1u282_20
  8239   00153E                     i1l1226:
  8240   00153E  500E               	movf	i1___flmul@aexp^0,w,c
  8241   001540  B4D8               	btfsc	status,2,c
  8242   001542  D01F               	goto	i1l3479
  8243   001544  0E01               	movlw	1
  8244   001546  2614               	addwf	i1___flmul@prod^0,f,c
  8245   001548  0E00               	movlw	0
  8246   00154A  2215               	addwfc	(i1___flmul@prod+1)^0,f,c
  8247   00154C  2216               	addwfc	(i1___flmul@prod+2)^0,f,c
  8248   00154E  2217               	addwfc	(i1___flmul@prod+3)^0,f,c
  8249   001550  A017               	btfss	(i1___flmul@prod+3)^0,0,c
  8250   001552  D017               	goto	i1l3479
  8251   001554  C014  F009         	movff	i1___flmul@prod,??i1___flmul
  8252   001558  C015  F00A         	movff	i1___flmul@prod+1,??i1___flmul+1
  8253   00155C  C016  F00B         	movff	i1___flmul@prod+2,??i1___flmul+2
  8254   001560  C017  F00C         	movff	i1___flmul@prod+3,??i1___flmul+3
  8255   001564  340C               	rlcf	(??i1___flmul+3)^0,w,c
  8256   001566  320C               	rrcf	(??i1___flmul+3)^0,f,c
  8257   001568  320B               	rrcf	(??i1___flmul+2)^0,f,c
  8258   00156A  320A               	rrcf	(??i1___flmul+1)^0,f,c
  8259   00156C  3209               	rrcf	??i1___flmul^0,f,c
  8260   00156E  C009  F014         	movff	??i1___flmul,i1___flmul@prod
  8261   001572  C00A  F015         	movff	??i1___flmul+1,i1___flmul@prod+1
  8262   001576  C00B  F016         	movff	??i1___flmul+2,i1___flmul@prod+2
  8263   00157A  C00C  F017         	movff	??i1___flmul+3,i1___flmul@prod+3
  8264   00157E  4A18               	infsnz	i1___flmul@temp^0,f,c
  8265   001580  2A19               	incf	(i1___flmul@temp+1)^0,f,c
  8266   001582                     i1l3479:
  8267   001582  BE19               	btfsc	(i1___flmul@temp+1)^0,7,c
  8268   001584  D00D               	goto	i1l3483
  8269   001586  5019               	movf	(i1___flmul@temp+1)^0,w,c
  8270   001588  E103               	bnz	i1u286_20
  8271   00158A  2818               	incf	i1___flmul@temp^0,w,c
  8272   00158C  A0D8               	btfss	status,0,c
  8273   00158E  D008               	goto	i1l3483
  8274   001590                     i1u286_20:
  8275   001590  0E00               	movlw	0
  8276   001592  6E14               	movwf	i1___flmul@prod^0,c
  8277   001594  0E00               	movlw	0
  8278   001596  6E15               	movwf	(i1___flmul@prod+1)^0,c
  8279   001598  0E80               	movlw	128
  8280   00159A  6E16               	movwf	(i1___flmul@prod+2)^0,c
  8281   00159C  0E7F               	movlw	127
  8282   00159E  D020               	goto	L10
  8283   0015A0                     i1l3483:
  8284   0015A0  BE19               	btfsc	(i1___flmul@temp+1)^0,7,c
  8285   0015A2  D005               	goto	i1u287_20
  8286   0015A4  5019               	movf	(i1___flmul@temp+1)^0,w,c
  8287   0015A6  E10E               	bnz	i1l1234
  8288   0015A8  0418               	decf	i1___flmul@temp^0,w,c
  8289   0015AA  B0D8               	btfsc	status,0,c
  8290   0015AC  D00B               	goto	i1l1234
  8291   0015AE                     i1u287_20:
  8292   0015AE  0E00               	movlw	0
  8293   0015B0  6E14               	movwf	i1___flmul@prod^0,c
  8294   0015B2  0E00               	movlw	0
  8295   0015B4  6E15               	movwf	(i1___flmul@prod+1)^0,c
  8296   0015B6  0E00               	movlw	0
  8297   0015B8  6E16               	movwf	(i1___flmul@prod+2)^0,c
  8298   0015BA  0E00               	movlw	0
  8299   0015BC  6E17               	movwf	(i1___flmul@prod+3)^0,c
  8300   0015BE  0E00               	movlw	0
  8301   0015C0  6E0D               	movwf	i1___flmul@sign^0,c
  8302   0015C2  D00F               	goto	i1l3495
  8303   0015C4                     i1l1234:
  8304   0015C4  C018  F013         	movff	i1___flmul@temp,i1___flmul@bexp
  8305   0015C8  0EFF               	movlw	255
  8306   0015CA  1614               	andwf	i1___flmul@prod^0,f,c
  8307   0015CC  0EFF               	movlw	255
  8308   0015CE  1615               	andwf	(i1___flmul@prod+1)^0,f,c
  8309   0015D0  0E7F               	movlw	127
  8310   0015D2  1616               	andwf	(i1___flmul@prod+2)^0,f,c
  8311   0015D4  0E00               	movlw	0
  8312   0015D6  1617               	andwf	(i1___flmul@prod+3)^0,f,c
  8313   0015D8  B013               	btfsc	i1___flmul@bexp^0,0,c
  8314   0015DA  8E16               	bsf	(i1___flmul@prod+2)^0,7,c
  8315   0015DC  90D8               	bcf	status,0,c
  8316   0015DE  3013               	rrcf	i1___flmul@bexp^0,w,c
  8317   0015E0                     L10:
  8318   0015E0  6E17               	movwf	(i1___flmul@prod+3)^0,c
  8319   0015E2                     i1l3495:
  8320   0015E2  500D               	movf	i1___flmul@sign^0,w,c
  8321   0015E4  1217               	iorwf	(i1___flmul@prod+3)^0,f,c
  8322   0015E6  C014  F001         	movff	i1___flmul@prod,?i1___flmul
  8323   0015EA  C015  F002         	movff	i1___flmul@prod+1,?i1___flmul+1
  8324   0015EE  C016  F003         	movff	i1___flmul@prod+2,?i1___flmul+2
  8325   0015F2  C017  F004         	movff	i1___flmul@prod+3,?i1___flmul+3
  8326   0015F6  0012               	return		;funcret
  8327   0015F8                     __end_ofi1___flmul:
  8328                           	callstack 0
  8329                           
  8330 ;; *************** function _high_isr *****************
  8331 ;; Defined at:
  8332 ;;		line 7 in file "interrupt_manager.c"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;		None
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;		None
  8337 ;; Return value:  Size  Location     Type
  8338 ;;                  1    wreg      void 
  8339 ;; Registers used:
  8340 ;;		None
  8341 ;; Tracked objects:
  8342 ;;		On entry : 0/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8346 ;;      Params:         0       0       0       0       0       0       0       0       0
  8347 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8348 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8349 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8350 ;;Total ram usage:        0 bytes
  8351 ;; Hardware stack levels used: 1
  8352 ;; This function calls:
  8353 ;;		Nothing
  8354 ;; This function is called by:
  8355 ;;		Interrupt level 2
  8356 ;; This function uses a non-reentrant model
  8357 ;;
  8358                           
  8359                           	psect	intcode
  8360   000008                     __pintcode:
  8361                           	callstack 0
  8362   000008                     _high_isr:
  8363                           	callstack 19
  8364                           
  8365                           ;incstack = 0
  8366   000008  8241               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8367   00000A  ED0D  F014         	call	int_func,f	;refresh shadow registers
  8368                           
  8369                           	psect	intcode_body
  8370   00281A                     __pintcode_body:
  8371                           	callstack 19
  8372   00281A                     int_func:
  8373                           	callstack 19
  8374   00281A  0006               	pop		; remove dummy address from shadow register refresh
  8375   00281C  9241               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8376   00281E  0011               	retfie		f
  8377   002820                     __end_of_high_isr:
  8378                           	callstack 0
  8379                           
  8380                           	psect	rparam
  8381   000000                     
  8382                           	psect	temp
  8383   000041                     btemp:
  8384                           	callstack 0
  8385   000041                     	ds	1
  8386   000000                     int$flags	set	btemp
  8387   000000                     wtemp8	set	btemp+1
  8388   000000                     ttemp5	set	btemp+1
  8389   000000                     ttemp6	set	btemp+4
  8390   000000                     ttemp7	set	btemp+8
  8391                           
  8392                           	psect	idloc
  8393                           
  8394                           ;Config register IDLOC0 @ 0x200000
  8395                           ;	unspecified, using default values
  8396   200000                     	org	2097152
  8397   200000  FF                 	db	255
  8398                           
  8399                           ;Config register IDLOC1 @ 0x200001
  8400                           ;	unspecified, using default values
  8401   200001                     	org	2097153
  8402   200001  FF                 	db	255
  8403                           
  8404                           ;Config register IDLOC2 @ 0x200002
  8405                           ;	unspecified, using default values
  8406   200002                     	org	2097154
  8407   200002  FF                 	db	255
  8408                           
  8409                           ;Config register IDLOC3 @ 0x200003
  8410                           ;	unspecified, using default values
  8411   200003                     	org	2097155
  8412   200003  FF                 	db	255
  8413                           
  8414                           ;Config register IDLOC4 @ 0x200004
  8415                           ;	unspecified, using default values
  8416   200004                     	org	2097156
  8417   200004  FF                 	db	255
  8418                           
  8419                           ;Config register IDLOC5 @ 0x200005
  8420                           ;	unspecified, using default values
  8421   200005                     	org	2097157
  8422   200005  FF                 	db	255
  8423                           
  8424                           ;Config register IDLOC6 @ 0x200006
  8425                           ;	unspecified, using default values
  8426   200006                     	org	2097158
  8427   200006  FF                 	db	255
  8428                           
  8429                           ;Config register IDLOC7 @ 0x200007
  8430                           ;	unspecified, using default values
  8431   200007                     	org	2097159
  8432   200007  FF                 	db	255
  8433                           
  8434                           	psect	config
  8435                           
  8436                           ;Config register CONFIG1L @ 0x300000
  8437                           ;	PLL Prescaler Selection bits
  8438                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8439                           ;	System Clock Postscaler Selection bits
  8440                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8441                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8442                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8443   300000                     	org	3145728
  8444   300000  00                 	db	0
  8445                           
  8446                           ;Config register CONFIG1H @ 0x300001
  8447                           ;	Oscillator Selection bits
  8448                           ;	FOSC = HS, HS oscillator (HS)
  8449                           ;	Fail-Safe Clock Monitor Enable bit
  8450                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8451                           ;	Internal/External Oscillator Switchover bit
  8452                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8453   300001                     	org	3145729
  8454   300001  0C                 	db	12
  8455                           
  8456                           ;Config register CONFIG2L @ 0x300002
  8457                           ;	Power-up Timer Enable bit
  8458                           ;	PWRT = OFF, PWRT disabled
  8459                           ;	Brown-out Reset Enable bits
  8460                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  8461                           ;	Brown-out Reset Voltage bits
  8462                           ;	BORV = 3, Minimum setting 2.05V
  8463                           ;	USB Voltage Regulator Enable bit
  8464                           ;	VREGEN = OFF, USB voltage regulator disabled
  8465   300002                     	org	3145730
  8466   300002  19                 	db	25
  8467                           
  8468                           ;Config register CONFIG2H @ 0x300003
  8469                           ;	Watchdog Timer Enable bit
  8470                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8471                           ;	Watchdog Timer Postscale Select bits
  8472                           ;	WDTPS = 32768, 1:32768
  8473   300003                     	org	3145731
  8474   300003  1E                 	db	30
  8475                           
  8476                           ; Padding undefined space
  8477   300004                     	org	3145732
  8478   300004  FF                 	db	255
  8479                           
  8480                           ;Config register CONFIG3H @ 0x300005
  8481                           ;	CCP2 MUX bit
  8482                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  8483                           ;	PORTB A/D Enable bit
  8484                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8485                           ;	Low-Power Timer 1 Oscillator Enable bit
  8486                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8487                           ;	MCLR Pin Enable bit
  8488                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8489   300005                     	org	3145733
  8490   300005  81                 	db	129
  8491                           
  8492                           ;Config register CONFIG4L @ 0x300006
  8493                           ;	Stack Full/Underflow Reset Enable bit
  8494                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8495                           ;	Single-Supply ICSP Enable bit
  8496                           ;	LVP = OFF, Single-Supply ICSP disabled
  8497                           ;	Extended Instruction Set Enable bit
  8498                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8499                           ;	Background Debugger Enable bit
  8500                           ;	DEBUG = 0x1, unprogrammed default
  8501   300006                     	org	3145734
  8502   300006  81                 	db	129
  8503                           
  8504                           ; Padding undefined space
  8505   300007                     	org	3145735
  8506   300007  FF                 	db	255
  8507                           
  8508                           ;Config register CONFIG5L @ 0x300008
  8509                           ;	Code Protection bit
  8510                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8511                           ;	Code Protection bit
  8512                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8513                           ;	Code Protection bit
  8514                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8515                           ;	Code Protection bit
  8516                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8517   300008                     	org	3145736
  8518   300008  0F                 	db	15
  8519                           
  8520                           ;Config register CONFIG5H @ 0x300009
  8521                           ;	Boot Block Code Protection bit
  8522                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8523                           ;	Data EEPROM Code Protection bit
  8524                           ;	CPD = OFF, Data EEPROM is not code-protected
  8525   300009                     	org	3145737
  8526   300009  C0                 	db	192
  8527                           
  8528                           ;Config register CONFIG6L @ 0x30000A
  8529                           ;	Write Protection bit
  8530                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8531                           ;	Write Protection bit
  8532                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8533                           ;	Write Protection bit
  8534                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8535                           ;	Write Protection bit
  8536                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8537   30000A                     	org	3145738
  8538   30000A  0F                 	db	15
  8539                           
  8540                           ;Config register CONFIG6H @ 0x30000B
  8541                           ;	Configuration Register Write Protection bit
  8542                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8543                           ;	Boot Block Write Protection bit
  8544                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8545                           ;	Data EEPROM Write Protection bit
  8546                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8547   30000B                     	org	3145739
  8548   30000B  E0                 	db	224
  8549                           
  8550                           ;Config register CONFIG7L @ 0x30000C
  8551                           ;	Table Read Protection bit
  8552                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8553                           ;	Table Read Protection bit
  8554                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8555                           ;	Table Read Protection bit
  8556                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8557                           ;	Table Read Protection bit
  8558                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8559   30000C                     	org	3145740
  8560   30000C  0F                 	db	15
  8561                           
  8562                           ;Config register CONFIG7H @ 0x30000D
  8563                           ;	Boot Block Table Read Protection bit
  8564                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8565   30000D                     	org	3145741
  8566   30000D  40                 	db	64
  8567                           tosu	equ	0xFFF
  8568                           tosh	equ	0xFFE
  8569                           tosl	equ	0xFFD
  8570                           stkptr	equ	0xFFC
  8571                           pclatu	equ	0xFFB
  8572                           pclath	equ	0xFFA
  8573                           pcl	equ	0xFF9
  8574                           tblptru	equ	0xFF8
  8575                           tblptrh	equ	0xFF7
  8576                           tblptrl	equ	0xFF6
  8577                           tablat	equ	0xFF5
  8578                           prodh	equ	0xFF4
  8579                           prodl	equ	0xFF3
  8580                           indf0	equ	0xFEF
  8581                           postinc0	equ	0xFEE
  8582                           postdec0	equ	0xFED
  8583                           preinc0	equ	0xFEC
  8584                           plusw0	equ	0xFEB
  8585                           fsr0h	equ	0xFEA
  8586                           fsr0l	equ	0xFE9
  8587                           wreg	equ	0xFE8
  8588                           indf1	equ	0xFE7
  8589                           postinc1	equ	0xFE6
  8590                           postdec1	equ	0xFE5
  8591                           preinc1	equ	0xFE4
  8592                           plusw1	equ	0xFE3
  8593                           fsr1h	equ	0xFE2
  8594                           fsr1l	equ	0xFE1
  8595                           bsr	equ	0xFE0
  8596                           indf2	equ	0xFDF
  8597                           postinc2	equ	0xFDE
  8598                           postdec2	equ	0xFDD
  8599                           preinc2	equ	0xFDC
  8600                           plusw2	equ	0xFDB
  8601                           fsr2h	equ	0xFDA
  8602                           fsr2l	equ	0xFD9
  8603                           status	equ	0xFD8

Data Sizes:
    Strings     46
    Constant    0
    Data        2
    BSS         294
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      64
    BANK0           160     54     160
    BANK1           256     38     199
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 35
		 -> STR_5(CODE[9]), STR_4(CODE[35]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 35
		 -> STR_5(CODE[9]), STR_4(CODE[35]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 35
		 -> STR_5(CODE[9]), STR_4(CODE[35]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S2468$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 1
		 -> sprintf@ap(BANK1[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 35
		 -> STR_5(CODE[9]), STR_4(CODE[35]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 60
		 -> check_sum_str(BANK1[9]), datos_sensores_afm_radio(BANK1[60]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S2409$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2409$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    UART_Enviar_Cadena@cadena	PTR const unsigned char  size(2) Largest target is 60
		 -> STR_3(CODE[2]), datos_sensores_afm_pc(BANK1[60]), STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMRAM

    _main->___lldiv
    _utoa->___lwmod
    _utoa->_pad
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputc
    _fputs->_fputc
    _abs->___awmod
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _UART_Enviar_Cadena->_UART_Enviar_Caracter
    _Asignar_Minutos_Timer0->___xxtofl

Critical Paths under _low_isr in COMRAM

    _Atencion_Int_Timer_0->i1___flmul

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___fltol
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _Inicializar_Sistema->_Asignar_Minutos_Timer0
    _Asignar_Minutos_Timer0->___xxtofl

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    ___fltol->___fldiv

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   34559
                                             53 BANK0      1     1      0
                                             34 BANK1      4     4      0
             _Asignar_Minutos_Timer0
                _Inicializar_Sistema
              _Lectura_Frecuencia_tx
                 _Lectura_Numero_Est
                           _Leer_ADC
                _SPI_Enviar_Caracter
               _SPI_Recibir_Caracter
                 _UART_Enviar_Cadena
               _UART_Enviar_Caracter
                            ___fldiv
                            ___flmul
                            ___fltol
                            ___lldiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    16     15   23371
                                              5 BANK1     29    14     15
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5   21910
                                             49 BANK0      1     1      0
                                              0 BANK1      5     0      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           17    12      5   20783
                                             35 BANK0     14     9      5
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                10     6      4    6969
                                             22 BANK0     10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     683
                                             30 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     713
                                             30 COMRAM     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   8     5      3    1591
                                              2 BANK0      8     5      3
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     683
                                             30 COMRAM     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13     9      4    8593
                                             22 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4640
                                             34 COMRAM     1     1      0
                                             12 BANK0     10     4      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2058
                                              5 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1303
                                             30 COMRAM     4     0      4
                                              0 BANK0      5     5      0
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     289
                                              2 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1063
                                             30 COMRAM     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1103
                                             30 COMRAM     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4    1106
                                             30 COMRAM     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     781
                                             30 COMRAM     5     5      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     932
                                             47 BANK0      6     2      4
                                             13 BANK1      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    2986
                                             10 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    2723
                                             35 BANK0     12     4      8
                                              0 BANK1     13    13      0
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Enviar_Cadena                                   2     0      2     456
                                             31 COMRAM     2     0      2
               _UART_Enviar_Caracter
 ---------------------------------------------------------------------------------
 (1) _UART_Enviar_Caracter                                 1     1      0      31
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Recibir_Caracter                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Enviar_Caracter                                  1     1      0      31
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Leer_ADC                                             4     2      2       0
                                             30 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Lectura_Numero_Est                                   3     3      0       0
                                             30 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lectura_Frecuencia_tx                                3     3      0       0
                                             30 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Inicializar_Sistema                                  0     0      0     391
             _Asignar_Minutos_Timer0
                     _Configurar_ADC
                     _Configurar_SPI
                  _Configurar_Timer0
                  _Configurar_Timer2
      _Inicializar_Administrador_PIN
              _Inicializar_Oscilador
                   _Inicializar_UART
 ---------------------------------------------------------------------------------
 (2) _Inicializar_UART                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Inicializar_Oscilador                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Inicializar_Administrador_PIN                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Configurar_Timer2                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Configurar_Timer0                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Configurar_SPI                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Configurar_ADC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Asignar_Minutos_Timer0                               4     0      4     391
                                             10 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _low_isr                                              5     5      0    1774
                                             25 COMRAM     5     5      0
               _Atencion_Int_Timer_0
               _Atencion_Int_Timer_2
 ---------------------------------------------------------------------------------
 (10) _Atencion_Int_Timer_2                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Atencion_Int_Timer_0                                0     0      0    1774
                          i1___flmul
                          i1___fltol
 ---------------------------------------------------------------------------------
 (11) i1___fltol                                          10     6      4     255
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (11) i1___flmul                                          25    17      8    1519
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _high_isr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Asignar_Minutos_Timer0
     ___xxtofl (ARG)
   _Inicializar_Sistema
     _Asignar_Minutos_Timer0
     _Configurar_ADC
     _Configurar_SPI
     _Configurar_Timer0
     _Configurar_Timer2
     _Inicializar_Administrador_PIN
     _Inicializar_Oscilador
     _Inicializar_UART
   _Lectura_Frecuencia_tx
   _Lectura_Numero_Est
   _Leer_ADC
   _SPI_Enviar_Caracter
   _SPI_Recibir_Caracter
   _UART_Enviar_Cadena
     _UART_Enviar_Caracter
   _UART_Enviar_Caracter
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___fltol
     ___fldiv (ARG)
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___lldiv
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul
         _utoa
           ___lwdiv
           ___lwmod
           _pad

 _low_isr (ROOT)
   _Atencion_Int_Timer_0
     i1___flmul
     i1___fltol
   _Atencion_Int_Timer_2

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      37        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     26      C7       7       77.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     36      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      40       1       68.1%
BITBIGSFRhlh        19      0       0      21        0.0%
BITBIGSFRlhlll      10      0       0      33        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRlll         D      0       0      35        0.0%
BITBIGSFRlhhll       B      0       0      29        0.0%
BITBIGSFRlhlh        8      0       0      30        0.0%
BITBIGSFRlhhhll      7      0       0      28        0.0%
BITBIGSFRlhhhll      7      0       0      27        0.0%
BITBIGSFRlhllhh      7      0       0      31        0.0%
BITBIGSFRlhllhl      7      0       0      32        0.0%
BITBIGSFRlhhhhl      3      0       0      24        0.0%
BITBIGSFRlhhhhh      2      0       0      23        0.0%
BITBIGSFRlhhhlh      1      0       0      26        0.0%
BITBIGSFRlhhhhl      1      0       0      25        0.0%
BITBIGSFRllh         1      0       0      34        0.0%
BITBIGSFRhll         1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A7      36        0.0%
DATA                 0      0     1A7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Apr 24 00:55:17 2023

                      _DATOS_LISTOS_SENSOR_AFM 00B1                                   ___fldiv@aexp 01AD  
                                 ___fldiv@bexp 01AC                                   ___fldiv@sign 01A5  
                        ?_SPI_Recibir_Caracter 0001                                    _SSPSTATbits 0FC7  
                                 ___awdiv@sign 00C9                                    i1___flmul@a 0005  
                                  i1___flmul@b 0001                                             bsr 0FE0  
                          ___wmul@multiplicand 0021                       _datos_sensores_afm_radio 013C  
                                          l305 0948                                            l330 0BDE  
                                          l322 0B64                                            l314 0AEA  
                                          l325 0BCC                                            l317 0B52  
                                          l309 0AD8                                            l339 0F94  
                                          l630 2292                                            l572 27F2  
                                          l578 2808                                            l597 27B4  
                                          _PR2 0FCB                                            _abs 26AE  
                                          _pad 22A4                                   i1___fltol@f1 0001  
                                 ___awmod@sign 00C9                               _suma_lectura_adc 0088  
                                          wreg 0FE8                                   ___flmul@aexp 00DF  
                                 ___flmul@bexp 00E0                                   ___flmul@sign 00DE  
                                 ___flmul@temp 00E9                                   ___flmul@prod 00E5  
                                 ___fltol@exp1 00FC                                           l1104 2570  
                                         ?_abs 00CA                                           l1304 22D2  
                                         l1217 1020                                           l1234 1298  
                                         l1226 1212                                           l1227 120E  
                                         l1315 1B0A                                           l1317 1B12  
                                         l1190 177C                                           l1318 1B40  
                                         l1094 244A                                           l1336 1D7A  
                                         l1265 1CE4                                           l1258 1C66  
                                         l1338 1D82                                           l1187 17D0  
                                         l1196 17FA                                           l1198 185A  
                                         l1199 1856                                           l1385 26D6  
                                         l5111 1256                                           l5015 0FCC  
                                         l5033 100C                                           l5017 0FD0  
                                         l5201 1D0A                                           l5115 1274  
                                         l5043 103E                                           l5035 1010  
                                         l5019 0FE0                                           l5203 1D16  
                                         l5127 12B6                                           l5091 11D8  
                                         l5155 1EAE                                           l5139 1E60  
                                         l5219 1D56                                           l7003 1A7A  
                                         l7011 1AB0                                           l5085 11BA  
                                         l5173 1EEE                                           l5165 1EC6  
                                         l6301 21E0                                           ?_pad 00D4  
                                         l5167 1ED2                                           l5159 1EBE  
                                         l5191 1C9A                                           l5183 1C76  
                                         l6311 2200                                           l7015 1ABA  
                                         l7031 2604                                           l5193 1CA6  
                                         l6401 22BC                                           l7009 1A90  
                                         l7033 261E                                           l5195 1CCC  
                                         l6315 220A                                           l6331 2336  
                                         l6411 22F4                                           l7131 0920  
                                         l7107 08A0                                           l4805 2456  
                                         l4901 168E                                           l5189 1C94  
                                         l6341 2358                                           l6405 22CA  
                                         l6319 2218                                           l6351 237A  
                                         l6335 2342                                           l6271 2696  
                                         l6407 22DC                                           l7119 08C0  
                                         l7135 092A                                           l4809 247E  
                                         l6257 2116                                           l6441 1B34  
                                         l6425 1AF8                                           l7305 0EC8  
                                         l4683 27FC                                           l4923 16FA  
                                         l4915 16DE                                           l4851 2250  
                                         l6355 2388                                           l6347 2370  
                                         l6339 2350                                           l6267 2680  
                                         l7307 0EE0                                           l7219 0B5E  
                                         l7163 0A94                                           l7147 0944  
                                         l7091 087E                                           l4941 1788  
                                         l4933 1756                                           l4909 16C4  
                                         l4861 2284                                           l6293 21C2  
                                         l6365 2418                                           l7309 0EE6  
                                         l4871 1614                                           l6287 21B2  
                                         l6447 1B50                                           l6367 2420  
                                         l7335 0F70                                           l7327 0F40  
                                         l7247 0BD8                                           l7191 0AE4  
                                         l7167 0A98                                           l4953 17E6  
                                         l4881 163A                                           l4849 2244  
                                         l6473 1C04                                           l6457 1BB0  
                                         l6377 2440                                           l6393 2566  
                                         l6385 2546                                           l4947 17CE  
                                         l4891 1668                                           l6299 21D8  
                                         l6387 254E                                           l4877 1634  
                                         l7269 0DC6                                           l4983 18CC  
                                         l4959 180C                                           l7295 0EA0  
                                         l4993 190A                                           l4897 1688  
                                         l6489 1D9A                                           l4995 190E  
                                         l4987 18FC                                           l4979 18A4  
                                         l6499 1DEE                                           l7299 0EA8  
                                         l6953 20B0                                           l6957 20D8  
                                         l6973 195E                                           l6977 1968  
                                         l6969 1952                                           l6987 19BE  
                                         l6979 1990                                           l6999 1A34  
                                         STR_1 082D                                           STR_2 082B  
                                         STR_3 082B                                           STR_4 0801  
                                         STR_5 0824                                           u5020 184E  
                                         u5200 1208                                           u5060 18B4  
                                         u5070 18DC                                           u5240 1264  
                                         u5160 102C                                           u5320 1ED8  
                                         u5400 1D20                                           u5250 1282  
                                         u4700 2476                                           u7020 26BC  
                                         u7100 1BC0                                           u4710 249E  
                                         u5270 1E4E                                           u7030 1AE6  
                                         u4800 25D0                                           u5280 1E80  
                                         u7120 1BD6                                           u7040 1AE8  
                                         u7200 1E0E                                           u4810 25E0  
                                         u7130 1BE4                                           u7210 1E1C  
                                         u8010 0DB2                                           u4707 246C  
                                         u4820 25F0                                           u7140 1BE8  
                                         u7220 1E20                                           u4717 2494  
                                         u5285 1E74                                           u4806 25D2  
                                         u4750 2584                                           u4816 25E2  
                                         u4760 258E                                           u4840 2254  
                                         u8120 0F1E                                           u4826 25F2  
                                         u4770 259E                                           u4780 25AE  
                                         u8028 0DB6                                           u8045 0DD8  
                                         u4790 25C6                                           u4766 2590  
                                         u4758 2586                                           u8047 0DDA  
                                         u4776 25A0                                           u4786 25B0  
                                         u7700 20F4                                           u4798 25C8  
                                         u6830 21E4                                           u6760 210E  
                                         u6930 2424                                           u6780 2156  
                                         u7750 19EC                                           u6960 2552  
                                         u6890 235C                                           _TMR2 0FCC  
                  __end_of_Inicializar_Sistema 2676                                           abs@a 00CA  
                                         _dbuf 0178                                           _main 0830  
                                         _dtoa 1ADE                                _Lectura_ADC_CH0 00AE  
                                i1___flmul@grs 000F                                           _prec 0026  
                                         pad@i 00DA                                           pad@p 00D8  
                                         fsr1h 0FE2                                           fsr2h 0FDA  
                                         indf1 0FE7                                           indf2 0FDF  
                                         fsr1l 0FE1                                           pad@w 00DC  
                                         fsr2l 0FD9                                           btemp 0041  
                                         _utoa 1D68                                  _frec_tx_datos 00BA  
                                         prodh 0FF4                                           prodl 0FF3  
                                         start 0062                                ___fldiv@new_exp 01A6  
                       _Asignar_Minutos_Timer0 27DA                                   ___param_bank 0000  
                                        ??_abs 00CC                                          ??_pad 0023  
                                ___fltol@sign1 00FB                                          ?_main 0001  
                                        ?_dtoa 00DE                                __end_of___fldiv 191A  
                              __end_of___awdiv 2222                                __end_of___awmod 2392  
                              __end_of___flmul 12CC                                __end_of___fltol 1F00  
                              __end_of___lldiv 22A4                                          ?_utoa 00DE  
                              ___awdiv@divisor 0021                                          _T2CON 0FCA  
                              __end_of___lwdiv 2454                 ?_Inicializar_Administrador_PIN 0001  
                                        i1l107 0048                                __end_of___lwmod 257A  
                              ___awdiv@counter 00C8                                          _RCREG 0FAE  
                                 vfpfcnvrt@fmt 00ED                                _num_de_estacion 00B9  
                                        _TMR0H 0FD7                                          _TMR0L 0FD6  
                                        _SPBRG 0FAF                                          _TXREG 0FAD  
                                        _flags 0036                                 i1___flmul@aexp 000E  
                          read_prec_or_width@c 00CF                                 i1___flmul@bexp 0013  
                          read_prec_or_width@n 00D0                                          _fputc 20FE  
                                        _fputs 2676                                 i1___flmul@sign 000D  
                               i1___flmul@temp 0018                                 i1___flmul@prod 0014  
                                        pad@fp 00D4                                          _width 0024  
                                        _putch 2822                                          main@i 01C6  
                                        main@j 01C5                                          main@k 01C4  
                                        dtoa@d 00E0                                          dtoa@i 00E9  
                                        dtoa@p 00E4                                          dtoa@s 00E8  
                                        dtoa@w 00E6                                __end_of_low_isr 0062  
                                        tablat 0FF5                                 i1___fltol@exp1 000A  
                                        ttemp5 0042                                          ttemp6 0045  
                                        ttemp7 0049                                          utoa@d 00E0  
                                        utoa@i 00E6                                          utoa@p 00E2  
                                        utoa@w 00E4                                          status 0FD8  
                                        wtemp8 0042                                __end_of_sprintf 2538  
                       _HABILITAR_TX_DATOS_AFM 00B5                     __end_of_UART_Enviar_Cadena 24A6  
                              __initialization 24A6                               __end_of_Leer_ADC 27C6  
                       ??_SPI_Recibir_Caracter 001F                                   __end_of_main 0FA0  
                                 __end_of_dtoa 1C26                                   __end_of_utoa 1E42  
                         _contador_pluviometro 00C1                              _dato_spi_low_band 0070  
                                       ??_main 00FD                                         ??_dtoa 0024  
                                       ??_utoa 0024                                  __activetblptr 0002  
                   __end_of_read_prec_or_width 20FE                             _NIVEL_UNBRAL_500MV 00FE  
                                       ?_fputc 001F                                         ?_fputs 00CD  
                                       _ADRESH 0FC4                                         _ADRESL 0FC3  
                             ___awdiv@dividend 001F                                         ?_putch 0001  
                __end_of_Inicializar_Oscilador 281A                                         i1l1217 134C  
                                       i1l1234 15C4                                         i1l1226 153E  
                                       i1l1227 153A                                         i1l3401 1338  
                                       i1l3411 136A                                         i1l3403 133C  
                                       i1l3333 1F1E                                         i1l3511 23FC  
                                       i1l3361 1F8C                                         i1l3353 1F78  
                                       i1l3521 1FDC                                         i1l3531 2018  
                                       i1l3453 14E6                                         i1l3349 1F68  
                                       i1l3533 201C                                         i1l3525 1FF8  
                                       i1l3383 12F8                                         i1l3367 1FA8  
                                       i1l3359 1F80                                         i1l3543 2058  
                                       i1l3527 1FFC                                         i1l3519 1FD8  
                                       i1l3385 12FC                                         i1l3537 2038  
                                       i1l3483 15A0                                         i1l3459 1504  
                                       i1l3387 130C                                         i1l3539 203C  
                                       i1l3495 15E2                                         i1l3479 1582  
                                vfpfcnvrt@done 00F2                                         _SPBRGH 0FB0  
                                       _SSPBUF 0FC9                               __end_of___xxtofl 1D68  
                             _Inicializar_UART 27C6                                   vfprintf@cfmt 00F9  
                             __end_of_high_isr 2820                                         ___wmul 2734  
                                    ??___fldiv 00F3                                      ??___awdiv 0023  
                                    ??___awmod 0023                                      ??___flmul 00DA  
                                    ??___fltol 01AE                                      ??___lldiv 001F  
                                    ??___lwdiv 0023                                      ??___lwmod 0023  
                         read_prec_or_width@ap 00CB                                         clear_0 24C4  
                                       clear_1 24D0                                         clear_2 24DC  
                             ___awdiv@quotient 00CA                                ___awmod@divisor 0021  
                                       isa$std 0001                                ___awmod@counter 00C8  
                                       pad@buf 00D6                                         dtoa@fp 00DE  
                    _check_sum_valor_calculado 0096                              __end_ofi1___flmul 15F8  
                            __end_ofi1___fltol 1FBA                                         fputc@c 001F  
                                       fputs@c 00D1                        _lectura_sensor_low_band 009A  
                                       fputs@i 00D2                                         fputs@s 00CD  
                                 __mediumconst 0000                                      ??_low_isr 001A  
                                       tblptrh 0FF7                                         tblptrl 0FF6  
                                       tblptru 0FF8                                i1___fltol@sign1 0009  
                        _Lectura_Frecuencia_tx 25BC                                         putch@c 0001  
                             __end_of_vfprintf 263C                                         utoa@fp 00DE  
                           _dato_spi_high_band 006C                                      ??_sprintf 0024  
                                 ___xxtofl@arg 00CE                                   ___xxtofl@exp 00CD  
                                 ___xxtofl@val 001F                                     __accesstop 0060  
                      __end_of__initialization 24E2                                  ___rparam_used 0001  
                                   ___fltol@f1 00F7                             _dato_spi_full_band 0074  
                               __pcstackCOMRAM 0001                                  _ALARMA_ACTIVA 00B7  
                                 __pidataBANK0 2820                                  __end_of_fputc 219E  
                                __end_of_fputs 26AE                                _HABILITAR_TASK0 00C0  
                              _HABILITAR_TASK1 00BF                                _HABILITAR_TASK2 00BE  
                              _HABILITAR_TASK3 00BD                                _HABILITAR_TASK4 00BC  
                              _HABILITAR_TASK5 003F                                _HABILITAR_TASK6 003E  
                              _HABILITAR_TASK7 003D                                _HABILITAR_TASK8 003C  
                              _HABILITAR_TASK9 003B                                  __end_of_putch 2824  
                                      ??_fputc 00C8                                        ??_fputs 0023  
                                    ?_Leer_ADC 001F                                        ??_putch 001F  
                                   __pbssBANK0 0060                                     __pbssBANK1 0100  
                          _temp_num_minutos_t0 0080                        ?_Asignar_Minutos_Timer0 00D2  
                 _lectura_sensor_low_band_test 0094                                        ?___wmul 001F  
                                    ?___xxtofl 001F                         ?_Lectura_Frecuencia_tx 0001  
                      _medida_nivel_bateria_pc 008E                                        _SSPCON1 0FC6  
                                   ??_Leer_ADC 0021                                      ?_high_isr 0001  
                                      _SSPSTAT 0FC7                                     _cont_task0 0032  
                                   _cont_task1 0030                                     _cont_task2 002E  
                                   _cont_task3 002C                                     _cont_task4 002A  
                                   _cont_task5 0028                                     _cont_task6 00AC  
                                   _cont_task7 00AA                                     _cont_task8 00A8  
                                   _cont_task9 00A6                 __end_of_Asignar_Minutos_Timer0 27EC  
              ??_Inicializar_Administrador_PIN 001F                                        __Hparam 0000  
                                      __Lparam 0000                   __end_of_Atencion_Int_Timer_0 2402  
                 __end_of_Atencion_Int_Timer_2 205E                                        ___fldiv 15F8  
                                      ___awdiv 219E                                        ___awmod 2322  
                                      ___flmul 0FA0                                        ___fltol 1E42  
                                      ___lldiv 2222                                        ___lwdiv 2402  
                     _lectura_sensor_high_band 0098                                        ___lwmod 2538  
                                    ?_vfprintf 01A1                                   __psmallconst 0800  
                          _SPI_Enviar_Caracter 27EC                                        __pcinit 24A6  
                                      __ramtop 0800                                        __ptext0 0830  
                                      __ptext1 24F0                                        __ptext2 25FE  
                                      __ptext3 191A                                        __ptext4 1D68  
                                      __ptext5 2538                                        __ptext6 2402  
                                      __ptext7 205E                                        __ptext8 2734  
                                      __ptext9 1ADE                                      _T0CONbits 0FD5  
                           _UART_Enviar_Cadena 2454                                      _T2CONbits 0FCA  
                        read_prec_or_width@fmt 00CA                                     ??___xxtofl 00C8  
                             ___awmod@dividend 001F                                        _low_isr 0018  
                     _lectura_sensor_full_band 009C                       __end_of_Inicializar_UART 27DA  
                                      _sprintf 24F0                            ?_UART_Enviar_Cadena 0020  
                                   ??_high_isr 0001                                 __pintcode_body 281A  
                         end_of_initialization 24E2                           ?_SPI_Enviar_Caracter 0001  
                                      fputc@fp 0021                                  __Lmediumconst 0000  
                                      int_func 281A                                        fputs@fp 00CF  
                           _read_prec_or_width 205E                                ___lldiv@divisor 00CC  
                              ___lldiv@counter 0023                    _HABILITAR_TAREA_MINUTOS_SOL 00BB  
                            __end_of_vfpfcnvrt 1ADE                                      _RCSTAbits 0FAB  
                                      postdec2 0FDD                            ?_read_prec_or_width 00CA  
                                      postinc0 0FEE                                        postinc1 0FE6  
                                      postinc2 0FDE                           ??_UART_Enviar_Cadena 0022  
                             vfpfcnvrt@convarg 00F4                                     ??_vfprintf 0024  
                                    _PORTAbits 0F80                                      _PORTBbits 0F81  
                                    _PORTCbits 0F82                                  ___xxtofl@sign 00CC  
                                    _TRISAbits 0F92                                      _TRISBbits 0F93  
                                    _TRISCbits 0F94                           ??_read_prec_or_width 00CD  
                                    i1___flmul 12CC                                    ___fldiv@grs 01A8  
                                    i1___fltol 1F00                                    ___fldiv@rem 01A1  
                        ??_SPI_Enviar_Caracter 001F                                    ___flmul@grs 00E1  
                        _Inicializar_Oscilador 2810                            _contador_minutos_t0 0034  
                                    _TXSTAbits 0FAC                                  _check_sum_str 0198  
        __end_of_Inicializar_Administrador_PIN 2734                  _Inicializar_Administrador_PIN 270C  
                       _frecuencia_tx_datos_pc 00B6                   __end_of_UART_Enviar_Caracter 2806  
                     UART_Enviar_Cadena@cadena 0020                                    vfpfcnvrt@ap 00EE  
                                  vfpfcnvrt@cp 00F8                                    vfpfcnvrt@fp 00EB  
                               __end_of___wmul 275A                                    _BAUDCONbits 0FB8  
                            _Configurar_Timer0 275A                              _Configurar_Timer2 277A  
                             _HABILITAR_TASK10 003A                             ?_Configurar_Timer0 0001  
                           ?_Configurar_Timer2 0001                            start_initialization 24A6  
                               _Configurar_ADC 26E0                                 _NUM_MINUTOS_T0 00C4  
                               _Configurar_SPI 2798                                    __end_of_abs 26E0  
                   _HABILITAR_VERIFICAR_UMBRAL 00B3                                    __end_of_pad 2322  
                                   ?i1___flmul 0001                                     ?i1___fltol 0001  
                          ??_Configurar_Timer0 001F                            ??_Configurar_Timer2 001F  
                         _Atencion_Int_Timer_0 2392                           _Atencion_Int_Timer_2 1FBA  
                   __end_of_Lectura_Numero_Est 25BC                                    vfprintf@fmt 01A3  
                                     ??___wmul 0023                       _HABILITAR_LECTURA_SENSOR 00B4  
                    __end_of_Configurar_Timer0 277A                      __end_of_Configurar_Timer2 2798  
                                  __pdataBANK0 00FE                        ??_Lectura_Frecuencia_tx 001F  
                       __end_of_Configurar_ADC 270C                                      ___fldiv@a 00EF  
                                    ___fldiv@b 00EB                         __end_of_Configurar_SPI 27B2  
                        _datos_sensores_afm_pc 0100                                      ___flmul@a 00D6  
                                    ___flmul@b 00D2                                    __pbssCOMRAM 0024  
                                __pcstackBANK0 00C8                                  __pcstackBANK1 01A1  
                          _Inicializar_Sistema 263C                          ?_Atencion_Int_Timer_0 0001  
                        ?_Atencion_Int_Timer_2 0001                         ?_Inicializar_Oscilador 0001  
                             ___lwdiv@dividend 001F                                      _dtoa$2490 00E2  
                         ?_Inicializar_Sistema 0001                                      __pintcode 0008  
  _contador_lectura_adc@interrupt_manager$F662 00B8        _suma_lectura_adc@interrupt_manager$F663 007C  
  _contador_lectura_adc@interrupt_manager$F913 0037        _suma_lectura_adc@interrupt_manager$F914 0064  
                                     ?___fldiv 00EB                                       ?___awdiv 001F  
                                     ?___awmod 001F                                       ?___flmul 00D2  
                                     ?___fltol 00F7                                       ?___lldiv 00C8  
                                     ?___lwdiv 001F                                       ?___lwmod 001F  
                                _dato_recibido 0039                                    __pintcodelo 0018  
                main@HABILITAR_ENVIAR_DATOS_PC 01C3                                    __smallconst 0800  
                              ?_Configurar_ADC 0001                                ?_Configurar_SPI 0001  
                                     ?_low_isr 0001                                    ??i1___flmul 0009  
                                  ??i1___fltol 0005                              ?_Inicializar_UART 0001  
                             ___lwdiv@quotient 00C9                                       ?_sprintf 01A6  
                         _UART_Enviar_Caracter 27FA                             ??_Inicializar_UART 001F  
                               ___wmul@product 00C8                                       _LATBbits 0F8A  
                                     _IPR1bits 0F9F                                       _PIE1bits 0F9D  
                                     i1u264_20 1F0C                          ??_Inicializar_Sistema 0023  
                                     i1u265_20 1F3C                                       i1u265_25 1F32  
                                     i1u282_20 1534                                       i1u290_20 1FC8  
                                     i1u291_20 1FE8                                       i1u292_20 2008  
                                     i1u269_20 1F92                                       i1u293_20 2028  
                                     i1u286_20 1590                                       i1u278_20 1358  
                                     i1u294_20 2048                                       i1u287_20 15AE  
                                     _PIR1bits 0F9E                                       _UCFGbits 0F6F  
                                     _RCONbits 0FD0                       _medida_nivel_bateria_dec 008C  
                     _medida_nivel_bateria_flt 0068                                       _UCONbits 0F6D  
                                    _vfpfcnvrt 191A                                     _ADCON0bits 0FC2  
                                   _ADCON1bits 0FC1                                     _ADCON2bits 0FC0  
                            ___wmul@multiplier 001F                                    _cont_task10 00A4  
                       ??_Atencion_Int_Timer_0 001A                         ??_Atencion_Int_Timer_2 0001  
                        ?_UART_Enviar_Caracter 0001                                    _INTCON2bits 0FF1  
                 __end_of_SPI_Recibir_Caracter 2810                                       _Leer_ADC 27B2  
                     UART_Enviar_Caracter@dato 001F                  Asignar_Minutos_Timer0@minutos 00D2  
                              _dato_spi_temp_f 00A2                                _dato_spi_temp_h 009E  
                              _dato_spi_temp_l 00A0                                       __Hrparam 0000  
                                   vfprintf@ap 01A4                                       __Lrparam 0000  
                                   vfprintf@fp 01A1                                     ?_vfpfcnvrt 00EB  
                                   _FLANCO_NEG 00C2                                     sprintf@fmt 01A8  
                                     ___xxtofl 1C26                    __end_of_SPI_Enviar_Caracter 27FA  
                              ___lwdiv@divisor 0021                       ??_Asignar_Minutos_Timer0 0023  
                       _resultado_adc_flotante 0084                                ___lwdiv@counter 00C8  
                                     __ptext10 22A4                                       __ptext11 2676  
                                     __ptext20 0FA0                                       __ptext12 20FE  
                                     __ptext21 15F8                                       __ptext13 2822  
                                     __ptext30 27C6                                       __ptext22 2454  
                                     __ptext14 26AE                                       __ptext31 2810  
                                     __ptext23 27FA                                       __ptext15 2322  
                                     __ptext40 2392                                       __ptext32 270C  
                                     __ptext24 2806                                       __ptext16 219E  
                                     __ptext41 1F00                                       __ptext33 277A  
                                     __ptext25 27EC                                       __ptext17 1C26  
                                     __ptext42 12CC                                       __ptext34 275A  
                                     __ptext26 27B2                                       __ptext18 2222  
                                     __ptext35 2798                                       __ptext27 257A  
                                     __ptext19 1E42                                       __ptext36 26E0  
                                     __ptext28 25BC                                       __ptext37 27DA  
                                     __ptext29 263C                                       __ptext39 1FBA  
                                     _high_isr 0008                      SPI_Enviar_Caracter@spi_tx 001F  
                         _DATOS_LISTOS_ADC_BAT 00B2                             _longitud_paq_datos 0038  
                       _HABLILITAR_LECTURA_CH0 00C3                                       isa$xinst 0000  
                                     int$flags 0041                             _Lectura_Numero_Est 257A  
                                     _vfprintf 25FE                  __end_of_Lectura_Frecuencia_tx 25FE  
                          ?_Lectura_Numero_Est 0001                                     _INTCONbits 0FF2  
                       ??_UART_Enviar_Caracter 001F                        _DATOS_LISTOS_EMPAQUEADO 00B0  
                      ??_Inicializar_Oscilador 001F                                       intlevel1 0000  
                                     intlevel2 0000                                      sprintf@ap 01B5  
                             ___lwmod@dividend 001F                               ___lldiv@dividend 00C8  
                         ??_Lectura_Numero_Est 001F                                     _OSCCONbits 0FD3  
                         _contador_lectura_adc 0040                               ??_Configurar_ADC 001F  
                             ??_Configurar_SPI 001F                           _SPI_Recibir_Caracter 2806  
                                  ??_vfpfcnvrt 00F0                                       sprintf@f 01B7  
                                     sprintf@s 01A6                               ___lldiv@quotient 001F  
                              ___lwmod@divisor 0021                             _CONT_TIEMPO_CHEKEO 0090  
                              ___lwmod@counter 0023  _resultado_adc_flotante@interrupt_manager$F664 0078  
_resultado_adc_flotante@interrupt_manager$F915 0060                                    _SSPCON1bits 0FC6  
                           _CONT_TIEMPO_UMBRAL 0092  
